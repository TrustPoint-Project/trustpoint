2025-01-13 13:16:22 - django.utils.autoreload - INFO - Watching for file changes with StatReloader
2025-01-13 13:52:28 - django.utils.autoreload - INFO - C:\Users\sven.bergmann\PycharmProjects\trustpoint\trustpoint\trustpoint\settings.py changed, reloading.
2025-01-13 13:52:29 - django.utils.autoreload - INFO - Watching for file changes with StatReloader
2025-01-13 15:18:43 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-13 15:18:43 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-13 15:18:43 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-13 15:18:43 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-13 15:18:43 - django.request - WARNING - Not Found: /.well-known/est/simpleenroll
2025-01-13 15:28:09 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-13 15:28:09 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-13 15:28:09 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-13 15:28:09 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-13 15:28:09 - django.request - WARNING - Not Found: /.well-known/est/simpleenroll
2025-01-13 15:34:10 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-13 15:34:10 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-13 15:34:10 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-13 15:34:10 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-13 15:34:44 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-13 15:34:44 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-13 15:34:44 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-13 15:34:44 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-13 15:36:14 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-13 15:36:14 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-13 15:36:14 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-13 15:36:14 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-13 15:36:35 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-13 15:36:35 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-13 15:36:35 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-13 15:36:35 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-13 15:36:49 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-13 15:36:49 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-13 15:36:49 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-13 15:36:49 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-13 15:39:07 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-13 15:39:08 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-13 15:39:08 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-13 15:39:08 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-13 15:39:08 - django.request - WARNING - Not Found: /.well-known/est/simpleenroll
2025-01-13 15:39:45 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-13 15:39:45 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-13 15:39:45 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-13 15:39:45 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-13 15:39:46 - django.request - WARNING - Not Found: /.well-known/est/simpleenroll
2025-01-13 15:40:20 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-13 15:40:20 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-13 15:40:20 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-13 15:40:20 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-13 15:40:20 - django.request - WARNING - Not Found: /.well-known/est/simpleenroll
2025-01-14 07:05:32 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-14 07:05:32 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-14 07:05:32 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-14 07:05:32 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-14 07:05:32 - django.request - WARNING - Not Found: /.well-known/est/simpleenroll
2025-01-14 08:14:35 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-14 08:14:35 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-14 08:14:35 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-14 08:14:35 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-14 08:14:35 - django.request - WARNING - Not Found: /.well-known/est/simpleenroll
2025-01-14 08:38:05 - django.utils.autoreload - INFO - Watching for file changes with StatReloader
2025-01-14 15:28:46 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-14 15:28:46 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-14 15:28:46 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-14 15:28:46 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-15 13:11:50 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-15 13:11:50 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-15 13:11:50 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-15 13:11:50 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 12:39:00 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 12:39:00 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 12:39:00 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 12:39:00 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 12:39:00 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 12:39:00 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 12:39:00 - parse - DEBUG - format 'I have a certificate signing request (CSR) with "{request_type}" parameters' -> 'I have a certificate signing request \\(CSR\\) with "(?P<request_type>.+?)" parameters'
2025-01-20 12:39:00 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 12:39:00 - parse - DEBUG - format 'the server should return a response indicating "{expected_result}"' -> 'the server should return a response indicating "(?P<expected_result>.+?)"'
2025-01-20 12:39:00 - parse - DEBUG - format '"{response_data}" should be included in the server\'s response' -> '"(?P<response_data>.+?)" should be included in the server\'s response'
2025-01-20 12:39:00 - parse - DEBUG - format 'I have a certificate ID for "{certificate_type}" certificate' -> 'I have a certificate ID for "(?P<certificate_type>.+?)" certificate'
2025-01-20 12:39:00 - parse - DEBUG - format 'I send a revocation request to the LCMP server' -> 'I send a revocation request to the LCMP server'
2025-01-20 12:39:00 - parse - DEBUG - format 'the server should return a response indicating "{expected_result}"' -> 'the server should return a response indicating "(?P<expected_result>.+?)"'
2025-01-20 12:40:29 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 12:40:29 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 12:40:29 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 12:40:29 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 12:40:29 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 12:40:29 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 12:40:29 - parse - DEBUG - format 'I have a certificate signing request (CSR) with "{request_type}" parameters' -> 'I have a certificate signing request \\(CSR\\) with "(?P<request_type>.+?)" parameters'
2025-01-20 12:40:29 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 12:40:29 - parse - DEBUG - format 'the server should return a response indicating "{expected_result}"' -> 'the server should return a response indicating "(?P<expected_result>.+?)"'
2025-01-20 12:40:29 - parse - DEBUG - format '"{response_data}" should be included in the server\'s response' -> '"(?P<response_data>.+?)" should be included in the server\'s response'
2025-01-20 12:40:29 - parse - DEBUG - format 'I have a certificate ID for "{certificate_type}" certificate' -> 'I have a certificate ID for "(?P<certificate_type>.+?)" certificate'
2025-01-20 12:40:29 - parse - DEBUG - format 'I send a revocation request to the LCMP server' -> 'I send a revocation request to the LCMP server'
2025-01-20 12:40:29 - parse - DEBUG - format 'the certificate should be "{revocation_status}"' -> 'the certificate should be "(?P<revocation_status>.+?)"'
2025-01-20 12:40:29 - parse - DEBUG - format 'I send a malformed request to the LCMP server' -> 'I send a malformed request to the LCMP server'
2025-01-20 12:40:29 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 12:40:29 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 12:40:29 - parse - DEBUG - format 'the error code should indicate "{error_code}"' -> 'the error code should indicate "(?P<error_code>.+?)"'
2025-01-20 12:40:29 - parse - DEBUG - format 'I attempt to send a request with "{auth_status}" credentials' -> 'I attempt to send a request with "(?P<auth_status>.+?)" credentials'
2025-01-20 12:40:29 - parse - DEBUG - format 'the server should return "{expected_response}"' -> 'the server should return "(?P<expected_response>.+?)"'
2025-01-20 12:40:29 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 12:40:29 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 12:40:29 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 12:40:29 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 12:43:07 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 12:43:07 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 12:43:07 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 12:43:07 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 12:43:07 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 12:43:07 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 12:43:07 - parse - DEBUG - format 'I have a certificate signing request (CSR) with "{request_type}" parameters' -> 'I have a certificate signing request \\(CSR\\) with "(?P<request_type>.+?)" parameters'
2025-01-20 12:43:07 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 12:43:07 - parse - DEBUG - format 'the server should return a response indicating "{expected_result}"' -> 'the server should return a response indicating "(?P<expected_result>.+?)"'
2025-01-20 12:43:07 - parse - DEBUG - format '"{response_data}" should be included in the server\'s response' -> '"(?P<response_data>.+?)" should be included in the server\'s response'
2025-01-20 12:43:07 - parse - DEBUG - format 'I have a certificate ID for "{certificate_type}" certificate' -> 'I have a certificate ID for "(?P<certificate_type>.+?)" certificate'
2025-01-20 12:43:07 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-20 12:43:07 - parse - DEBUG - format 'the certificate should be "{revocation_status}"' -> 'the certificate should be "(?P<revocation_status>.+?)"'
2025-01-20 12:43:07 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-20 12:43:07 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 12:43:07 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 12:43:07 - parse - DEBUG - format 'the error code should indicate "{error_code}"' -> 'the error code should indicate "(?P<error_code>.+?)"'
2025-01-20 12:43:07 - parse - DEBUG - format 'I attempt to send a request with "{auth_status}" credentials' -> 'I attempt to send a request with "(?P<auth_status>.+?)" credentials'
2025-01-20 12:43:07 - parse - DEBUG - format 'the server should return "{expected_response}"' -> 'the server should return "(?P<expected_response>.+?)"'
2025-01-20 12:43:07 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 12:43:07 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 12:43:07 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 12:43:07 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 12:52:47 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 12:52:47 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 12:52:47 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 12:52:47 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 12:52:47 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 12:52:47 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 12:52:47 - parse - DEBUG - format 'I have a certificate signing request (CSR) with "{request_type}" parameters' -> 'I have a certificate signing request \\(CSR\\) with "(?P<request_type>.+?)" parameters'
2025-01-20 12:52:47 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 12:52:47 - parse - DEBUG - format 'the server should return a response indicating "{expected_result}"' -> 'the server should return a response indicating "(?P<expected_result>.+?)"'
2025-01-20 12:52:47 - parse - DEBUG - format '"{response_data}" should be included in the server\'s response' -> '"(?P<response_data>.+?)" should be included in the server\'s response'
2025-01-20 12:52:47 - parse - DEBUG - format 'I have a certificate ID for "{certificate_type}" certificate' -> 'I have a certificate ID for "(?P<certificate_type>.+?)" certificate'
2025-01-20 12:52:47 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-20 12:52:47 - parse - DEBUG - format 'the certificate should be "{revocation_status}"' -> 'the certificate should be "(?P<revocation_status>.+?)"'
2025-01-20 12:52:47 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-20 12:52:47 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 12:52:47 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 12:52:47 - parse - DEBUG - format 'the error code should indicate "{error_code}"' -> 'the error code should indicate "(?P<error_code>.+?)"'
2025-01-20 12:52:47 - parse - DEBUG - format 'I attempt to send a request with "{auth_status}" credentials' -> 'I attempt to send a request with "(?P<auth_status>.+?)" credentials'
2025-01-20 12:52:47 - parse - DEBUG - format 'the server should return "{expected_response}"' -> 'the server should return "(?P<expected_response>.+?)"'
2025-01-20 12:52:47 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 12:52:47 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 12:52:47 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 12:52:47 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 14:48:10 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 14:48:10 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 14:48:10 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 14:48:10 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 14:48:10 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 14:48:10 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 14:48:10 - parse - DEBUG - format 'I have a certificate signing request (CSR) with "{request_type}" parameters' -> 'I have a certificate signing request \\(CSR\\) with "(?P<request_type>.+?)" parameters'
2025-01-20 14:48:10 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 14:48:10 - parse - DEBUG - format 'the server should return a response indicating "{expected_result}"' -> 'the server should return a response indicating "(?P<expected_result>.+?)"'
2025-01-20 14:48:10 - parse - DEBUG - format '"{response_data}" should be included in the server\'s response' -> '"(?P<response_data>.+?)" should be included in the server\'s response'
2025-01-20 14:48:10 - parse - DEBUG - format 'I have a certificate ID for "{certificate_type}" certificate' -> 'I have a certificate ID for "(?P<certificate_type>.+?)" certificate'
2025-01-20 14:48:10 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-20 14:48:10 - parse - DEBUG - format 'the certificate should be "{revocation_status}"' -> 'the certificate should be "(?P<revocation_status>.+?)"'
2025-01-20 14:48:10 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-20 14:48:10 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 14:48:10 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 14:48:10 - parse - DEBUG - format 'the error code should indicate "{error_code}"' -> 'the error code should indicate "(?P<error_code>.+?)"'
2025-01-20 14:48:10 - parse - DEBUG - format 'I attempt to send a request with "{auth_status}" credentials' -> 'I attempt to send a request with "(?P<auth_status>.+?)" credentials'
2025-01-20 14:48:10 - parse - DEBUG - format 'the server should return "{expected_response}"' -> 'the server should return "(?P<expected_response>.+?)"'
2025-01-20 14:48:10 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 14:48:10 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 14:48:10 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 14:48:10 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 14:48:10 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-20 14:48:10 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-20 14:48:10 - parse - DEBUG - format 'the admin opens "{component}"' -> 'the admin opens "(?P<component>.+?)"'
2025-01-20 14:48:10 - parse - DEBUG - format 'the admin creates an identity using "{method}"' -> 'the admin creates an identity using "(?P<method>.+?)"'
2025-01-20 14:48:10 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-20 14:48:10 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-20 14:48:10 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-20 14:48:10 - parse - DEBUG - format 'the admin edits an identity using "{method}"' -> 'the admin edits an identity using "(?P<method>.+?)"'
2025-01-20 14:48:10 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-20 14:48:10 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-20 14:48:10 - parse - DEBUG - format 'the admin deletes an identity using "{method}"' -> 'the admin deletes an identity using "(?P<method>.+?)"'
2025-01-20 14:48:10 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-20 14:48:10 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-20 14:48:10 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-20 14:50:23 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-20 14:50:23 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-20 14:50:23 - parse - DEBUG - format 'the admin opens "{component}"' -> 'the admin opens "(?P<component>.+?)"'
2025-01-20 14:50:23 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-20 14:50:23 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 14:50:23 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 14:50:23 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 14:50:23 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 14:50:23 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 14:50:23 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 14:50:23 - parse - DEBUG - format 'I have a certificate signing request (CSR) with "{request_type}" parameters' -> 'I have a certificate signing request \\(CSR\\) with "(?P<request_type>.+?)" parameters'
2025-01-20 14:50:23 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 14:50:23 - parse - DEBUG - format 'the server should return a response indicating "{expected_result}"' -> 'the server should return a response indicating "(?P<expected_result>.+?)"'
2025-01-20 14:50:23 - parse - DEBUG - format '"{response_data}" should be included in the server\'s response' -> '"(?P<response_data>.+?)" should be included in the server\'s response'
2025-01-20 14:50:23 - parse - DEBUG - format 'I have a certificate ID for "{certificate_type}" certificate' -> 'I have a certificate ID for "(?P<certificate_type>.+?)" certificate'
2025-01-20 14:50:23 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-20 14:50:23 - parse - DEBUG - format 'the certificate should be "{revocation_status}"' -> 'the certificate should be "(?P<revocation_status>.+?)"'
2025-01-20 14:50:23 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-20 14:50:23 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 14:50:23 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 14:50:23 - parse - DEBUG - format 'the error code should indicate "{error_code}"' -> 'the error code should indicate "(?P<error_code>.+?)"'
2025-01-20 14:50:23 - parse - DEBUG - format 'I attempt to send a request with "{auth_status}" credentials' -> 'I attempt to send a request with "(?P<auth_status>.+?)" credentials'
2025-01-20 14:50:23 - parse - DEBUG - format 'the server should return "{expected_response}"' -> 'the server should return "(?P<expected_response>.+?)"'
2025-01-20 14:50:23 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 14:50:23 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 14:50:23 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 14:50:23 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 14:50:23 - parse - DEBUG - format 'the admin creates an identity using "{method}"' -> 'the admin creates an identity using "(?P<method>.+?)"'
2025-01-20 14:50:23 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-20 14:50:23 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-20 14:50:23 - parse - DEBUG - format 'the admin edits an identity using "{method}"' -> 'the admin edits an identity using "(?P<method>.+?)"'
2025-01-20 14:50:23 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-20 14:50:23 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-20 14:50:23 - parse - DEBUG - format 'the admin deletes an identity using "{method}"' -> 'the admin deletes an identity using "(?P<method>.+?)"'
2025-01-20 14:50:23 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-20 14:50:23 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-20 14:50:23 - parse - DEBUG - format 'the admin renews the certificate of an identity using "{method}"' -> 'the admin renews the certificate of an identity using "(?P<method>.+?)"'
2025-01-20 14:50:23 - parse - DEBUG - format 'the certificate should be renewed' -> 'the certificate should be renewed'
2025-01-20 14:50:23 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-20 14:58:18 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-20 14:58:18 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-20 14:58:18 - parse - DEBUG - format 'the admin opens "{component}"' -> 'the admin opens "(?P<component>.+?)"'
2025-01-20 14:58:18 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-20 14:58:18 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 14:58:18 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 14:58:18 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 14:58:18 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 14:58:18 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 14:58:18 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 14:58:18 - parse - DEBUG - format 'I have a certificate signing request (CSR) with "{request_type}" parameters' -> 'I have a certificate signing request \\(CSR\\) with "(?P<request_type>.+?)" parameters'
2025-01-20 14:58:18 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 14:58:18 - parse - DEBUG - format 'the server should return a response indicating "{expected_result}"' -> 'the server should return a response indicating "(?P<expected_result>.+?)"'
2025-01-20 14:58:18 - parse - DEBUG - format '"{response_data}" should be included in the server\'s response' -> '"(?P<response_data>.+?)" should be included in the server\'s response'
2025-01-20 14:58:18 - parse - DEBUG - format 'I have a certificate ID for "{certificate_type}" certificate' -> 'I have a certificate ID for "(?P<certificate_type>.+?)" certificate'
2025-01-20 14:58:18 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-20 14:58:18 - parse - DEBUG - format 'the certificate should be "{revocation_status}"' -> 'the certificate should be "(?P<revocation_status>.+?)"'
2025-01-20 14:58:18 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-20 14:58:18 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 14:58:18 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 14:58:18 - parse - DEBUG - format 'the error code should indicate "{error_code}"' -> 'the error code should indicate "(?P<error_code>.+?)"'
2025-01-20 14:58:18 - parse - DEBUG - format 'I attempt to send a request with "{auth_status}" credentials' -> 'I attempt to send a request with "(?P<auth_status>.+?)" credentials'
2025-01-20 14:58:18 - parse - DEBUG - format 'the server should return "{expected_response}"' -> 'the server should return "(?P<expected_response>.+?)"'
2025-01-20 14:58:18 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 14:58:18 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 14:58:18 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 14:58:18 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 14:58:18 - parse - DEBUG - format 'the admin creates an identity using "{method}"' -> 'the admin creates an identity using "(?P<method>.+?)"'
2025-01-20 14:58:18 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-20 14:58:18 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-20 14:58:18 - parse - DEBUG - format 'the admin edits an identity using "{method}"' -> 'the admin edits an identity using "(?P<method>.+?)"'
2025-01-20 14:58:18 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-20 14:58:18 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-20 14:58:18 - parse - DEBUG - format 'the admin deletes an identity using "{method}"' -> 'the admin deletes an identity using "(?P<method>.+?)"'
2025-01-20 14:58:18 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-20 14:58:18 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-20 14:58:18 - parse - DEBUG - format 'the admin renews the certificate of an identity using "{method}"' -> 'the admin renews the certificate of an identity using "(?P<method>.+?)"'
2025-01-20 14:58:18 - parse - DEBUG - format 'the certificate should be renewed' -> 'the certificate should be renewed'
2025-01-20 14:58:18 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-20 14:58:58 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-20 14:58:58 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-20 14:58:58 - parse - DEBUG - format 'the admin opens "{component}"' -> 'the admin opens "(?P<component>.+?)"'
2025-01-20 14:58:58 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-20 14:58:58 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 14:58:58 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 14:58:58 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 14:58:58 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 14:58:58 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 14:58:58 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 14:58:58 - parse - DEBUG - format 'I have a certificate signing request (CSR) with "{request_type}" parameters' -> 'I have a certificate signing request \\(CSR\\) with "(?P<request_type>.+?)" parameters'
2025-01-20 14:58:58 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 14:58:58 - parse - DEBUG - format 'the server should return a response indicating "{expected_result}"' -> 'the server should return a response indicating "(?P<expected_result>.+?)"'
2025-01-20 14:58:58 - parse - DEBUG - format '"{response_data}" should be included in the server\'s response' -> '"(?P<response_data>.+?)" should be included in the server\'s response'
2025-01-20 14:58:58 - parse - DEBUG - format 'I have a certificate ID for "{certificate_type}" certificate' -> 'I have a certificate ID for "(?P<certificate_type>.+?)" certificate'
2025-01-20 14:58:58 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-20 14:58:58 - parse - DEBUG - format 'the certificate should be "{revocation_status}"' -> 'the certificate should be "(?P<revocation_status>.+?)"'
2025-01-20 14:58:58 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-20 14:58:58 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 14:58:58 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 14:58:58 - parse - DEBUG - format 'the error code should indicate "{error_code}"' -> 'the error code should indicate "(?P<error_code>.+?)"'
2025-01-20 14:58:58 - parse - DEBUG - format 'I attempt to send a request with "{auth_status}" credentials' -> 'I attempt to send a request with "(?P<auth_status>.+?)" credentials'
2025-01-20 14:58:58 - parse - DEBUG - format 'the server should return "{expected_response}"' -> 'the server should return "(?P<expected_response>.+?)"'
2025-01-20 14:58:58 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 14:58:58 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 14:58:58 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 14:58:58 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 14:58:58 - parse - DEBUG - format 'the admin creates an identity using "{method}"' -> 'the admin creates an identity using "(?P<method>.+?)"'
2025-01-20 14:58:58 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-20 14:58:58 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-20 14:58:58 - parse - DEBUG - format 'the admin edits an identity using "{method}"' -> 'the admin edits an identity using "(?P<method>.+?)"'
2025-01-20 14:58:58 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-20 14:58:58 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-20 14:58:58 - parse - DEBUG - format 'the admin deletes an identity using "{method}"' -> 'the admin deletes an identity using "(?P<method>.+?)"'
2025-01-20 14:58:58 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-20 14:58:58 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-20 14:58:58 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-20 14:58:58 - parse - DEBUG - format 'the certificate should be renewed' -> 'the certificate should be renewed'
2025-01-20 14:58:58 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-20 14:59:47 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-20 14:59:47 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-20 14:59:47 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-20 14:59:47 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-20 14:59:47 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 14:59:47 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 14:59:47 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 14:59:47 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 14:59:47 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 14:59:47 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 14:59:47 - parse - DEBUG - format 'I have a certificate signing request (CSR) with "{request_type}" parameters' -> 'I have a certificate signing request \\(CSR\\) with "(?P<request_type>.+?)" parameters'
2025-01-20 14:59:47 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 14:59:47 - parse - DEBUG - format 'the server should return a response indicating "{expected_result}"' -> 'the server should return a response indicating "(?P<expected_result>.+?)"'
2025-01-20 14:59:47 - parse - DEBUG - format '"{response_data}" should be included in the server\'s response' -> '"(?P<response_data>.+?)" should be included in the server\'s response'
2025-01-20 14:59:47 - parse - DEBUG - format 'I have a certificate ID for "{certificate_type}" certificate' -> 'I have a certificate ID for "(?P<certificate_type>.+?)" certificate'
2025-01-20 14:59:47 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-20 14:59:47 - parse - DEBUG - format 'the certificate should be "{revocation_status}"' -> 'the certificate should be "(?P<revocation_status>.+?)"'
2025-01-20 14:59:47 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-20 14:59:47 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 14:59:47 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 14:59:47 - parse - DEBUG - format 'the error code should indicate "{error_code}"' -> 'the error code should indicate "(?P<error_code>.+?)"'
2025-01-20 14:59:47 - parse - DEBUG - format 'I attempt to send a request with "{auth_status}" credentials' -> 'I attempt to send a request with "(?P<auth_status>.+?)" credentials'
2025-01-20 14:59:47 - parse - DEBUG - format 'the server should return "{expected_response}"' -> 'the server should return "(?P<expected_response>.+?)"'
2025-01-20 14:59:47 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 14:59:47 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 14:59:47 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 14:59:47 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 14:59:47 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-20 14:59:47 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-20 14:59:47 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-20 14:59:47 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-20 14:59:47 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-20 14:59:47 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-20 14:59:47 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-20 14:59:47 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-20 14:59:47 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-20 14:59:47 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-20 14:59:47 - parse - DEBUG - format 'the certificate should be renewed' -> 'the certificate should be renewed'
2025-01-20 14:59:47 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-20 15:03:48 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-20 15:03:48 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-20 15:03:48 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-20 15:03:48 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-20 15:03:48 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 15:03:48 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 15:03:48 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 15:03:48 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 15:03:48 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 15:03:48 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 15:03:48 - parse - DEBUG - format 'I have a certificate signing request (CSR) with "{request_type}" parameters' -> 'I have a certificate signing request \\(CSR\\) with "(?P<request_type>.+?)" parameters'
2025-01-20 15:03:48 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 15:03:48 - parse - DEBUG - format 'the server should return a response indicating "{expected_result}"' -> 'the server should return a response indicating "(?P<expected_result>.+?)"'
2025-01-20 15:03:48 - parse - DEBUG - format '"{response_data}" should be included in the server\'s response' -> '"(?P<response_data>.+?)" should be included in the server\'s response'
2025-01-20 15:03:48 - parse - DEBUG - format 'I have a certificate ID for "{certificate_type}" certificate' -> 'I have a certificate ID for "(?P<certificate_type>.+?)" certificate'
2025-01-20 15:03:48 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-20 15:03:48 - parse - DEBUG - format 'the certificate should be "{revocation_status}"' -> 'the certificate should be "(?P<revocation_status>.+?)"'
2025-01-20 15:03:48 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-20 15:03:48 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 15:03:48 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 15:03:48 - parse - DEBUG - format 'the error code should indicate "{error_code}"' -> 'the error code should indicate "(?P<error_code>.+?)"'
2025-01-20 15:03:48 - parse - DEBUG - format 'I attempt to send a request with "{auth_status}" credentials' -> 'I attempt to send a request with "(?P<auth_status>.+?)" credentials'
2025-01-20 15:03:48 - parse - DEBUG - format 'the server should return "{expected_response}"' -> 'the server should return "(?P<expected_response>.+?)"'
2025-01-20 15:03:48 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 15:03:48 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 15:03:48 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 15:03:48 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 15:03:48 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-20 15:03:48 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-20 15:03:48 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-20 15:03:48 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-20 15:03:48 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-20 15:03:48 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-20 15:03:48 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-20 15:03:48 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-20 15:03:48 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-20 15:03:48 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-20 15:03:48 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-20 15:03:48 - parse - DEBUG - format 'the certificate should be renewed' -> 'the certificate should be renewed'
2025-01-20 15:03:48 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-20 15:15:00 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-20 15:15:00 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-20 15:15:00 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-20 15:15:00 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-20 15:15:00 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 15:15:00 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 15:15:00 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 15:15:00 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 15:15:00 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 15:15:00 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 15:15:00 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-20 15:15:00 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 15:15:00 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-20 15:15:00 - parse - DEBUG - format '"{response_data}" should be included in the server\'s response' -> '"(?P<response_data>.+?)" should be included in the server\'s response'
2025-01-20 15:15:00 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-20 15:15:00 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-20 15:15:00 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-20 15:15:00 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-20 15:15:00 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 15:15:00 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 15:15:00 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-20 15:15:00 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-20 15:15:00 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-20 15:15:00 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 15:15:00 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 15:15:00 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 15:15:00 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 15:15:00 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-20 15:15:00 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-20 15:15:00 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-20 15:15:00 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-20 15:15:00 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-20 15:15:00 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-20 15:15:00 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-20 15:15:00 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-20 15:15:00 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-20 15:15:00 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-20 15:15:00 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-20 15:15:00 - parse - DEBUG - format 'the certificate should be renewed' -> 'the certificate should be renewed'
2025-01-20 15:18:32 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-20 15:18:32 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-20 15:18:32 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-20 15:18:32 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-20 15:18:32 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 15:18:32 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 15:18:32 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 15:18:32 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 15:18:32 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 15:18:32 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 15:18:32 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-20 15:18:32 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 15:18:32 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-20 15:18:32 - parse - DEBUG - format '"{response_data}" should be included in the server\'s response' -> '"(?P<response_data>.+?)" should be included in the server\'s response'
2025-01-20 15:18:32 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-20 15:18:32 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-20 15:18:32 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-20 15:18:32 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-20 15:18:32 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 15:18:32 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 15:18:32 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-20 15:18:32 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-20 15:18:32 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-20 15:18:32 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 15:18:32 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 15:18:32 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 15:18:32 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 15:18:32 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-20 15:18:32 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-20 15:18:32 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-20 15:18:32 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-20 15:18:32 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-20 15:18:32 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-20 15:18:32 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-20 15:18:32 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-20 15:18:32 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-20 15:18:32 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-20 15:18:32 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-20 15:18:32 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-20 15:18:32 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-20 15:20:38 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-20 15:20:38 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-20 15:20:38 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-20 15:20:38 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-20 15:20:38 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 15:20:38 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 15:20:38 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 15:20:38 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 15:20:38 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 15:20:38 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 15:20:38 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-20 15:20:38 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 15:20:38 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-20 15:20:38 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-20 15:20:38 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-20 15:20:38 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-20 15:20:38 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-20 15:20:38 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-20 15:20:38 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 15:20:38 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 15:20:38 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-20 15:20:38 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-20 15:20:38 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-20 15:20:38 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 15:20:38 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 15:20:38 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 15:20:38 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 15:20:38 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-20 15:20:38 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-20 15:20:38 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-20 15:20:38 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-20 15:20:38 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-20 15:20:38 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-20 15:20:38 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-20 15:20:38 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-20 15:20:38 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-20 15:20:38 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-20 15:20:38 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-20 15:20:38 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-20 15:20:38 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-20 15:24:48 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-20 15:24:48 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-20 15:24:48 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-20 15:24:48 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-20 15:24:48 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-20 15:24:48 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-20 15:24:48 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-20 15:24:48 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-20 15:24:48 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-20 15:24:48 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-20 15:24:48 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-20 15:24:48 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-20 15:24:48 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-20 15:24:48 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-20 15:24:48 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-20 15:24:48 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-20 15:24:48 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-20 15:24:48 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-20 15:24:48 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-20 15:24:48 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-20 15:24:48 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-20 15:24:48 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-20 15:24:48 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-20 15:24:48 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-20 15:24:48 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-20 15:24:48 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-20 15:24:48 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-20 15:24:48 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-20 15:24:48 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-20 15:24:48 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-20 15:24:48 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-20 15:24:48 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-20 15:24:48 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-20 15:24:48 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-20 15:24:48 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-20 15:24:48 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-20 15:24:48 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-20 15:24:48 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-20 15:24:48 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-20 15:24:48 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 08:38:06 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 08:38:06 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 08:38:06 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 08:38:06 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 08:38:06 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 08:38:06 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 08:38:06 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 08:38:06 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 08:38:06 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-23 08:38:06 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 08:38:06 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 08:38:06 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 08:38:06 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 08:38:06 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 08:38:06 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 08:38:06 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 08:38:06 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-23 08:38:06 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 08:38:06 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 08:38:06 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 08:38:06 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 08:38:06 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 08:38:06 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 08:38:06 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 08:38:06 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 08:38:06 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 08:38:06 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 08:38:06 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 08:38:06 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 08:38:06 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 08:38:06 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 08:38:06 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 08:38:06 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 08:38:06 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 08:38:06 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 08:38:06 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 08:38:06 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 08:38:06 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 08:38:06 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 08:38:06 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 08:38:06 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-23 08:39:22 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 08:39:22 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 08:39:22 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 08:39:22 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 08:39:22 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 08:39:22 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 08:39:22 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 08:39:22 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 08:39:22 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-23 08:39:22 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 08:39:22 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 08:39:22 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 08:39:22 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 08:39:22 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 08:39:22 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 08:39:22 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 08:39:22 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-23 08:39:22 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 08:39:22 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 08:39:22 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 08:39:22 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 08:39:22 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 08:39:22 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 08:39:22 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 08:39:22 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 08:39:22 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 08:39:22 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 08:39:22 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 08:39:22 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 08:39:22 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 08:39:22 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 08:39:22 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 08:39:22 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 08:39:22 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 08:39:22 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 08:39:22 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 08:39:22 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 08:39:22 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 08:39:22 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 08:39:22 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 08:39:22 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 08:39:44 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 08:39:44 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 08:39:44 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 08:39:44 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 08:39:44 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 08:39:44 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 08:39:44 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 08:39:44 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 08:39:44 - parse - DEBUG - format 'the LCMP server is running and reachable' -> 'the LCMP server is running and reachable'
2025-01-23 08:39:44 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 08:39:44 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 08:39:44 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 08:39:44 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 08:39:44 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 08:39:44 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 08:39:44 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 08:39:44 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-23 08:39:44 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 08:39:44 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 08:39:44 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 08:39:44 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 08:39:44 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 08:39:44 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 08:39:44 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 08:39:44 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 08:39:44 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 08:39:44 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 08:39:44 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 08:39:44 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 08:39:44 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 08:39:44 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 08:39:44 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 08:39:44 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 08:39:44 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 08:39:44 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 08:39:44 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 08:39:44 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 08:39:44 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 08:39:44 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 08:39:44 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 08:39:44 - parse - DEBUG - format 'a valid certificate ID for an active certificate' -> 'a valid certificate ID for an active certificate'
2025-01-23 08:39:44 - parse - DEBUG - format 'the certificate is about to expire' -> 'the certificate is about to expire'
2025-01-23 08:39:44 - parse - DEBUG - format 'the certificate has already expired' -> 'the certificate has already expired'
2025-01-23 08:39:44 - parse - DEBUG - format 'I send a renewal request for the certificate' -> 'I send a renewal request for the certificate'
2025-01-23 08:39:44 - parse - DEBUG - format 'the server should process the renewal request' -> 'the server should process the renewal request'
2025-01-23 08:39:44 - parse - DEBUG - format 'a renewed certificate should be issued with a new expiration date' -> 'a renewed certificate should be issued with a new expiration date'
2025-01-23 08:39:44 - parse - DEBUG - format 'the renewed certificate should be usable for secure communication' -> 'the renewed certificate should be usable for secure communication'
2025-01-23 08:39:44 - parse - DEBUG - format 'the server should reject the renewal request' -> 'the server should reject the renewal request'
2025-01-23 08:39:44 - parse - DEBUG - format 'the response should indicate "{error_reason}"' -> 'the response should indicate "(?P<error_reason>.+?)"'
2025-01-23 08:39:44 - parse - DEBUG - format 'a valid certificate ID for revocation' -> 'a valid certificate ID for revocation'
2025-01-23 08:39:44 - parse - DEBUG - format 'an invalid certificate ID' -> 'an invalid certificate ID'
2025-01-23 08:39:44 - parse - DEBUG - format 'I send a revocation request for the certificate' -> 'I send a revocation request for the certificate'
2025-01-23 08:39:44 - parse - DEBUG - format 'the server should revoke the certificate' -> 'the server should revoke the certificate'
2025-01-23 08:39:44 - parse - DEBUG - format 'the certificate status should change to "{revocation_status}"' -> 'the certificate status should change to "(?P<revocation_status>.+?)"'
2025-01-23 08:39:44 - parse - DEBUG - format 'the server should reject the request' -> 'the server should reject the request'
2025-01-23 09:09:42 - parse - DEBUG - format 'the server is running and reachable' -> 'the server is running and reachable'
2025-01-23 09:09:42 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 09:09:42 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 09:09:42 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 09:09:42 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 09:09:42 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 09:09:42 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 09:09:42 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 09:09:42 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 09:09:42 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 09:09:42 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 09:09:42 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 09:09:42 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 09:09:42 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 09:09:42 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 09:09:42 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 09:09:42 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-23 09:09:42 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 09:09:42 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 09:09:42 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 09:09:42 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 09:09:42 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 09:09:42 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 09:09:42 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 09:09:42 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 09:09:42 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 09:09:42 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 09:09:42 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 09:09:42 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 09:09:42 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 09:09:42 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 09:09:43 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 09:09:43 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 09:09:43 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 09:09:43 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 09:09:43 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 09:09:43 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 09:09:43 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 09:09:43 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 09:09:43 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 09:09:43 - parse - DEBUG - format 'a valid certificate ID for an active certificate' -> 'a valid certificate ID for an active certificate'
2025-01-23 09:09:43 - parse - DEBUG - format 'the certificate is about to expire' -> 'the certificate is about to expire'
2025-01-23 09:09:43 - parse - DEBUG - format 'the certificate has already expired' -> 'the certificate has already expired'
2025-01-23 09:09:43 - parse - DEBUG - format 'I send a renewal request for the certificate' -> 'I send a renewal request for the certificate'
2025-01-23 09:09:43 - parse - DEBUG - format 'the server should process the renewal request' -> 'the server should process the renewal request'
2025-01-23 09:09:43 - parse - DEBUG - format 'a renewed certificate should be issued with a new expiration date' -> 'a renewed certificate should be issued with a new expiration date'
2025-01-23 09:09:43 - parse - DEBUG - format 'the renewed certificate should be usable for secure communication' -> 'the renewed certificate should be usable for secure communication'
2025-01-23 09:09:43 - parse - DEBUG - format 'the server should reject the renewal request' -> 'the server should reject the renewal request'
2025-01-23 09:09:43 - parse - DEBUG - format 'the response should indicate "{error_reason}"' -> 'the response should indicate "(?P<error_reason>.+?)"'
2025-01-23 09:09:43 - parse - DEBUG - format 'a valid certificate ID for revocation' -> 'a valid certificate ID for revocation'
2025-01-23 09:09:43 - parse - DEBUG - format 'an invalid certificate ID' -> 'an invalid certificate ID'
2025-01-23 09:09:43 - parse - DEBUG - format 'I send a revocation request for the certificate' -> 'I send a revocation request for the certificate'
2025-01-23 09:09:43 - parse - DEBUG - format 'the server should revoke the certificate' -> 'the server should revoke the certificate'
2025-01-23 09:09:43 - parse - DEBUG - format 'the certificate status should change to "{revocation_status}"' -> 'the certificate status should change to "(?P<revocation_status>.+?)"'
2025-01-23 09:09:43 - parse - DEBUG - format 'the server should reject the request' -> 'the server should reject the request'
2025-01-23 09:09:43 - parse - DEBUG - format 'I have a valid API key or token for authentication' -> 'I have a valid API key or token for authentication'
2025-01-23 09:09:43 - parse - DEBUG - format 'the TrustPoint database contains existing resources for testing' -> 'the TrustPoint database contains existing resources for testing'
2025-01-23 09:09:43 - parse - DEBUG - format 'I have a valid endpoint "{endpoint}"' -> 'I have a valid endpoint "(?P<endpoint>.+?)"'
2025-01-23 09:09:43 - parse - DEBUG - format 'I have an invalid endpoint "{endpoint}"' -> 'I have an invalid endpoint "(?P<endpoint>.+?)"'
2025-01-23 09:09:43 - parse - DEBUG - format 'I have a valid payload "{payload}"' -> 'I have a valid payload "(?P<payload>.+?)"'
2025-01-23 09:09:43 - parse - DEBUG - format 'I have an invalid payload "{payload}"' -> 'I have an invalid payload "(?P<payload>.+?)"'
2025-01-23 09:09:43 - parse - DEBUG - format 'I have a valid partial payload "{payload}"' -> 'I have a valid partial payload "(?P<payload>.+?)"'
2025-01-23 09:09:43 - parse - DEBUG - format 'I send a GET request to "{endpoint}"' -> 'I send a GET request to "(?P<endpoint>.+?)"'
2025-01-23 09:09:43 - parse - DEBUG - format 'I send a POST request to "{endpoint}" with the payload' -> 'I send a POST request to "(?P<endpoint>.+?)" with the payload'
2025-01-23 09:09:43 - parse - DEBUG - format 'I send a PUT request to "{endpoint}" with the payload' -> 'I send a PUT request to "(?P<endpoint>.+?)" with the payload'
2025-01-23 09:09:43 - parse - DEBUG - format 'I send a DELETE request to "{endpoint}"' -> 'I send a DELETE request to "(?P<endpoint>.+?)"'
2025-01-23 09:09:43 - parse - DEBUG - format 'I send a PATCH request to "{endpoint}" with the payload' -> 'I send a PATCH request to "(?P<endpoint>.+?)" with the payload'
2025-01-23 09:09:43 - parse - DEBUG - format 'the server should return a status code of {status_code}' -> 'the server should return a status code of (?P<status_code>.+?)'
2025-01-23 09:14:14 - parse - DEBUG - format 'the server is running and reachable' -> 'the server is running and reachable'
2025-01-23 09:14:14 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 09:14:14 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 09:14:14 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 09:14:14 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 09:14:14 - parse - DEBUG - format 'the server should return a status code of {status_code}' -> 'the server should return a status code of (?P<status_code>.+?)'
2025-01-23 09:14:14 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 09:14:14 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 09:14:14 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 09:14:14 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 09:14:14 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 09:14:14 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 09:14:14 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 09:14:14 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 09:14:14 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 09:14:14 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 09:14:14 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 09:14:14 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-23 09:14:14 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 09:14:14 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 09:14:14 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 09:14:14 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 09:14:14 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 09:14:14 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 09:14:14 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 09:14:14 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 09:14:14 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 09:14:14 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 09:14:14 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 09:14:14 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 09:14:14 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 09:14:14 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 09:14:14 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 09:14:14 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 09:14:14 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 09:14:14 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 09:14:14 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 09:14:14 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 09:14:14 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 09:14:14 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 09:14:14 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 09:14:14 - parse - DEBUG - format 'a valid certificate ID for an active certificate' -> 'a valid certificate ID for an active certificate'
2025-01-23 09:14:14 - parse - DEBUG - format 'the certificate is about to expire' -> 'the certificate is about to expire'
2025-01-23 09:14:14 - parse - DEBUG - format 'the certificate has already expired' -> 'the certificate has already expired'
2025-01-23 09:14:14 - parse - DEBUG - format 'I send a renewal request for the certificate' -> 'I send a renewal request for the certificate'
2025-01-23 09:14:14 - parse - DEBUG - format 'the server should process the renewal request' -> 'the server should process the renewal request'
2025-01-23 09:14:14 - parse - DEBUG - format 'a renewed certificate should be issued with a new expiration date' -> 'a renewed certificate should be issued with a new expiration date'
2025-01-23 09:14:14 - parse - DEBUG - format 'the renewed certificate should be usable for secure communication' -> 'the renewed certificate should be usable for secure communication'
2025-01-23 09:14:14 - parse - DEBUG - format 'the server should reject the renewal request' -> 'the server should reject the renewal request'
2025-01-23 09:14:14 - parse - DEBUG - format 'the response should indicate "{error_reason}"' -> 'the response should indicate "(?P<error_reason>.+?)"'
2025-01-23 09:14:14 - parse - DEBUG - format 'a valid certificate ID for revocation' -> 'a valid certificate ID for revocation'
2025-01-23 09:14:14 - parse - DEBUG - format 'an invalid certificate ID' -> 'an invalid certificate ID'
2025-01-23 09:14:14 - parse - DEBUG - format 'I send a revocation request for the certificate' -> 'I send a revocation request for the certificate'
2025-01-23 09:14:14 - parse - DEBUG - format 'the server should revoke the certificate' -> 'the server should revoke the certificate'
2025-01-23 09:14:14 - parse - DEBUG - format 'the certificate status should change to "{revocation_status}"' -> 'the certificate status should change to "(?P<revocation_status>.+?)"'
2025-01-23 09:14:14 - parse - DEBUG - format 'the server should reject the request' -> 'the server should reject the request'
2025-01-23 09:14:14 - parse - DEBUG - format 'I have a valid API key or token for authentication' -> 'I have a valid API key or token for authentication'
2025-01-23 09:14:14 - parse - DEBUG - format 'the TrustPoint database contains existing resources for testing' -> 'the TrustPoint database contains existing resources for testing'
2025-01-23 09:14:14 - parse - DEBUG - format 'I have a valid endpoint "{endpoint}"' -> 'I have a valid endpoint "(?P<endpoint>.+?)"'
2025-01-23 09:14:14 - parse - DEBUG - format 'I have an invalid endpoint "{endpoint}"' -> 'I have an invalid endpoint "(?P<endpoint>.+?)"'
2025-01-23 09:14:14 - parse - DEBUG - format 'I have a valid payload "{payload}"' -> 'I have a valid payload "(?P<payload>.+?)"'
2025-01-23 09:14:14 - parse - DEBUG - format 'I have an invalid payload "{payload}"' -> 'I have an invalid payload "(?P<payload>.+?)"'
2025-01-23 09:14:14 - parse - DEBUG - format 'I have a valid partial payload "{payload}"' -> 'I have a valid partial payload "(?P<payload>.+?)"'
2025-01-23 09:14:14 - parse - DEBUG - format 'I send a GET request to "{endpoint}"' -> 'I send a GET request to "(?P<endpoint>.+?)"'
2025-01-23 09:14:14 - parse - DEBUG - format 'I send a POST request to "{endpoint}" with the payload' -> 'I send a POST request to "(?P<endpoint>.+?)" with the payload'
2025-01-23 09:14:14 - parse - DEBUG - format 'I send a PUT request to "{endpoint}" with the payload' -> 'I send a PUT request to "(?P<endpoint>.+?)" with the payload'
2025-01-23 09:14:14 - parse - DEBUG - format 'I send a DELETE request to "{endpoint}"' -> 'I send a DELETE request to "(?P<endpoint>.+?)"'
2025-01-23 09:14:14 - parse - DEBUG - format 'I send a PATCH request to "{endpoint}" with the payload' -> 'I send a PATCH request to "(?P<endpoint>.+?)" with the payload'
2025-01-23 09:14:14 - parse - DEBUG - format 'the response should include the requested resource details' -> 'the response should include the requested resource details'
2025-01-23 09:14:14 - parse - DEBUG - format 'the response should include the created resource details' -> 'the response should include the created resource details'
2025-01-23 09:14:14 - parse - DEBUG - format 'the response should include the updated resource details' -> 'the response should include the updated resource details'
2025-01-23 09:14:14 - parse - DEBUG - format 'the resource should no longer exist' -> 'the resource should no longer exist'
2025-01-23 09:14:14 - parse - DEBUG - format 'the response should indicate "{error_reason}"' -> 'the response should indicate "(?P<error_reason>.+?)"'
2025-01-23 09:15:28 - parse - DEBUG - format 'the server is running and reachable' -> 'the server is running and reachable'
2025-01-23 09:15:28 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 09:15:28 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 09:15:28 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 09:15:28 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 09:15:28 - parse - DEBUG - format 'the server should return a status code of {status_code}' -> 'the server should return a status code of (?P<status_code>.+?)'
2025-01-23 09:15:28 - parse - DEBUG - format 'the response should indicate "{error_reason}"' -> 'the response should indicate "(?P<error_reason>.+?)"'
2025-01-23 09:15:28 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 09:15:28 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 09:15:28 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 09:15:28 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 09:15:28 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 09:15:28 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 09:15:28 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 09:15:28 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 09:15:28 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 09:15:28 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 09:15:28 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 09:15:28 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-23 09:15:28 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 09:15:28 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 09:15:28 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 09:15:28 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 09:15:28 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 09:15:28 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 09:15:28 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 09:15:28 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 09:15:28 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 09:15:28 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 09:15:28 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 09:15:28 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 09:15:28 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 09:15:28 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 09:15:28 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 09:15:28 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 09:15:28 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 09:15:28 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 09:15:28 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 09:15:28 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 09:15:28 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 09:15:28 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 09:15:28 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 09:15:28 - parse - DEBUG - format 'a valid certificate ID for an active certificate' -> 'a valid certificate ID for an active certificate'
2025-01-23 09:15:28 - parse - DEBUG - format 'the certificate is about to expire' -> 'the certificate is about to expire'
2025-01-23 09:15:28 - parse - DEBUG - format 'the certificate has already expired' -> 'the certificate has already expired'
2025-01-23 09:15:28 - parse - DEBUG - format 'I send a renewal request for the certificate' -> 'I send a renewal request for the certificate'
2025-01-23 09:15:28 - parse - DEBUG - format 'the server should process the renewal request' -> 'the server should process the renewal request'
2025-01-23 09:15:28 - parse - DEBUG - format 'a renewed certificate should be issued with a new expiration date' -> 'a renewed certificate should be issued with a new expiration date'
2025-01-23 09:15:28 - parse - DEBUG - format 'the renewed certificate should be usable for secure communication' -> 'the renewed certificate should be usable for secure communication'
2025-01-23 09:15:28 - parse - DEBUG - format 'the server should reject the renewal request' -> 'the server should reject the renewal request'
2025-01-23 09:15:28 - parse - DEBUG - format 'a valid certificate ID for revocation' -> 'a valid certificate ID for revocation'
2025-01-23 09:15:28 - parse - DEBUG - format 'an invalid certificate ID' -> 'an invalid certificate ID'
2025-01-23 09:15:28 - parse - DEBUG - format 'I send a revocation request for the certificate' -> 'I send a revocation request for the certificate'
2025-01-23 09:15:28 - parse - DEBUG - format 'the server should revoke the certificate' -> 'the server should revoke the certificate'
2025-01-23 09:15:28 - parse - DEBUG - format 'the certificate status should change to "{revocation_status}"' -> 'the certificate status should change to "(?P<revocation_status>.+?)"'
2025-01-23 09:15:28 - parse - DEBUG - format 'the server should reject the request' -> 'the server should reject the request'
2025-01-23 09:15:28 - parse - DEBUG - format 'I have a valid API key or token for authentication' -> 'I have a valid API key or token for authentication'
2025-01-23 09:15:28 - parse - DEBUG - format 'the TrustPoint database contains existing resources for testing' -> 'the TrustPoint database contains existing resources for testing'
2025-01-23 09:15:28 - parse - DEBUG - format 'I have a valid endpoint "{endpoint}"' -> 'I have a valid endpoint "(?P<endpoint>.+?)"'
2025-01-23 09:15:28 - parse - DEBUG - format 'I have an invalid endpoint "{endpoint}"' -> 'I have an invalid endpoint "(?P<endpoint>.+?)"'
2025-01-23 09:15:28 - parse - DEBUG - format 'I have a valid payload "{payload}"' -> 'I have a valid payload "(?P<payload>.+?)"'
2025-01-23 09:15:28 - parse - DEBUG - format 'I have an invalid payload "{payload}"' -> 'I have an invalid payload "(?P<payload>.+?)"'
2025-01-23 09:15:28 - parse - DEBUG - format 'I have a valid partial payload "{payload}"' -> 'I have a valid partial payload "(?P<payload>.+?)"'
2025-01-23 09:15:28 - parse - DEBUG - format 'I send a GET request to "{endpoint}"' -> 'I send a GET request to "(?P<endpoint>.+?)"'
2025-01-23 09:15:28 - parse - DEBUG - format 'I send a POST request to "{endpoint}" with the payload' -> 'I send a POST request to "(?P<endpoint>.+?)" with the payload'
2025-01-23 09:15:28 - parse - DEBUG - format 'I send a PUT request to "{endpoint}" with the payload' -> 'I send a PUT request to "(?P<endpoint>.+?)" with the payload'
2025-01-23 09:15:28 - parse - DEBUG - format 'I send a DELETE request to "{endpoint}"' -> 'I send a DELETE request to "(?P<endpoint>.+?)"'
2025-01-23 09:15:28 - parse - DEBUG - format 'I send a PATCH request to "{endpoint}" with the payload' -> 'I send a PATCH request to "(?P<endpoint>.+?)" with the payload'
2025-01-23 09:15:28 - parse - DEBUG - format 'the response should include the requested resource details' -> 'the response should include the requested resource details'
2025-01-23 09:15:28 - parse - DEBUG - format 'the response should include the created resource details' -> 'the response should include the created resource details'
2025-01-23 09:15:28 - parse - DEBUG - format 'the response should include the updated resource details' -> 'the response should include the updated resource details'
2025-01-23 09:15:28 - parse - DEBUG - format 'the resource should no longer exist' -> 'the resource should no longer exist'
2025-01-23 09:15:28 - parse - DEBUG - format 'the response should indicate "{error_reason}"' -> 'the response should indicate "(?P<error_reason>.+?)"'
2025-01-23 09:31:23 - parse - DEBUG - format 'the server is running and reachable' -> 'the server is running and reachable'
2025-01-23 09:31:23 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 09:31:23 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 09:31:23 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 09:31:23 - parse - DEBUG - format 'the server should return a status code of {status_code}' -> 'the server should return a status code of (?P<status_code>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'the response should indicate {error_reason}' -> 'the response should indicate (?P<error_reason>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 09:31:23 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 09:31:23 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 09:31:23 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 09:31:23 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 09:31:23 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 09:31:23 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 09:31:23 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 09:31:23 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 09:31:23 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 09:31:23 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 09:31:23 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 09:31:23 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 09:31:23 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 09:31:23 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 09:31:23 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 09:31:23 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 09:31:23 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 09:31:23 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 09:31:23 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 09:31:23 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 09:31:23 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 09:31:23 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 09:31:23 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 09:31:23 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 09:31:23 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 09:31:23 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 09:31:23 - parse - DEBUG - format 'a valid certificate ID for an active certificate' -> 'a valid certificate ID for an active certificate'
2025-01-23 09:31:23 - parse - DEBUG - format 'the certificate is about to expire' -> 'the certificate is about to expire'
2025-01-23 09:31:23 - parse - DEBUG - format 'the certificate has already expired' -> 'the certificate has already expired'
2025-01-23 09:31:23 - parse - DEBUG - format 'I send a renewal request for the certificate' -> 'I send a renewal request for the certificate'
2025-01-23 09:31:23 - parse - DEBUG - format 'the server should process the renewal request' -> 'the server should process the renewal request'
2025-01-23 09:31:23 - parse - DEBUG - format 'a renewed certificate should be issued with a new expiration date' -> 'a renewed certificate should be issued with a new expiration date'
2025-01-23 09:31:23 - parse - DEBUG - format 'the renewed certificate should be usable for secure communication' -> 'the renewed certificate should be usable for secure communication'
2025-01-23 09:31:23 - parse - DEBUG - format 'the server should reject the renewal request' -> 'the server should reject the renewal request'
2025-01-23 09:31:23 - parse - DEBUG - format 'a valid certificate ID for revocation' -> 'a valid certificate ID for revocation'
2025-01-23 09:31:23 - parse - DEBUG - format 'an invalid certificate ID' -> 'an invalid certificate ID'
2025-01-23 09:31:23 - parse - DEBUG - format 'I send a revocation request for the certificate' -> 'I send a revocation request for the certificate'
2025-01-23 09:31:23 - parse - DEBUG - format 'the server should revoke the certificate' -> 'the server should revoke the certificate'
2025-01-23 09:31:23 - parse - DEBUG - format 'the certificate status should change to {revocation_status}' -> 'the certificate status should change to (?P<revocation_status>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'the server should reject the request' -> 'the server should reject the request'
2025-01-23 09:31:23 - parse - DEBUG - format 'I have a valid API key or token for authentication' -> 'I have a valid API key or token for authentication'
2025-01-23 09:31:23 - parse - DEBUG - format 'the TrustPoint database contains existing resources for testing' -> 'the TrustPoint database contains existing resources for testing'
2025-01-23 09:31:23 - parse - DEBUG - format 'I have a valid endpoint {endpoint}' -> 'I have a valid endpoint (?P<endpoint>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'I have an invalid endpoint {endpoint}' -> 'I have an invalid endpoint (?P<endpoint>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'I have a valid payload {payload}' -> 'I have a valid payload (?P<payload>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'I have an invalid payload {payload}' -> 'I have an invalid payload (?P<payload>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'I have a valid partial payload {payload}' -> 'I have a valid partial payload (?P<payload>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'I send a GET request to {endpoint}' -> 'I send a GET request to (?P<endpoint>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'I send a POST request to {endpoint} with the payload' -> 'I send a POST request to (?P<endpoint>.+?) with the payload'
2025-01-23 09:31:23 - parse - DEBUG - format 'I send a PUT request to {endpoint} with the payload' -> 'I send a PUT request to (?P<endpoint>.+?) with the payload'
2025-01-23 09:31:23 - parse - DEBUG - format 'I send a DELETE request to {endpoint}' -> 'I send a DELETE request to (?P<endpoint>.+?)'
2025-01-23 09:31:23 - parse - DEBUG - format 'I send a PATCH request to {endpoint} with the payload' -> 'I send a PATCH request to (?P<endpoint>.+?) with the payload'
2025-01-23 09:31:23 - parse - DEBUG - format 'the response should include the requested resource details' -> 'the response should include the requested resource details'
2025-01-23 09:31:23 - parse - DEBUG - format 'the response should include the created resource details' -> 'the response should include the created resource details'
2025-01-23 09:31:23 - parse - DEBUG - format 'the response should include the updated resource details' -> 'the response should include the updated resource details'
2025-01-23 09:31:23 - parse - DEBUG - format 'the resource should no longer exist' -> 'the resource should no longer exist'
2025-01-23 09:31:23 - parse - DEBUG - format 'the certificate status should change to {revocation_status}' -> 'the certificate status should change to (?P<revocation_status>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'the server is running and reachable' -> 'the server is running and reachable'
2025-01-23 09:32:18 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 09:32:18 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 09:32:18 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 09:32:18 - parse - DEBUG - format 'the server should return a status code of {status_code}' -> 'the server should return a status code of (?P<status_code>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'the response should indicate {error_reason}' -> 'the response should indicate (?P<error_reason>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'the certificate status should change to {revocation_status}' -> 'the certificate status should change to (?P<revocation_status>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 09:32:18 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 09:32:18 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 09:32:18 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 09:32:18 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 09:32:18 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 09:32:18 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 09:32:18 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 09:32:18 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 09:32:18 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 09:32:18 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 09:32:18 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 09:32:18 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 09:32:18 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 09:32:18 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 09:32:18 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 09:32:18 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 09:32:18 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 09:32:18 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 09:32:18 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 09:32:18 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 09:32:18 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 09:32:18 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 09:32:18 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 09:32:18 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 09:32:18 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 09:32:18 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 09:32:18 - parse - DEBUG - format 'a valid certificate ID for an active certificate' -> 'a valid certificate ID for an active certificate'
2025-01-23 09:32:18 - parse - DEBUG - format 'the certificate is about to expire' -> 'the certificate is about to expire'
2025-01-23 09:32:18 - parse - DEBUG - format 'the certificate has already expired' -> 'the certificate has already expired'
2025-01-23 09:32:18 - parse - DEBUG - format 'I send a renewal request for the certificate' -> 'I send a renewal request for the certificate'
2025-01-23 09:32:18 - parse - DEBUG - format 'the server should process the renewal request' -> 'the server should process the renewal request'
2025-01-23 09:32:18 - parse - DEBUG - format 'a renewed certificate should be issued with a new expiration date' -> 'a renewed certificate should be issued with a new expiration date'
2025-01-23 09:32:18 - parse - DEBUG - format 'the renewed certificate should be usable for secure communication' -> 'the renewed certificate should be usable for secure communication'
2025-01-23 09:32:18 - parse - DEBUG - format 'the server should reject the renewal request' -> 'the server should reject the renewal request'
2025-01-23 09:32:18 - parse - DEBUG - format 'a valid certificate ID for revocation' -> 'a valid certificate ID for revocation'
2025-01-23 09:32:18 - parse - DEBUG - format 'an invalid certificate ID' -> 'an invalid certificate ID'
2025-01-23 09:32:18 - parse - DEBUG - format 'I send a revocation request for the certificate' -> 'I send a revocation request for the certificate'
2025-01-23 09:32:18 - parse - DEBUG - format 'the server should revoke the certificate' -> 'the server should revoke the certificate'
2025-01-23 09:32:18 - parse - DEBUG - format 'the server should reject the request' -> 'the server should reject the request'
2025-01-23 09:32:18 - parse - DEBUG - format 'I have a valid API key or token for authentication' -> 'I have a valid API key or token for authentication'
2025-01-23 09:32:18 - parse - DEBUG - format 'the TrustPoint database contains existing resources for testing' -> 'the TrustPoint database contains existing resources for testing'
2025-01-23 09:32:18 - parse - DEBUG - format 'I have a valid endpoint {endpoint}' -> 'I have a valid endpoint (?P<endpoint>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'I have an invalid endpoint {endpoint}' -> 'I have an invalid endpoint (?P<endpoint>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'I have a valid payload {payload}' -> 'I have a valid payload (?P<payload>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'I have an invalid payload {payload}' -> 'I have an invalid payload (?P<payload>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'I have a valid partial payload {payload}' -> 'I have a valid partial payload (?P<payload>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'I send a GET request to {endpoint}' -> 'I send a GET request to (?P<endpoint>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'I send a POST request to {endpoint} with the payload' -> 'I send a POST request to (?P<endpoint>.+?) with the payload'
2025-01-23 09:32:18 - parse - DEBUG - format 'I send a PUT request to {endpoint} with the payload' -> 'I send a PUT request to (?P<endpoint>.+?) with the payload'
2025-01-23 09:32:18 - parse - DEBUG - format 'I send a DELETE request to {endpoint}' -> 'I send a DELETE request to (?P<endpoint>.+?)'
2025-01-23 09:32:18 - parse - DEBUG - format 'I send a PATCH request to {endpoint} with the payload' -> 'I send a PATCH request to (?P<endpoint>.+?) with the payload'
2025-01-23 09:32:18 - parse - DEBUG - format 'the response should include the requested resource details' -> 'the response should include the requested resource details'
2025-01-23 09:32:18 - parse - DEBUG - format 'the response should include the created resource details' -> 'the response should include the created resource details'
2025-01-23 09:32:18 - parse - DEBUG - format 'the response should include the updated resource details' -> 'the response should include the updated resource details'
2025-01-23 09:32:18 - parse - DEBUG - format 'the resource should no longer exist' -> 'the resource should no longer exist'
2025-01-23 09:32:18 - parse - DEBUG - format 'the certificate status should change to {revocation_status}' -> 'the certificate status should change to (?P<revocation_status>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'the server is running and reachable' -> 'the server is running and reachable'
2025-01-23 09:32:52 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 09:32:52 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 09:32:52 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 09:32:52 - parse - DEBUG - format 'the server should return a status code of {status_code}' -> 'the server should return a status code of (?P<status_code>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'the response should indicate {error_reason}' -> 'the response should indicate (?P<error_reason>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'the certificate status should change to {revocation_status}' -> 'the certificate status should change to (?P<revocation_status>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 09:32:52 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 09:32:52 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 09:32:52 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 09:32:52 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 09:32:52 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 09:32:52 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 09:32:52 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 09:32:52 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 09:32:52 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 09:32:52 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 09:32:52 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 09:32:52 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 09:32:52 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 09:32:52 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 09:32:52 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 09:32:52 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 09:32:52 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 09:32:52 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 09:32:52 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 09:32:52 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 09:32:52 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 09:32:52 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 09:32:52 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 09:32:52 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 09:32:52 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 09:32:52 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 09:32:52 - parse - DEBUG - format 'a valid certificate ID for an active certificate' -> 'a valid certificate ID for an active certificate'
2025-01-23 09:32:52 - parse - DEBUG - format 'the certificate is about to expire' -> 'the certificate is about to expire'
2025-01-23 09:32:52 - parse - DEBUG - format 'the certificate has already expired' -> 'the certificate has already expired'
2025-01-23 09:32:52 - parse - DEBUG - format 'I send a renewal request for the certificate' -> 'I send a renewal request for the certificate'
2025-01-23 09:32:52 - parse - DEBUG - format 'the server should process the renewal request' -> 'the server should process the renewal request'
2025-01-23 09:32:52 - parse - DEBUG - format 'a renewed certificate should be issued with a new expiration date' -> 'a renewed certificate should be issued with a new expiration date'
2025-01-23 09:32:52 - parse - DEBUG - format 'the renewed certificate should be usable for secure communication' -> 'the renewed certificate should be usable for secure communication'
2025-01-23 09:32:52 - parse - DEBUG - format 'the server should reject the renewal request' -> 'the server should reject the renewal request'
2025-01-23 09:32:52 - parse - DEBUG - format 'a valid certificate ID for revocation' -> 'a valid certificate ID for revocation'
2025-01-23 09:32:52 - parse - DEBUG - format 'an invalid certificate ID' -> 'an invalid certificate ID'
2025-01-23 09:32:52 - parse - DEBUG - format 'I send a revocation request for the certificate' -> 'I send a revocation request for the certificate'
2025-01-23 09:32:52 - parse - DEBUG - format 'the server should revoke the certificate' -> 'the server should revoke the certificate'
2025-01-23 09:32:52 - parse - DEBUG - format 'the server should reject the request' -> 'the server should reject the request'
2025-01-23 09:32:52 - parse - DEBUG - format 'I have a valid API key or token for authentication' -> 'I have a valid API key or token for authentication'
2025-01-23 09:32:52 - parse - DEBUG - format 'the TrustPoint database contains existing resources for testing' -> 'the TrustPoint database contains existing resources for testing'
2025-01-23 09:32:52 - parse - DEBUG - format 'I have a valid endpoint {endpoint}' -> 'I have a valid endpoint (?P<endpoint>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'I have an invalid endpoint {endpoint}' -> 'I have an invalid endpoint (?P<endpoint>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'I have a valid payload {payload}' -> 'I have a valid payload (?P<payload>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'I have an invalid payload {payload}' -> 'I have an invalid payload (?P<payload>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'I have a valid partial payload {payload}' -> 'I have a valid partial payload (?P<payload>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'I send a GET request to {endpoint}' -> 'I send a GET request to (?P<endpoint>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'I send a POST request to {endpoint} with the payload' -> 'I send a POST request to (?P<endpoint>.+?) with the payload'
2025-01-23 09:32:52 - parse - DEBUG - format 'I send a PUT request to {endpoint} with the payload' -> 'I send a PUT request to (?P<endpoint>.+?) with the payload'
2025-01-23 09:32:52 - parse - DEBUG - format 'I send a DELETE request to {endpoint}' -> 'I send a DELETE request to (?P<endpoint>.+?)'
2025-01-23 09:32:52 - parse - DEBUG - format 'I send a PATCH request to {endpoint} with the payload' -> 'I send a PATCH request to (?P<endpoint>.+?) with the payload'
2025-01-23 09:32:52 - parse - DEBUG - format 'the response should include the requested resource details' -> 'the response should include the requested resource details'
2025-01-23 09:32:52 - parse - DEBUG - format 'the response should include the created resource details' -> 'the response should include the created resource details'
2025-01-23 09:32:52 - parse - DEBUG - format 'the response should include the updated resource details' -> 'the response should include the updated resource details'
2025-01-23 09:32:52 - parse - DEBUG - format 'the resource should no longer exist' -> 'the resource should no longer exist'
2025-01-23 09:34:55 - parse - DEBUG - format 'the server is running and reachable' -> 'the server is running and reachable'
2025-01-23 09:34:55 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 09:34:55 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 09:34:55 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 09:34:55 - parse - DEBUG - format 'the server should return a status code of {status_code}' -> 'the server should return a status code of (?P<status_code>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'the response should indicate {error_reason}' -> 'the response should indicate (?P<error_reason>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'the certificate status should change to {revocation_status}' -> 'the certificate status should change to (?P<revocation_status>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 09:34:55 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 09:34:55 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 09:34:55 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 09:34:55 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 09:34:55 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 09:34:55 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 09:34:55 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 09:34:55 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 09:34:55 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 09:34:55 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 09:34:55 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 09:34:55 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 09:34:55 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 09:34:55 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 09:34:55 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 09:34:55 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 09:34:55 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 09:34:55 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 09:34:55 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 09:34:55 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 09:34:55 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 09:34:55 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 09:34:55 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 09:34:55 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 09:34:55 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 09:34:55 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 09:34:55 - parse - DEBUG - format 'a valid certificate ID for an active certificate' -> 'a valid certificate ID for an active certificate'
2025-01-23 09:34:55 - parse - DEBUG - format 'the certificate is about to expire' -> 'the certificate is about to expire'
2025-01-23 09:34:55 - parse - DEBUG - format 'the certificate has already expired' -> 'the certificate has already expired'
2025-01-23 09:34:55 - parse - DEBUG - format 'I send a renewal request for the certificate' -> 'I send a renewal request for the certificate'
2025-01-23 09:34:55 - parse - DEBUG - format 'the server should process the renewal request' -> 'the server should process the renewal request'
2025-01-23 09:34:55 - parse - DEBUG - format 'a renewed certificate should be issued with a new expiration date' -> 'a renewed certificate should be issued with a new expiration date'
2025-01-23 09:34:55 - parse - DEBUG - format 'the renewed certificate should be usable for secure communication' -> 'the renewed certificate should be usable for secure communication'
2025-01-23 09:34:55 - parse - DEBUG - format 'the server should reject the renewal request' -> 'the server should reject the renewal request'
2025-01-23 09:34:55 - parse - DEBUG - format 'a valid certificate ID for revocation' -> 'a valid certificate ID for revocation'
2025-01-23 09:34:55 - parse - DEBUG - format 'an invalid certificate ID' -> 'an invalid certificate ID'
2025-01-23 09:34:55 - parse - DEBUG - format 'I send a revocation request for the certificate' -> 'I send a revocation request for the certificate'
2025-01-23 09:34:55 - parse - DEBUG - format 'the server should revoke the certificate' -> 'the server should revoke the certificate'
2025-01-23 09:34:55 - parse - DEBUG - format 'the server should reject the request' -> 'the server should reject the request'
2025-01-23 09:34:55 - parse - DEBUG - format 'I have a valid API key or token for authentication' -> 'I have a valid API key or token for authentication'
2025-01-23 09:34:55 - parse - DEBUG - format 'the TrustPoint database contains existing resources for testing' -> 'the TrustPoint database contains existing resources for testing'
2025-01-23 09:34:55 - parse - DEBUG - format 'I have a valid endpoint {endpoint}' -> 'I have a valid endpoint (?P<endpoint>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'I have an invalid endpoint {endpoint}' -> 'I have an invalid endpoint (?P<endpoint>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'I have a valid payload {payload}' -> 'I have a valid payload (?P<payload>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'I have an invalid payload {payload}' -> 'I have an invalid payload (?P<payload>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'I have a valid partial payload {payload}' -> 'I have a valid partial payload (?P<payload>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'I send a GET request to {endpoint}' -> 'I send a GET request to (?P<endpoint>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'I send a POST request to {endpoint} with the payload' -> 'I send a POST request to (?P<endpoint>.+?) with the payload'
2025-01-23 09:34:55 - parse - DEBUG - format 'I send a PUT request to {endpoint} with the payload' -> 'I send a PUT request to (?P<endpoint>.+?) with the payload'
2025-01-23 09:34:55 - parse - DEBUG - format 'I send a DELETE request to {endpoint}' -> 'I send a DELETE request to (?P<endpoint>.+?)'
2025-01-23 09:34:55 - parse - DEBUG - format 'I send a PATCH request to {endpoint} with the payload' -> 'I send a PATCH request to (?P<endpoint>.+?) with the payload'
2025-01-23 09:34:55 - parse - DEBUG - format 'the response should include the requested resource details' -> 'the response should include the requested resource details'
2025-01-23 09:34:55 - parse - DEBUG - format 'the response should include the created resource details' -> 'the response should include the created resource details'
2025-01-23 09:34:55 - parse - DEBUG - format 'the response should include the updated resource details' -> 'the response should include the updated resource details'
2025-01-23 09:34:55 - parse - DEBUG - format 'the resource should no longer exist' -> 'the resource should no longer exist'
2025-01-23 10:07:57 - parse - DEBUG - format 'the server is running and reachable' -> 'the server is running and reachable'
2025-01-23 10:07:57 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 10:07:57 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 10:07:57 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 10:07:57 - parse - DEBUG - format 'the server should return a status code of {status_code}' -> 'the server should return a status code of (?P<status_code>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'the response should indicate {error_reason}' -> 'the response should indicate (?P<error_reason>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'the certificate status should change to {revocation_status}' -> 'the certificate status should change to (?P<revocation_status>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 10:07:57 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 10:07:57 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 10:07:57 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 10:07:57 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 10:07:57 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 10:07:57 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 10:07:57 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 10:07:57 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 10:07:57 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 10:07:57 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 10:07:57 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 10:07:57 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 10:07:57 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 10:07:57 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 10:07:57 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 10:07:57 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 10:07:57 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 10:07:57 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 10:07:57 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 10:07:57 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 10:07:57 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 10:07:57 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 10:07:57 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 10:07:57 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 10:07:57 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 10:07:57 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 10:07:57 - parse - DEBUG - format 'a valid certificate ID for an active certificate' -> 'a valid certificate ID for an active certificate'
2025-01-23 10:07:57 - parse - DEBUG - format 'the certificate is about to expire' -> 'the certificate is about to expire'
2025-01-23 10:07:57 - parse - DEBUG - format 'the certificate has already expired' -> 'the certificate has already expired'
2025-01-23 10:07:57 - parse - DEBUG - format 'I send a renewal request for the certificate' -> 'I send a renewal request for the certificate'
2025-01-23 10:07:57 - parse - DEBUG - format 'the server should process the renewal request' -> 'the server should process the renewal request'
2025-01-23 10:07:57 - parse - DEBUG - format 'a renewed certificate should be issued with a new expiration date' -> 'a renewed certificate should be issued with a new expiration date'
2025-01-23 10:07:57 - parse - DEBUG - format 'the renewed certificate should be usable for secure communication' -> 'the renewed certificate should be usable for secure communication'
2025-01-23 10:07:57 - parse - DEBUG - format 'the server should reject the renewal request' -> 'the server should reject the renewal request'
2025-01-23 10:07:57 - parse - DEBUG - format 'a valid certificate ID for revocation' -> 'a valid certificate ID for revocation'
2025-01-23 10:07:57 - parse - DEBUG - format 'an invalid certificate ID' -> 'an invalid certificate ID'
2025-01-23 10:07:57 - parse - DEBUG - format 'I send a revocation request for the certificate' -> 'I send a revocation request for the certificate'
2025-01-23 10:07:57 - parse - DEBUG - format 'the server should revoke the certificate' -> 'the server should revoke the certificate'
2025-01-23 10:07:57 - parse - DEBUG - format 'the server should reject the request' -> 'the server should reject the request'
2025-01-23 10:07:57 - parse - DEBUG - format 'I have a valid API key or token for authentication' -> 'I have a valid API key or token for authentication'
2025-01-23 10:07:57 - parse - DEBUG - format 'the TrustPoint database contains existing resources for testing' -> 'the TrustPoint database contains existing resources for testing'
2025-01-23 10:07:57 - parse - DEBUG - format 'I have a valid endpoint {endpoint}' -> 'I have a valid endpoint (?P<endpoint>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'I have an invalid endpoint {endpoint}' -> 'I have an invalid endpoint (?P<endpoint>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'I have a valid payload {payload}' -> 'I have a valid payload (?P<payload>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'I have an invalid payload {payload}' -> 'I have an invalid payload (?P<payload>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'I have a valid partial payload {payload}' -> 'I have a valid partial payload (?P<payload>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'I send a GET request to {endpoint}' -> 'I send a GET request to (?P<endpoint>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'I send a POST request to {endpoint} with the payload' -> 'I send a POST request to (?P<endpoint>.+?) with the payload'
2025-01-23 10:07:57 - parse - DEBUG - format 'I send a PUT request to {endpoint} with the payload' -> 'I send a PUT request to (?P<endpoint>.+?) with the payload'
2025-01-23 10:07:57 - parse - DEBUG - format 'I send a DELETE request to {endpoint}' -> 'I send a DELETE request to (?P<endpoint>.+?)'
2025-01-23 10:07:57 - parse - DEBUG - format 'I send a PATCH request to {endpoint} with the payload' -> 'I send a PATCH request to (?P<endpoint>.+?) with the payload'
2025-01-23 10:07:57 - parse - DEBUG - format 'the response should include the requested resource details' -> 'the response should include the requested resource details'
2025-01-23 10:07:57 - parse - DEBUG - format 'the response should include the created resource details' -> 'the response should include the created resource details'
2025-01-23 10:07:57 - parse - DEBUG - format 'the response should include the updated resource details' -> 'the response should include the updated resource details'
2025-01-23 10:07:57 - parse - DEBUG - format 'the resource should no longer exist' -> 'the resource should no longer exist'
2025-01-23 10:14:28 - parse - DEBUG - format 'the server is running and reachable' -> 'the server is running and reachable'
2025-01-23 10:14:28 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 10:14:28 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 10:14:28 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 10:14:28 - parse - DEBUG - format 'the server should return a status code of {status_code}' -> 'the server should return a status code of (?P<status_code>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'the response should indicate {error_reason}' -> 'the response should indicate (?P<error_reason>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'the certificate status should change to {revocation_status}' -> 'the certificate status should change to (?P<revocation_status>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 10:14:28 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 10:14:28 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 10:14:28 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 10:14:28 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 10:14:28 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 10:14:28 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 10:14:28 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 10:14:28 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 10:14:28 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 10:14:28 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 10:14:28 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 10:14:28 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 10:14:28 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 10:14:28 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 10:14:28 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 10:14:28 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 10:14:28 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 10:14:28 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 10:14:28 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 10:14:28 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 10:14:28 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 10:14:28 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 10:14:28 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 10:14:28 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 10:14:28 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 10:14:28 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 10:14:28 - parse - DEBUG - format 'a valid certificate ID for an active certificate' -> 'a valid certificate ID for an active certificate'
2025-01-23 10:14:28 - parse - DEBUG - format 'the certificate is about to expire' -> 'the certificate is about to expire'
2025-01-23 10:14:28 - parse - DEBUG - format 'the certificate has already expired' -> 'the certificate has already expired'
2025-01-23 10:14:28 - parse - DEBUG - format 'I send a renewal request for the certificate' -> 'I send a renewal request for the certificate'
2025-01-23 10:14:28 - parse - DEBUG - format 'the server should process the renewal request' -> 'the server should process the renewal request'
2025-01-23 10:14:28 - parse - DEBUG - format 'a renewed certificate should be issued with a new expiration date' -> 'a renewed certificate should be issued with a new expiration date'
2025-01-23 10:14:28 - parse - DEBUG - format 'the renewed certificate should be usable for secure communication' -> 'the renewed certificate should be usable for secure communication'
2025-01-23 10:14:28 - parse - DEBUG - format 'the server should reject the renewal request' -> 'the server should reject the renewal request'
2025-01-23 10:14:28 - parse - DEBUG - format 'a valid certificate ID for revocation' -> 'a valid certificate ID for revocation'
2025-01-23 10:14:28 - parse - DEBUG - format 'an invalid certificate ID' -> 'an invalid certificate ID'
2025-01-23 10:14:28 - parse - DEBUG - format 'I send a revocation request for the certificate' -> 'I send a revocation request for the certificate'
2025-01-23 10:14:28 - parse - DEBUG - format 'the server should revoke the certificate' -> 'the server should revoke the certificate'
2025-01-23 10:14:28 - parse - DEBUG - format 'the server should reject the request' -> 'the server should reject the request'
2025-01-23 10:14:28 - parse - DEBUG - format 'I have a valid API key or token for authentication' -> 'I have a valid API key or token for authentication'
2025-01-23 10:14:28 - parse - DEBUG - format 'the TrustPoint database contains existing resources for testing' -> 'the TrustPoint database contains existing resources for testing'
2025-01-23 10:14:28 - parse - DEBUG - format 'I have a valid endpoint {endpoint}' -> 'I have a valid endpoint (?P<endpoint>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'I have an invalid endpoint {endpoint}' -> 'I have an invalid endpoint (?P<endpoint>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'I have a valid payload {payload}' -> 'I have a valid payload (?P<payload>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'I have an invalid payload {payload}' -> 'I have an invalid payload (?P<payload>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'I have a valid partial payload {payload}' -> 'I have a valid partial payload (?P<payload>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'I send a GET request to {endpoint}' -> 'I send a GET request to (?P<endpoint>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'I send a POST request to {endpoint} with the payload' -> 'I send a POST request to (?P<endpoint>.+?) with the payload'
2025-01-23 10:14:28 - parse - DEBUG - format 'I send a PUT request to {endpoint} with the payload' -> 'I send a PUT request to (?P<endpoint>.+?) with the payload'
2025-01-23 10:14:28 - parse - DEBUG - format 'I send a DELETE request to {endpoint}' -> 'I send a DELETE request to (?P<endpoint>.+?)'
2025-01-23 10:14:28 - parse - DEBUG - format 'I send a PATCH request to {endpoint} with the payload' -> 'I send a PATCH request to (?P<endpoint>.+?) with the payload'
2025-01-23 10:14:28 - parse - DEBUG - format 'the response should include the requested resource details' -> 'the response should include the requested resource details'
2025-01-23 10:14:28 - parse - DEBUG - format 'the response should include the created resource details' -> 'the response should include the created resource details'
2025-01-23 10:14:28 - parse - DEBUG - format 'the response should include the updated resource details' -> 'the response should include the updated resource details'
2025-01-23 10:14:28 - parse - DEBUG - format 'the resource should no longer exist' -> 'the resource should no longer exist'
2025-01-23 10:20:46 - parse - DEBUG - format 'the server is running and reachable' -> 'the server is running and reachable'
2025-01-23 10:20:46 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 10:20:46 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 10:20:46 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 10:20:46 - parse - DEBUG - format 'the server should return a status code of {status_code}' -> 'the server should return a status code of (?P<status_code>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'the response should indicate {error_reason}' -> 'the response should indicate (?P<error_reason>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'the certificate status should change to {revocation_status}' -> 'the certificate status should change to (?P<revocation_status>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 10:20:46 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 10:20:46 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 10:20:46 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 10:20:46 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 10:20:46 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 10:20:46 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 10:20:46 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 10:20:46 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 10:20:46 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 10:20:46 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 10:20:46 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 10:20:46 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 10:20:46 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 10:20:46 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 10:20:46 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 10:20:46 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 10:20:46 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 10:20:46 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 10:20:46 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 10:20:46 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 10:20:46 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 10:20:46 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 10:20:46 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 10:20:46 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 10:20:46 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 10:20:46 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 10:20:46 - parse - DEBUG - format 'a valid certificate ID for an active certificate' -> 'a valid certificate ID for an active certificate'
2025-01-23 10:20:46 - parse - DEBUG - format 'the certificate is about to expire' -> 'the certificate is about to expire'
2025-01-23 10:20:46 - parse - DEBUG - format 'the certificate has already expired' -> 'the certificate has already expired'
2025-01-23 10:20:46 - parse - DEBUG - format 'I send a renewal request for the certificate' -> 'I send a renewal request for the certificate'
2025-01-23 10:20:46 - parse - DEBUG - format 'the server should process the renewal request' -> 'the server should process the renewal request'
2025-01-23 10:20:46 - parse - DEBUG - format 'a renewed certificate should be issued with a new expiration date' -> 'a renewed certificate should be issued with a new expiration date'
2025-01-23 10:20:46 - parse - DEBUG - format 'the renewed certificate should be usable for secure communication' -> 'the renewed certificate should be usable for secure communication'
2025-01-23 10:20:46 - parse - DEBUG - format 'the server should reject the renewal request' -> 'the server should reject the renewal request'
2025-01-23 10:20:46 - parse - DEBUG - format 'a valid certificate ID for revocation' -> 'a valid certificate ID for revocation'
2025-01-23 10:20:46 - parse - DEBUG - format 'an invalid certificate ID' -> 'an invalid certificate ID'
2025-01-23 10:20:46 - parse - DEBUG - format 'I send a revocation request for the certificate' -> 'I send a revocation request for the certificate'
2025-01-23 10:20:46 - parse - DEBUG - format 'the server should revoke the certificate' -> 'the server should revoke the certificate'
2025-01-23 10:20:46 - parse - DEBUG - format 'the server should reject the request' -> 'the server should reject the request'
2025-01-23 10:20:46 - parse - DEBUG - format 'I have a valid API key or token for authentication' -> 'I have a valid API key or token for authentication'
2025-01-23 10:20:46 - parse - DEBUG - format 'the TrustPoint database contains existing resources for testing' -> 'the TrustPoint database contains existing resources for testing'
2025-01-23 10:20:46 - parse - DEBUG - format 'I have a valid endpoint {endpoint}' -> 'I have a valid endpoint (?P<endpoint>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'I have an invalid endpoint {endpoint}' -> 'I have an invalid endpoint (?P<endpoint>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'I have a valid payload {payload}' -> 'I have a valid payload (?P<payload>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'I have an invalid payload {payload}' -> 'I have an invalid payload (?P<payload>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'I have a valid partial payload {payload}' -> 'I have a valid partial payload (?P<payload>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'I send a GET request to {endpoint}' -> 'I send a GET request to (?P<endpoint>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'I send a POST request to {endpoint} with the payload' -> 'I send a POST request to (?P<endpoint>.+?) with the payload'
2025-01-23 10:20:46 - parse - DEBUG - format 'I send a PUT request to {endpoint} with the payload' -> 'I send a PUT request to (?P<endpoint>.+?) with the payload'
2025-01-23 10:20:46 - parse - DEBUG - format 'I send a DELETE request to {endpoint}' -> 'I send a DELETE request to (?P<endpoint>.+?)'
2025-01-23 10:20:46 - parse - DEBUG - format 'I send a PATCH request to {endpoint} with the payload' -> 'I send a PATCH request to (?P<endpoint>.+?) with the payload'
2025-01-23 10:20:46 - parse - DEBUG - format 'the response should include the requested resource details' -> 'the response should include the requested resource details'
2025-01-23 10:20:46 - parse - DEBUG - format 'the response should include the created resource details' -> 'the response should include the created resource details'
2025-01-23 10:20:46 - parse - DEBUG - format 'the response should include the updated resource details' -> 'the response should include the updated resource details'
2025-01-23 10:20:46 - parse - DEBUG - format 'the resource should no longer exist' -> 'the resource should no longer exist'
2025-01-23 13:37:24 - parse - DEBUG - format 'the server is running and reachable' -> 'the server is running and reachable'
2025-01-23 13:37:24 - parse - DEBUG - format 'the admin is registered and logged into the system' -> 'the admin is registered and logged into the system'
2025-01-23 13:37:24 - parse - DEBUG - format 'the TPC_Web and TPC_CLI services are running' -> 'the TPC_Web and TPC_CLI services are running'
2025-01-23 13:37:24 - parse - DEBUG - format 'the admin opens {component}' -> 'the admin opens (?P<component>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'the admin navigates to the list of identities' -> 'the admin navigates to the list of identities'
2025-01-23 13:37:24 - parse - DEBUG - format 'the server should return a status code of {status_code}' -> 'the server should return a status code of (?P<status_code>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'the response should indicate {error_reason}' -> 'the response should indicate (?P<error_reason>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'the certificate status should change to {revocation_status}' -> 'the certificate status should change to (?P<revocation_status>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'the EST server is running' -> 'the EST server is running'
2025-01-23 13:37:24 - parse - DEBUG - format 'I POST a valid CSR to "/.well-known/est/simpleenroll"' -> 'I POST a valid CSR to "/\\.well-known/est/simpleenroll"'
2025-01-23 13:37:24 - parse - DEBUG - format 'I receive a 200 response' -> 'I receive a 200 response'
2025-01-23 13:37:24 - parse - DEBUG - format 'the response contains a valid certificate' -> 'the response contains a valid certificate'
2025-01-23 13:37:24 - parse - DEBUG - format 'I have the necessary client credentials for authentication' -> 'I have the necessary client credentials for authentication'
2025-01-23 13:37:24 - parse - DEBUG - format 'I have a certificate signing request (CSR) with {request_type} parameters' -> 'I have a certificate signing request \\(CSR\\) with (?P<request_type>.+?) parameters'
2025-01-23 13:37:24 - parse - DEBUG - format 'I send the CSR to the LCMP server' -> 'I send the CSR to the LCMP server'
2025-01-23 13:37:24 - parse - DEBUG - format 'the server should return a response indicating {expected_result}' -> 'the server should return a response indicating (?P<expected_result>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format "{response_data} should be included in the server's response" -> "(?P<response_data>.+?) should be included in the server's response"
2025-01-23 13:37:24 - parse - DEBUG - format 'I have a certificate ID for {certificate_type} certificate' -> 'I have a certificate ID for (?P<certificate_type>.+?) certificate'
2025-01-23 13:37:24 - parse - DEBUG - format 'I send a revocation request to the server' -> 'I send a revocation request to the server'
2025-01-23 13:37:24 - parse - DEBUG - format 'the certificate should be {revocation_status}' -> 'the certificate should be (?P<revocation_status>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'I send a malformed request to the server' -> 'I send a malformed request to the server'
2025-01-23 13:37:24 - parse - DEBUG - format 'the server processes the request' -> 'the server processes the request'
2025-01-23 13:37:24 - parse - DEBUG - format 'the server should return an error response' -> 'the server should return an error response'
2025-01-23 13:37:24 - parse - DEBUG - format 'the error code should indicate {error_code}' -> 'the error code should indicate (?P<error_code>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'I attempt to send a request with {auth_status} credentials' -> 'I attempt to send a request with (?P<auth_status>.+?) credentials'
2025-01-23 13:37:24 - parse - DEBUG - format 'the server should return {expected_response}' -> 'the server should return (?P<expected_response>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'the LCMP server is temporarily unreachable' -> 'the LCMP server is temporarily unreachable'
2025-01-23 13:37:24 - parse - DEBUG - format 'I send a request' -> 'I send a request'
2025-01-23 13:37:24 - parse - DEBUG - format 'the client should retry according to RFC guidelines' -> 'the client should retry according to RFC guidelines'
2025-01-23 13:37:24 - parse - DEBUG - format 'it should return an appropriate error if retries fail' -> 'it should return an appropriate error if retries fail'
2025-01-23 13:37:24 - parse - DEBUG - format 'the admin creates an identity using {method}' -> 'the admin creates an identity using (?P<method>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'the identity should be created and visible in the list of identities' -> 'the identity should be created and visible in the list of identities'
2025-01-23 13:37:24 - parse - DEBUG - format "the system should display the identity's details" -> "the system should display the identity's details"
2025-01-23 13:37:24 - parse - DEBUG - format 'the admin edits an identity using {method}' -> 'the admin edits an identity using (?P<method>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'the identity should be updated and visible with the new values' -> 'the identity should be updated and visible with the new values'
2025-01-23 13:37:24 - parse - DEBUG - format 'the system should display the updated identity details' -> 'the system should display the updated identity details'
2025-01-23 13:37:24 - parse - DEBUG - format 'the admin deletes an identity using {method}' -> 'the admin deletes an identity using (?P<method>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'the identity should no longer appear in the list of identities' -> 'the identity should no longer appear in the list of identities'
2025-01-23 13:37:24 - parse - DEBUG - format 'the system should confirm the identity has been deleted' -> 'the system should confirm the identity has been deleted'
2025-01-23 13:37:24 - parse - DEBUG - format 'there are existing identities with valid certificates' -> 'there are existing identities with valid certificates'
2025-01-23 13:37:24 - parse - DEBUG - format 'the admin renews the certificate of an identity using {method}' -> 'the admin renews the certificate of an identity using (?P<method>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'the certificate of the identity should be renewed' -> 'the certificate of the identity should be renewed'
2025-01-23 13:37:24 - parse - DEBUG - format 'the identity should have a usable and valid certificate' -> 'the identity should have a usable and valid certificate'
2025-01-23 13:37:24 - parse - DEBUG - format 'a valid certificate ID for an active certificate' -> 'a valid certificate ID for an active certificate'
2025-01-23 13:37:24 - parse - DEBUG - format 'the certificate is about to expire' -> 'the certificate is about to expire'
2025-01-23 13:37:24 - parse - DEBUG - format 'the certificate has already expired' -> 'the certificate has already expired'
2025-01-23 13:37:24 - parse - DEBUG - format 'I send a renewal request for the certificate' -> 'I send a renewal request for the certificate'
2025-01-23 13:37:24 - parse - DEBUG - format 'the server should process the renewal request' -> 'the server should process the renewal request'
2025-01-23 13:37:24 - parse - DEBUG - format 'a renewed certificate should be issued with a new expiration date' -> 'a renewed certificate should be issued with a new expiration date'
2025-01-23 13:37:24 - parse - DEBUG - format 'the renewed certificate should be usable for secure communication' -> 'the renewed certificate should be usable for secure communication'
2025-01-23 13:37:24 - parse - DEBUG - format 'the server should reject the renewal request' -> 'the server should reject the renewal request'
2025-01-23 13:37:24 - parse - DEBUG - format 'a valid certificate ID for revocation' -> 'a valid certificate ID for revocation'
2025-01-23 13:37:24 - parse - DEBUG - format 'an invalid certificate ID' -> 'an invalid certificate ID'
2025-01-23 13:37:24 - parse - DEBUG - format 'I send a revocation request for the certificate' -> 'I send a revocation request for the certificate'
2025-01-23 13:37:24 - parse - DEBUG - format 'the server should revoke the certificate' -> 'the server should revoke the certificate'
2025-01-23 13:37:24 - parse - DEBUG - format 'the server should reject the request' -> 'the server should reject the request'
2025-01-23 13:37:24 - parse - DEBUG - format 'I have a valid API key or token for authentication' -> 'I have a valid API key or token for authentication'
2025-01-23 13:37:24 - parse - DEBUG - format 'the TrustPoint database contains existing resources for testing' -> 'the TrustPoint database contains existing resources for testing'
2025-01-23 13:37:24 - parse - DEBUG - format 'I have a valid endpoint {endpoint}' -> 'I have a valid endpoint (?P<endpoint>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'I have an invalid endpoint {endpoint}' -> 'I have an invalid endpoint (?P<endpoint>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'I have a valid payload {payload}' -> 'I have a valid payload (?P<payload>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'I have an invalid payload {payload}' -> 'I have an invalid payload (?P<payload>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'I have a valid partial payload {payload}' -> 'I have a valid partial payload (?P<payload>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'I send a GET request to {endpoint}' -> 'I send a GET request to (?P<endpoint>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'I send a POST request to {endpoint} with the payload' -> 'I send a POST request to (?P<endpoint>.+?) with the payload'
2025-01-23 13:37:24 - parse - DEBUG - format 'I send a PUT request to {endpoint} with the payload' -> 'I send a PUT request to (?P<endpoint>.+?) with the payload'
2025-01-23 13:37:24 - parse - DEBUG - format 'I send a DELETE request to {endpoint}' -> 'I send a DELETE request to (?P<endpoint>.+?)'
2025-01-23 13:37:24 - parse - DEBUG - format 'I send a PATCH request to {endpoint} with the payload' -> 'I send a PATCH request to (?P<endpoint>.+?) with the payload'
2025-01-23 13:37:24 - parse - DEBUG - format 'the response should include the requested resource details' -> 'the response should include the requested resource details'
2025-01-23 13:37:24 - parse - DEBUG - format 'the response should include the created resource details' -> 'the response should include the created resource details'
2025-01-23 13:37:24 - parse - DEBUG - format 'the response should include the updated resource details' -> 'the response should include the updated resource details'
2025-01-23 13:37:24 - parse - DEBUG - format 'the resource should no longer exist' -> 'the resource should no longer exist'
2025-01-27 15:01:03 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:01:03 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:01:03 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:01:03 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:01:03 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:01:03 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:01:03 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:01:03 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:01:03 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:01:03 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:01:03 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:01:03 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:01:03 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:01:03 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:01:03 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:01:03 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:01:03 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:01:03 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:01:03 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:01:03 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:01:03 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:01:03 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:01:03 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:01:03 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:01:03 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:01:03 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:03:35 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:03:35 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:03:35 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:03:35 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:03:35 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:03:35 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:03:35 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:03:35 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:03:35 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:03:35 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:03:35 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:03:35 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:03:35 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:03:35 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:03:35 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:03:35 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:03:35 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:03:35 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:03:35 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:03:35 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:03:35 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:03:35 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:03:35 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:03:35 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:03:35 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:03:35 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:11:08 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:11:08 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:11:08 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:11:08 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:11:08 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:11:08 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:11:08 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:11:08 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-27 15:11:08 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:11:08 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:11:08 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:11:08 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:11:08 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:11:08 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:11:08 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:11:08 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:11:08 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:11:08 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:11:08 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:11:08 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:11:08 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:11:08 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:11:08 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:11:08 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:11:08 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:11:08 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:11:08 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:11:08 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:13:50 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:13:50 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:13:50 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:13:50 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:13:50 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:13:50 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:13:50 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:13:50 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-27 15:13:50 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:13:50 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:13:50 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:13:50 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:13:50 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:13:50 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-27 15:13:50 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-27 15:13:50 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:13:50 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:13:50 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:13:50 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:13:50 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:13:50 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:13:50 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:13:50 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:13:50 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:13:50 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:13:50 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:13:50 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:13:50 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:13:50 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:13:50 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:13:50 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:14:31 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:14:31 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:14:31 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:14:31 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:14:31 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:14:31 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:14:31 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:14:31 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-27 15:14:31 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:14:31 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:14:31 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:14:31 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:14:31 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:14:31 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-27 15:14:31 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-27 15:14:31 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:14:31 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:14:31 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:14:31 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:14:31 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:14:31 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:14:31 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:14:31 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:14:31 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:14:31 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:14:31 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:14:31 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:14:31 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:14:31 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:14:31 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:14:31 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:15:38 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:15:38 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:15:38 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:15:38 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:15:38 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:15:38 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:15:38 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:15:38 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-27 15:15:38 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:15:38 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:15:38 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:15:38 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:15:38 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:15:38 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-27 15:15:38 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-27 15:15:38 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:15:38 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-27 15:15:38 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-27 15:15:38 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:15:38 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:15:38 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:15:38 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:15:38 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:15:38 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:15:38 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:15:38 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:15:38 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:15:38 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:15:38 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:15:38 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:15:38 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:15:38 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:15:38 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:17:18 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:17:18 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:17:18 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:17:18 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:17:18 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:17:18 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:17:18 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:17:18 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-27 15:17:18 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:17:18 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:17:18 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:17:18 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:17:18 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:17:18 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-27 15:17:18 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-27 15:17:18 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:17:18 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-27 15:17:18 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-27 15:17:18 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-27 15:17:18 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:17:18 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:17:18 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:17:18 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:17:18 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:17:18 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:17:18 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:17:18 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:17:18 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:17:18 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:17:18 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:17:18 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:17:18 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:17:18 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:17:18 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:21:02 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:21:02 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:21:02 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:21:02 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:21:02 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:21:02 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-27 15:21:02 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:21:02 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-27 15:21:02 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-27 15:21:02 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-27 15:21:02 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:21:02 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:21:02 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:21:02 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:21:02 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:21:02 - parse - DEBUG - format 'the admin attempts to renew a non-existent certificate {non_existent}' -> 'the admin attempts to renew a non-existent certificate (?P<non_existent>.+?)'
2025-01-27 15:21:02 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:21:02 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:21:02 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:21:02 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:21:02 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:21:02 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:21:02 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:21:58 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:21:58 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:21:58 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:21:58 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:21:58 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:21:58 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-27 15:21:58 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:21:58 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-27 15:21:58 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-27 15:21:58 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-27 15:21:58 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:21:58 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:21:58 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:21:58 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:21:58 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:21:58 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-27 15:21:58 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:21:58 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:21:58 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:21:58 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:21:58 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:21:58 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:21:58 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:22:56 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:22:56 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:22:56 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:22:56 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:22:56 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:22:56 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-27 15:22:56 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:22:56 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-27 15:22:56 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-27 15:22:56 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-27 15:22:56 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:22:56 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:22:56 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:22:56 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:22:56 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:22:56 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-27 15:22:56 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:22:56 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:22:56 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:22:56 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:22:56 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:22:56 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:22:56 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:24:18 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:24:18 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:24:18 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:24:18 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:24:18 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:24:18 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-27 15:24:18 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:24:18 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-27 15:24:18 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-27 15:24:18 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-27 15:24:18 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:24:18 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:24:18 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:24:18 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:24:18 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-27 15:24:18 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-27 15:24:18 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:24:18 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:24:18 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:24:18 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:24:18 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:24:18 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:24:18 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:25:56 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:25:56 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:25:56 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:25:56 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:25:56 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:25:56 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-27 15:25:56 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:25:56 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-27 15:25:56 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-27 15:25:56 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-27 15:25:56 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:25:56 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:25:56 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:25:56 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:25:56 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-27 15:25:56 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-27 15:25:56 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:25:56 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:25:56 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:25:56 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:25:56 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:25:56 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:25:56 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:25:56 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-27 15:25:56 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:27:18 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:27:18 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:27:18 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:27:18 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-27 15:27:18 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:27:18 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:27:18 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:27:18 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:27:18 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:27:18 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:27:18 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:27:18 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:27:18 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:27:18 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:27:18 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:27:18 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-27 15:27:18 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-27 15:27:18 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-27 15:27:18 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-27 15:28:16 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-27 15:28:16 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-27 15:28:16 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-27 15:28:16 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-27 15:28:16 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-27 15:28:16 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-27 15:28:16 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-27 15:28:16 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-27 15:28:16 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-27 15:28:16 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-27 15:28:16 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-27 15:28:16 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-27 15:28:16 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-27 15:28:16 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-27 15:28:16 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-27 15:28:16 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-27 15:28:16 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-27 15:28:16 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-27 15:28:16 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-27 15:28:16 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-28 10:58:55 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-28 10:58:55 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-28 10:58:55 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-28 10:58:55 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-28 10:58:55 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-28 10:58:55 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-28 10:58:55 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-28 10:58:55 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-28 10:58:55 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-28 10:58:55 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-28 10:58:55 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-28 10:58:55 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-28 10:58:55 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-28 10:58:55 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-28 10:58:55 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-28 10:58:55 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-28 10:58:55 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-28 10:58:55 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-28 10:58:55 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-28 10:58:55 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-28 12:31:04 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-28 12:31:04 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-28 12:31:04 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-28 12:31:04 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-28 12:31:04 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-28 12:31:04 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-28 12:31:04 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-28 12:31:04 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-28 12:31:04 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-28 12:31:04 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-28 12:31:04 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-28 12:31:04 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-28 12:31:04 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-28 12:31:04 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-28 12:31:04 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-28 12:31:04 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-28 12:31:04 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-28 12:31:04 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-28 12:31:04 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-28 12:31:04 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-28 14:35:03 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-28 14:35:03 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-28 14:35:03 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-28 14:35:03 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-28 14:35:03 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-28 14:35:03 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-28 14:35:03 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-28 14:35:03 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-28 14:35:03 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-28 14:35:03 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-28 14:35:03 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-28 14:35:03 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-28 14:35:03 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-28 14:35:03 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-28 14:35:03 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-28 14:35:03 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-28 14:35:03 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-28 14:35:03 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-28 14:35:03 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-28 14:35:03 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-28 14:35:03 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-28 14:35:03 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-28 14:35:03 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-28 14:35:03 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-28 14:35:03 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-28 14:35:03 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-28 14:35:14 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-28 14:35:14 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-28 14:35:14 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-28 14:35:14 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-28 14:35:14 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-28 14:35:14 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-28 14:35:14 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-28 14:35:14 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-28 14:35:14 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-28 14:35:14 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-28 14:35:14 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-28 14:35:14 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-28 14:35:14 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-28 14:35:14 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-28 14:35:14 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-28 14:35:14 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-28 14:35:14 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-28 14:35:14 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-28 14:35:14 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-28 14:35:14 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-28 14:35:14 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-28 14:35:14 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-28 14:35:14 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-28 14:35:14 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-28 14:35:14 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-28 14:35:14 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 06:36:12 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 06:36:12 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 06:36:12 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 06:36:12 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 06:36:12 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 06:36:12 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 06:36:12 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 06:36:12 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 06:36:12 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 06:36:12 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 06:36:12 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 06:36:12 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 06:36:12 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 06:36:12 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 06:36:12 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 06:36:12 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 06:36:12 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 06:36:12 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 06:36:12 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 06:36:12 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 06:36:12 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 06:36:12 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 06:36:12 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 06:36:12 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 06:36:12 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 06:36:12 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 06:36:12 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 06:36:12 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 06:36:41 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 06:36:41 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 06:36:41 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 06:36:41 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 06:36:41 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 06:36:41 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 06:36:41 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 06:36:41 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 06:36:41 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 06:36:41 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 06:36:41 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 06:36:41 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 06:36:41 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 06:36:41 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 06:36:41 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 06:36:41 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 06:36:41 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 06:36:41 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 06:36:41 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 06:36:41 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 06:36:41 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 06:36:41 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 06:36:41 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 06:36:41 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 06:36:41 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 06:36:41 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 06:36:41 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 06:36:41 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 06:54:05 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 06:54:05 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 06:54:05 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 06:54:05 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 06:54:05 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 06:54:05 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 06:54:05 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 06:54:05 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 06:54:05 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 06:54:05 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 06:54:05 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 06:54:05 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 06:54:05 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 06:54:05 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 06:54:05 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 06:54:05 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 06:54:05 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 06:54:05 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 06:54:05 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 06:54:05 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 06:54:05 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 06:54:05 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-01-29 06:54:05 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-01-29 06:54:05 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-01-29 06:54:05 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-01-29 06:54:05 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-01-29 06:54:05 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-01-29 06:54:05 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 09:53:20 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 09:53:20 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 09:53:20 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 09:53:20 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 09:53:20 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 09:53:20 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 09:53:20 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 09:53:20 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 09:53:20 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 09:53:20 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 09:53:20 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 09:53:20 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 09:53:20 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 09:53:20 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 09:53:20 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 09:53:20 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 09:53:20 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 09:53:20 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 09:53:20 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 09:53:20 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 09:53:20 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 09:53:20 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-01-29 09:53:20 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-01-29 09:53:20 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-01-29 09:53:20 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-01-29 09:53:20 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-01-29 09:53:20 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-01-29 09:53:20 - parse - DEBUG - format 'the CMP endpoint is available' -> 'the CMP endpoint is available'
2025-01-29 09:53:20 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the device sends a CMP request for a new certificate' -> 'the device sends a CMP request for a new certificate'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system should issue a certificate for {device_id}' -> 'the system should issue a certificate for (?P<device_id>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-01-29 09:53:20 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-01-29 09:53:20 - parse - DEBUG - format 'the device sends a CMP request for certificate renewal' -> 'the device sends a CMP request for certificate renewal'
2025-01-29 09:53:20 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-01-29 09:53:20 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-01-29 09:53:20 - parse - DEBUG - format 'the device sends a CMP request' -> 'the device sends a CMP request'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-01-29 09:53:20 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-01-29 09:53:20 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-01-29 09:53:20 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 09:55:02 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 09:55:02 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 09:55:02 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 09:55:02 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 09:55:02 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 09:55:02 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 09:55:02 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 09:55:02 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 09:55:02 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 09:55:02 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 09:55:02 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 09:55:02 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 09:55:02 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 09:55:02 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 09:55:02 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 09:55:02 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 09:55:02 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 09:55:02 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 09:55:02 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 09:55:02 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 09:55:02 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 09:55:02 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-01-29 09:55:02 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-01-29 09:55:02 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-01-29 09:55:02 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-01-29 09:55:02 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-01-29 09:55:02 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-01-29 09:55:02 - parse - DEBUG - format 'the CMP endpoint is available' -> 'the CMP endpoint is available'
2025-01-29 09:55:02 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the device sends a CMP request for a new certificate' -> 'the device sends a CMP request for a new certificate'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-01-29 09:55:02 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-01-29 09:55:02 - parse - DEBUG - format 'the device sends a CMP request for certificate renewal' -> 'the device sends a CMP request for certificate renewal'
2025-01-29 09:55:02 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-01-29 09:55:02 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-01-29 09:55:02 - parse - DEBUG - format 'the device sends a CMP request' -> 'the device sends a CMP request'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-01-29 09:55:02 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-01-29 09:55:02 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-01-29 09:55:02 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-01-29 09:55:02 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 09:57:10 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 09:57:10 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 09:57:10 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 09:57:10 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 09:57:10 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 09:57:10 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 09:57:10 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 09:57:10 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 09:57:10 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 09:57:10 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 09:57:10 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 09:57:10 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 09:57:10 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 09:57:10 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 09:57:10 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 09:57:10 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 09:57:10 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 09:57:10 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 09:57:10 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 09:57:10 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 09:57:10 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 09:57:10 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-01-29 09:57:10 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-01-29 09:57:10 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-01-29 09:57:10 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-01-29 09:57:10 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-01-29 09:57:10 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-01-29 09:57:10 - parse - DEBUG - format 'the CMP endpoint is available' -> 'the CMP endpoint is available'
2025-01-29 09:57:10 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the device sends a CMP request for a new certificate' -> 'the device sends a CMP request for a new certificate'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-01-29 09:57:10 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-01-29 09:57:10 - parse - DEBUG - format 'the device sends a CMP request for certificate renewal' -> 'the device sends a CMP request for certificate renewal'
2025-01-29 09:57:10 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-01-29 09:57:10 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-01-29 09:57:10 - parse - DEBUG - format 'the device sends a CMP request' -> 'the device sends a CMP request'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-01-29 09:57:10 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-01-29 09:57:10 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-01-29 09:57:10 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-01-29 09:57:10 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-01-29 09:57:10 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously'
2025-01-29 09:57:10 - parse - DEBUG - format 'the CMP endpoint processes the requests' -> 'the CMP endpoint processes the requests'
2025-01-29 09:57:10 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 09:57:46 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 09:57:46 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 09:57:46 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 09:57:46 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 09:57:46 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 09:57:46 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 09:57:46 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 09:57:46 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 09:57:46 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 09:57:46 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 09:57:46 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 09:57:46 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 09:57:46 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 09:57:46 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 09:57:46 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 09:57:46 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 09:57:46 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 09:57:46 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 09:57:46 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 09:57:46 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 09:57:46 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 09:57:46 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-01-29 09:57:46 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-01-29 09:57:46 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-01-29 09:57:46 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-01-29 09:57:46 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-01-29 09:57:46 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-01-29 09:57:46 - parse - DEBUG - format 'the CMP endpoint is available' -> 'the CMP endpoint is available'
2025-01-29 09:57:46 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the device sends a CMP request for a new certificate' -> 'the device sends a CMP request for a new certificate'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-01-29 09:57:46 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-01-29 09:57:46 - parse - DEBUG - format 'the device sends a CMP request for certificate renewal' -> 'the device sends a CMP request for certificate renewal'
2025-01-29 09:57:46 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-01-29 09:57:46 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-01-29 09:57:46 - parse - DEBUG - format 'the device sends a CMP request' -> 'the device sends a CMP request'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-01-29 09:57:46 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-01-29 09:57:46 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-01-29 09:57:46 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-01-29 09:57:46 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-01-29 09:57:46 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously'
2025-01-29 09:57:46 - parse - DEBUG - format 'the CMP endpoint processes the requests' -> 'the CMP endpoint processes the requests'
2025-01-29 09:57:46 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 13:11:51 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 13:11:51 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 13:11:51 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 13:11:51 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 13:11:51 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 13:11:51 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 13:11:51 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 13:11:51 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 13:11:51 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 13:11:51 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 13:11:51 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 13:11:51 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 13:11:51 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 13:11:51 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 13:11:51 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 13:11:51 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 13:11:51 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 13:11:51 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 13:11:51 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 13:11:51 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 13:11:51 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 13:11:51 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-01-29 13:11:51 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-01-29 13:11:51 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-01-29 13:11:51 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-01-29 13:11:51 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-01-29 13:11:51 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-01-29 13:11:51 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-01-29 13:11:51 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-01-29 13:11:51 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-01-29 13:11:51 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-01-29 13:11:51 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-01-29 13:11:51 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-01-29 13:11:51 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-01-29 13:11:51 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-01-29 13:11:51 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-01-29 13:11:51 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-01-29 13:11:51 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-01-29 13:11:51 - parse - DEBUG - format 'the CMP endpoint processes the requests' -> 'the CMP endpoint processes the requests'
2025-01-29 13:11:51 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 13:15:01 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 13:15:01 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 13:15:01 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 13:15:01 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 13:15:01 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 13:15:01 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 13:15:01 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 13:15:01 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 13:15:01 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 13:15:01 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 13:15:01 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 13:15:01 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 13:15:01 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 13:15:01 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 13:15:01 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 13:15:01 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 13:15:01 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 13:15:01 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 13:15:01 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 13:15:01 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 13:15:01 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 13:15:01 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-01-29 13:15:01 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-01-29 13:15:01 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-01-29 13:15:01 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-01-29 13:15:01 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-01-29 13:15:01 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-01-29 13:15:01 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-01-29 13:15:01 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-01-29 13:15:01 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-01-29 13:15:01 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-01-29 13:15:01 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-01-29 13:15:01 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-01-29 13:15:01 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-01-29 13:15:01 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-01-29 13:15:01 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-01-29 13:15:01 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-01-29 13:15:01 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-01-29 13:15:01 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-01-29 13:15:01 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 13:47:11 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 13:47:11 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 13:47:11 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 13:47:11 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 13:47:11 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 13:47:11 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 13:47:11 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 13:47:11 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 13:47:11 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 13:47:11 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 13:47:11 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 13:47:11 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 13:47:11 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 13:47:11 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 13:47:11 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 13:47:11 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 13:47:11 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 13:47:11 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 13:47:11 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 13:47:11 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 13:47:11 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 13:47:11 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-01-29 13:47:11 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-01-29 13:47:11 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-01-29 13:47:11 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-01-29 13:47:11 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-01-29 13:47:11 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-01-29 13:47:11 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-01-29 13:47:11 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-01-29 13:47:11 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-01-29 13:47:11 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-01-29 13:47:11 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-01-29 13:47:11 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-01-29 13:47:11 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-01-29 13:47:11 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-01-29 13:47:11 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-01-29 13:47:11 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-01-29 13:47:11 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-01-29 13:47:11 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-01-29 13:47:11 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-01-29 13:47:11 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-01-29 13:47:11 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-01-29 13:47:11 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-01-29 13:47:11 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 13:47:55 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 13:47:55 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 13:47:55 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 13:47:55 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 13:47:55 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 13:47:55 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 13:47:55 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 13:47:55 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 13:47:55 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 13:47:55 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 13:47:55 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 13:47:55 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 13:47:55 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 13:47:55 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 13:47:55 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 13:47:55 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 13:47:55 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 13:47:55 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 13:47:55 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 13:47:55 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 13:47:55 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 13:47:55 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-01-29 13:47:55 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-01-29 13:47:55 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-01-29 13:47:55 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-01-29 13:47:55 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-01-29 13:47:55 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-01-29 13:47:55 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-01-29 13:47:55 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-01-29 13:47:55 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-01-29 13:47:55 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-01-29 13:47:55 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-01-29 13:47:55 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-01-29 13:47:55 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-01-29 13:47:55 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-01-29 13:47:55 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-01-29 13:47:55 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-01-29 13:47:55 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-01-29 13:47:55 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-01-29 13:47:55 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-01-29 13:47:55 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-01-29 13:47:55 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-01-29 13:47:55 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-01-29 13:47:55 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 13:48:15 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 13:48:15 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 13:48:15 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 13:48:15 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 13:48:15 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 13:48:15 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 13:48:15 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 13:48:15 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 13:48:15 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 13:48:15 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 13:48:15 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 13:48:15 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 13:48:15 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 13:48:15 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 13:48:15 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 13:48:15 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 13:48:15 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 13:48:15 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 13:48:15 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 13:48:15 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 13:48:15 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 13:48:15 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-01-29 13:48:15 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-01-29 13:48:15 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-01-29 13:48:15 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-01-29 13:48:15 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-01-29 13:48:15 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-01-29 13:48:15 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-01-29 13:48:15 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-01-29 13:48:15 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-01-29 13:48:15 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-01-29 13:48:15 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-01-29 13:48:15 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-01-29 13:48:15 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-01-29 13:48:15 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-01-29 13:48:15 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-01-29 13:48:15 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-01-29 13:48:15 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-01-29 13:48:15 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-01-29 13:48:15 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-01-29 13:48:15 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-01-29 13:48:15 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-01-29 13:48:15 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-01-29 13:48:15 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-29 13:50:11 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-29 13:50:11 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-29 13:50:11 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-29 13:50:11 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-29 13:50:11 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-29 13:50:11 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-29 13:50:11 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-29 13:50:11 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-29 13:50:11 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-29 13:50:11 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-29 13:50:11 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-29 13:50:11 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-29 13:50:11 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-29 13:50:11 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-29 13:50:11 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-29 13:50:11 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-29 13:50:11 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-29 13:50:11 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-29 13:50:11 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-29 13:50:11 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-29 13:50:11 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-29 13:50:11 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-01-29 13:50:11 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-01-29 13:50:11 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-01-29 13:50:11 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-01-29 13:50:11 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-01-29 13:50:11 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-01-29 13:50:11 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-01-29 13:50:11 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-01-29 13:50:11 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-01-29 13:50:11 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-01-29 13:50:11 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-01-29 13:50:11 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-01-29 13:50:11 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-01-29 13:50:11 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-01-29 13:50:11 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-01-29 13:50:11 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-01-29 13:50:11 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-01-29 13:50:11 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-01-29 13:50:11 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-01-29 13:50:11 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-01-29 13:50:11 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-01-29 13:50:11 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-01-29 13:50:11 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-01-30 13:42:59 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-01-30 13:42:59 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-01-30 13:42:59 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-01-30 13:42:59 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-01-30 13:42:59 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-01-30 13:42:59 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-01-30 13:42:59 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-01-30 13:42:59 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-01-30 13:42:59 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-01-30 13:42:59 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-01-30 13:42:59 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-01-30 13:42:59 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-01-30 13:42:59 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-01-30 13:42:59 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-01-30 13:42:59 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-01-30 13:42:59 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-01-30 13:42:59 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-01-30 13:42:59 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-01-30 13:42:59 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-01-30 13:42:59 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-01-30 13:42:59 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-01-30 13:42:59 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-01-30 13:42:59 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-01-30 13:42:59 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-01-30 13:42:59 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-01-30 13:42:59 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-01-30 13:42:59 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-01-30 13:42:59 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-01-30 13:42:59 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-01-30 13:42:59 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-01-30 13:42:59 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-01-30 13:42:59 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-01-30 13:42:59 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-01-30 13:42:59 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-01-30 13:42:59 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-01-30 13:42:59 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-01-30 13:42:59 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-01-30 13:42:59 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-01-30 13:42:59 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-01-30 13:42:59 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-01-30 13:42:59 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-01-30 13:42:59 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-01-30 13:42:59 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-01-30 13:42:59 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-01-30 13:42:59 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-01-30 13:42:59 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-01-30 13:42:59 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-01-30 13:42:59 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-01-30 13:42:59 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-03 09:59:37 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-03 09:59:37 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-03 09:59:37 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-03 09:59:37 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-03 09:59:37 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-03 09:59:37 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-03 09:59:37 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-03 09:59:37 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-03 09:59:37 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 09:59:37 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-03 09:59:37 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 09:59:37 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-03 09:59:37 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 09:59:37 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-03 09:59:37 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-03 09:59:37 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 09:59:37 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-03 09:59:38 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-03 09:59:38 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-03 09:59:38 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-03 09:59:38 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-03 09:59:38 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-03 09:59:38 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-03 09:59:38 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-03 09:59:38 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-03 09:59:38 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-03 09:59:38 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-03 09:59:38 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-03 09:59:38 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-03 09:59:38 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-03 09:59:38 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-03 09:59:38 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-03 09:59:38 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-03 09:59:38 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-03 09:59:38 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-03 09:59:38 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-03 09:59:38 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-03 09:59:38 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-03 09:59:38 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-03 09:59:38 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-03 09:59:38 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-03 09:59:38 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-03 09:59:38 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-03 09:59:38 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-03 09:59:38 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-03 09:59:38 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-03 09:59:38 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-03 09:59:38 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-03 09:59:38 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-03 09:59:38 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-03 09:59:38 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-03 09:59:38 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-03 09:59:38 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-03 09:59:38 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-03 09:59:38 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-03 09:59:38 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-03 09:59:38 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-03 09:59:38 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-03 09:59:38 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-03 09:59:38 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-03 09:59:38 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-03 09:59:38 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-03 09:59:38 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-03 09:59:38 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-03 09:59:38 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-03 10:17:18 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-03 10:17:18 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-03 10:17:18 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-03 10:17:18 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-03 10:17:18 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-03 10:17:18 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-03 10:17:18 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-03 10:17:18 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-03 10:17:18 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-03 10:17:18 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-03 10:17:18 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-03 10:17:18 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-03 10:17:18 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-03 10:17:18 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-03 10:17:18 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-03 10:17:18 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-03 10:17:18 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-03 10:17:18 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-03 10:17:18 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-03 10:17:18 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-03 10:17:18 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-03 10:17:18 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-03 10:17:18 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-03 10:17:18 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-03 10:17:18 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-03 10:17:18 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-03 10:17:18 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-03 10:17:18 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-03 10:17:18 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-03 10:17:18 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-03 10:17:18 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-03 10:17:18 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-03 10:17:18 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-03 10:17:18 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-03 10:17:18 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-03 10:17:18 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-03 10:17:18 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-03 10:17:18 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-03 10:17:18 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-03 10:17:18 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-03 10:17:18 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-03 10:17:18 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-03 10:17:18 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-03 10:17:18 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-03 10:17:18 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-03 10:17:18 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-03 10:17:18 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-03 10:17:18 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-03 10:17:18 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-03 10:17:18 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-03 10:17:18 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-03 10:17:18 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-03 10:22:24 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-03 10:22:24 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-03 10:22:24 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-03 10:22:24 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-03 10:22:24 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-03 10:22:24 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-03 10:22:24 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-03 10:22:24 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-03 10:22:24 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 10:22:24 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-03 10:22:24 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 10:22:24 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-03 10:22:24 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 10:22:24 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-03 10:22:24 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-03 10:22:24 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-03 10:22:25 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-03 10:22:25 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-03 10:22:25 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-03 10:22:25 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-03 10:22:25 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-03 10:22:25 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-03 10:22:25 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-03 10:22:25 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-03 10:22:25 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-03 10:22:25 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-03 10:22:25 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-03 10:22:25 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-03 10:22:25 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-03 10:22:25 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-03 10:22:25 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-03 10:22:25 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-03 10:22:25 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-03 10:22:25 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-03 10:22:25 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-03 10:22:25 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-03 10:22:25 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-03 10:22:25 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-03 10:22:25 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-03 10:22:25 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-03 10:22:25 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-03 10:22:25 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-03 10:22:25 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-03 10:22:25 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-03 10:22:25 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-03 10:22:25 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-03 10:22:25 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-03 10:22:25 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-03 10:22:25 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-03 10:22:25 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-03 10:22:25 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-03 10:22:25 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-03 10:22:25 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-03 10:22:25 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-03 10:22:25 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-03 10:22:25 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-03 10:22:25 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-03 10:22:25 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-03 10:22:25 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-03 10:22:25 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-03 10:22:25 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-03 10:22:25 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-03 10:22:25 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-03 10:22:25 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-03 10:22:25 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-03 10:22:49 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-03 10:22:49 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-03 10:22:49 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-03 10:22:49 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-03 10:22:49 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-03 10:22:49 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-03 10:22:49 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-03 10:22:49 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-03 10:22:49 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-03 10:22:49 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-03 10:22:49 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-03 10:22:49 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-03 10:22:49 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-03 10:22:49 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-03 10:22:49 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-03 10:22:49 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-03 10:22:49 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-03 10:22:49 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-03 10:22:49 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-03 10:22:49 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-03 10:22:49 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-03 10:22:49 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-03 10:22:49 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-03 10:22:49 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-03 10:22:49 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-03 10:22:49 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-03 10:22:49 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-03 10:22:49 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-03 10:22:49 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-03 10:22:49 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-03 10:22:49 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-03 10:22:49 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-03 10:22:49 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-03 10:22:49 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-03 10:22:49 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-03 10:22:49 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-03 10:22:49 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-03 10:22:49 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-03 10:22:49 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-03 10:22:49 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-03 10:22:49 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-03 10:22:49 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-03 10:22:49 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-03 10:22:49 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-03 10:22:49 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-03 10:22:49 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-03 10:22:49 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-03 10:22:49 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-03 10:22:49 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-03 10:22:49 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-03 10:22:49 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-03 10:22:49 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-03 10:30:32 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-03 10:30:32 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-03 10:30:32 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-03 10:30:32 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-03 10:30:32 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-03 10:30:32 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-03 10:30:32 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-03 10:30:32 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-03 10:30:32 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-03 10:30:32 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-03 10:30:32 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-03 10:30:32 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-03 10:30:32 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-03 10:30:32 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-03 10:30:32 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-03 10:30:32 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-03 10:30:32 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-03 10:30:32 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-03 10:30:32 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-03 10:30:32 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-03 10:30:32 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-03 10:30:32 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-03 10:30:32 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-03 10:30:32 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-03 10:30:32 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-03 10:30:32 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-03 10:30:32 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-03 10:30:32 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-03 10:30:32 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-03 10:30:32 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-03 10:30:32 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-03 10:30:32 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-03 10:30:32 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-03 10:30:32 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-03 10:30:32 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-03 10:30:32 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-03 10:30:32 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-03 10:30:32 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-03 10:30:32 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-03 10:30:32 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-03 10:30:32 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-03 10:30:32 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-03 10:30:32 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-03 10:30:32 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-03 10:30:32 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-03 10:30:32 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-03 10:30:32 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-03 10:30:32 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-03 10:30:32 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-03 10:30:32 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-03 10:30:32 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-03 10:30:32 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-03 10:30:32 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-03 10:30:32 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-03 10:30:32 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-03 10:30:32 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-03 10:30:32 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-03 10:30:32 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-03 10:30:32 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-03 10:30:32 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-03 10:30:32 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-03 10:30:32 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-03 10:30:32 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-03 10:31:38 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-03 10:31:38 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-03 10:31:38 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-03 10:31:38 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-03 10:31:38 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-03 10:31:38 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-03 10:31:38 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-03 10:31:38 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-03 10:31:38 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-03 10:31:38 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-03 10:31:38 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-03 10:31:38 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-03 10:31:38 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-03 10:31:38 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-03 10:31:38 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-03 10:31:38 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-03 10:31:38 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-03 10:31:38 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-03 10:31:38 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-03 10:31:38 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-03 10:31:38 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-03 10:31:38 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-03 10:31:38 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-03 10:31:38 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-03 10:31:38 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-03 10:31:38 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-03 10:31:38 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-03 10:31:38 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-03 10:31:38 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-03 10:31:38 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-03 10:31:38 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-03 10:31:38 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-03 10:31:38 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-03 10:31:38 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-03 10:31:38 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-03 10:31:38 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-03 10:31:38 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-03 10:31:38 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-03 10:31:38 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-03 10:31:38 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-03 10:31:38 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-03 10:31:38 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-03 10:31:38 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-03 10:31:38 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-03 10:31:38 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-03 10:31:38 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-03 10:31:38 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-03 10:31:38 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-03 10:31:38 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-03 10:31:38 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-03 10:31:38 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-03 10:31:38 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-03 10:31:38 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-03 10:31:38 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-03 10:31:38 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-03 10:31:38 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-03 10:31:38 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-03 10:31:38 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-03 10:31:38 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-03 10:31:38 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-03 10:31:38 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-03 10:31:38 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-03 10:31:38 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-03 10:31:38 - parse - DEBUG - format 'the attempt should be logged' -> 'the attempt should be logged'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-03 12:44:17 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the TPC_Web application is running' -> 'the TPC_Web application is running'
2025-02-03 12:44:17 - parse - DEBUG - format 'the user is an NTEU with username {username} and password {password}' -> 'the user is an NTEU with username (?P<username>.+?) and password (?P<password>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the user attempts to log in' -> 'the user attempts to log in'
2025-02-03 12:44:17 - parse - DEBUG - format 'login should be {login_outcome}' -> 'login should be (?P<login_outcome>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the NTEU is logged in' -> 'the NTEU is logged in'
2025-02-03 12:44:17 - parse - DEBUG - format 'the NTEU navigates to the identity creation page' -> 'the NTEU navigates to the identity creation page'
2025-02-03 12:44:17 - parse - DEBUG - format 'the NTEU enters valid identity details' -> 'the NTEU enters valid identity details'
2025-02-03 12:44:17 - parse - DEBUG - format 'submits the form' -> 'submits the form'
2025-02-03 12:44:17 - parse - DEBUG - format 'the identity should be successfully created' -> 'the identity should be successfully created'
2025-02-03 12:44:17 - parse - DEBUG - format 'the NTEU navigates to the identity list' -> 'the NTEU navigates to the identity list'
2025-02-03 12:44:17 - parse - DEBUG - format 'selects an identity' -> 'selects an identity'
2025-02-03 12:44:17 - parse - DEBUG - format 'the identity details should be displayed' -> 'the identity details should be displayed'
2025-02-03 12:44:17 - parse - DEBUG - format 'the NTEU edits the identity details' -> 'the NTEU edits the identity details'
2025-02-03 12:44:17 - parse - DEBUG - format 'the identity should be updated successfully' -> 'the identity should be updated successfully'
2025-02-03 12:44:17 - parse - DEBUG - format 'the NTEU deletes the identity' -> 'the NTEU deletes the identity'
2025-02-03 12:44:17 - parse - DEBUG - format 'the identity should be removed' -> 'the identity should be removed'
2025-02-03 12:44:17 - parse - DEBUG - format 'the NTEU starts the device onboarding process' -> 'the NTEU starts the device onboarding process'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system should automatically use a zero-touch onboarding protocol' -> 'the system should automatically use a zero-touch onboarding protocol'
2025-02-03 12:44:17 - parse - DEBUG - format 'the onboarding process should complete successfully' -> 'the onboarding process should complete successfully'
2025-02-03 12:44:17 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-03 12:44:17 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-03 12:44:17 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-03 12:44:17 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-03 12:44:17 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-03 12:44:17 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-03 12:44:17 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-03 12:44:17 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-03 12:44:17 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-03 12:44:17 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-03 12:44:17 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-03 12:44:17 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-03 12:44:17 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-03 12:44:17 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-03 12:44:17 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-03 12:44:17 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-03 12:44:17 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-03 12:44:17 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-03 12:44:17 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-03 12:44:17 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-03 12:44:17 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-03 12:44:17 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-03 12:44:17 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-03 12:44:17 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-03 12:44:17 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-03 12:44:17 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-03 12:44:17 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-03 12:44:17 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-03 12:44:17 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-03 12:44:17 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-03 12:44:17 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-03 12:44:17 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-03 12:44:17 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-03 12:44:17 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-03 12:44:17 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-03 12:44:17 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-03 12:44:17 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-03 12:44:17 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-03 12:44:17 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-03 12:44:17 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-03 12:44:17 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-03 12:44:17 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-03 12:44:17 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-03 12:44:17 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-03 12:44:17 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-03 12:44:17 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-03 12:44:17 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-03 12:44:17 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-03 12:44:17 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-03 12:44:17 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-03 12:44:17 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-03 12:44:17 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-03 12:44:17 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-03 12:44:17 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-03 12:44:17 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-03 12:44:17 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-03 12:44:17 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-03 12:44:17 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-03 12:44:17 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-03 12:44:17 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-03 12:44:17 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-03 12:44:17 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-03 12:44:17 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-03 12:44:17 - parse - DEBUG - format 'the attempt should be logged' -> 'the attempt should be logged'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-03 12:52:23 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the TPC_Web application is running' -> 'the TPC_Web application is running'
2025-02-03 12:52:23 - parse - DEBUG - format 'the user is an NTEU with username {username} and password {password}' -> 'the user is an NTEU with username (?P<username>.+?) and password (?P<password>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the user attempts to log in' -> 'the user attempts to log in'
2025-02-03 12:52:23 - parse - DEBUG - format 'login should be {login_outcome}' -> 'login should be (?P<login_outcome>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the NTEU is logged in' -> 'the NTEU is logged in'
2025-02-03 12:52:23 - parse - DEBUG - format 'the NTEU navigates to the identity creation page' -> 'the NTEU navigates to the identity creation page'
2025-02-03 12:52:23 - parse - DEBUG - format 'the NTEU enters valid identity details' -> 'the NTEU enters valid identity details'
2025-02-03 12:52:23 - parse - DEBUG - format 'submits the form' -> 'submits the form'
2025-02-03 12:52:23 - parse - DEBUG - format 'the identity should be successfully created' -> 'the identity should be successfully created'
2025-02-03 12:52:23 - parse - DEBUG - format 'the NTEU navigates to the identity list' -> 'the NTEU navigates to the identity list'
2025-02-03 12:52:23 - parse - DEBUG - format 'selects an identity' -> 'selects an identity'
2025-02-03 12:52:23 - parse - DEBUG - format 'the identity details should be displayed' -> 'the identity details should be displayed'
2025-02-03 12:52:23 - parse - DEBUG - format 'the NTEU edits the identity details' -> 'the NTEU edits the identity details'
2025-02-03 12:52:23 - parse - DEBUG - format 'the identity should be updated successfully' -> 'the identity should be updated successfully'
2025-02-03 12:52:23 - parse - DEBUG - format 'the NTEU deletes the identity' -> 'the NTEU deletes the identity'
2025-02-03 12:52:23 - parse - DEBUG - format 'the identity should be removed' -> 'the identity should be removed'
2025-02-03 12:52:23 - parse - DEBUG - format 'the NTEU starts the device onboarding process' -> 'the NTEU starts the device onboarding process'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should automatically use a zero-touch onboarding protocol' -> 'the system should automatically use a zero-touch onboarding protocol'
2025-02-03 12:52:23 - parse - DEBUG - format 'the onboarding process should complete successfully' -> 'the onboarding process should complete successfully'
2025-02-03 12:52:23 - parse - DEBUG - format 'a digital identity exists' -> 'a digital identity exists'
2025-02-03 12:52:23 - parse - DEBUG - format 'the NTEU is on any action page' -> 'the NTEU is on any action page'
2025-02-03 12:52:23 - parse - DEBUG - format 'the NTEU enters invalid information' -> 'the NTEU enters invalid information'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should display a clear error message' -> 'the system should display a clear error message'
2025-02-03 12:52:23 - parse - DEBUG - format 'provide guidance for correction' -> 'provide guidance for correction'
2025-02-03 12:52:23 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-03 12:52:23 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-03 12:52:23 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-03 12:52:23 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-03 12:52:23 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-03 12:52:23 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-03 12:52:23 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-03 12:52:23 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-03 12:52:23 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-03 12:52:23 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-03 12:52:23 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-03 12:52:23 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-03 12:52:23 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-03 12:52:23 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-03 12:52:23 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-03 12:52:23 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-03 12:52:23 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-03 12:52:23 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-03 12:52:23 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-03 12:52:23 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-03 12:52:23 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-03 12:52:23 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-03 12:52:23 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-03 12:52:23 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-03 12:52:23 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-03 12:52:23 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-03 12:52:23 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-03 12:52:23 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-03 12:52:23 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-03 12:52:23 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-03 12:52:23 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-03 12:52:23 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-03 12:52:23 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-03 12:52:23 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-03 12:52:23 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-03 12:52:23 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-03 12:52:23 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-03 12:52:23 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-03 12:52:23 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-03 12:52:23 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-03 12:52:23 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-03 12:52:23 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-03 12:52:23 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-03 12:52:23 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-03 12:52:23 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-03 12:52:23 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-03 12:52:23 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-03 12:52:23 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-03 12:52:23 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-03 12:52:23 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-03 12:52:23 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-03 12:52:23 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-03 12:52:23 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-03 12:52:23 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-03 12:52:23 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-03 12:52:23 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-03 12:52:23 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-03 12:52:23 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-03 12:52:23 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-03 12:52:23 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-03 12:52:23 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-03 12:52:23 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-03 12:52:23 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-03 12:52:23 - parse - DEBUG - format 'the attempt should be logged' -> 'the attempt should be logged'
2025-02-04 15:11:06 - django.utils.autoreload - INFO - Watching for file changes with StatReloader
2025-02-04 15:11:55 - django.request - WARNING - Not Found: /api/home/dashboard_data
2025-02-04 15:34:50 - django.utils.autoreload - INFO - Watching for file changes with StatReloader
2025-02-04 15:35:37 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-04 15:35:37 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-04 15:35:37 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-04 15:35:37 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-04 15:35:37 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-04 15:35:37 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-04 15:36:26 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-04 15:36:26 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-04 15:36:26 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-04 15:36:26 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-04 15:36:26 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-04 15:36:26 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-04 15:38:27 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-04 15:38:27 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-04 15:38:27 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-04 15:38:27 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-04 15:38:27 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-04 15:38:27 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-04 15:38:55 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-04 15:38:55 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-04 15:38:55 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-04 15:38:55 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-04 15:38:55 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-04 15:38:55 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-04 15:43:16 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the TPC_Web application is running' -> 'the TPC_Web application is running'
2025-02-04 15:43:16 - parse - DEBUG - format 'the user is an NTEU with username {username} and password {password}' -> 'the user is an NTEU with username (?P<username>.+?) and password (?P<password>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the user attempts to log in' -> 'the user attempts to log in'
2025-02-04 15:43:16 - parse - DEBUG - format 'login should be {login_outcome}' -> 'login should be (?P<login_outcome>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the NTEU is logged in' -> 'the NTEU is logged in'
2025-02-04 15:43:16 - parse - DEBUG - format 'the NTEU navigates to the identity creation page' -> 'the NTEU navigates to the identity creation page'
2025-02-04 15:43:16 - parse - DEBUG - format 'the NTEU enters valid identity details' -> 'the NTEU enters valid identity details'
2025-02-04 15:43:16 - parse - DEBUG - format 'submits the form' -> 'submits the form'
2025-02-04 15:43:16 - parse - DEBUG - format 'the identity should be successfully created' -> 'the identity should be successfully created'
2025-02-04 15:43:16 - parse - DEBUG - format 'the NTEU navigates to the identity list' -> 'the NTEU navigates to the identity list'
2025-02-04 15:43:16 - parse - DEBUG - format 'selects an identity' -> 'selects an identity'
2025-02-04 15:43:16 - parse - DEBUG - format 'the identity details should be displayed' -> 'the identity details should be displayed'
2025-02-04 15:43:16 - parse - DEBUG - format 'the NTEU edits the identity details' -> 'the NTEU edits the identity details'
2025-02-04 15:43:16 - parse - DEBUG - format 'the identity should be updated successfully' -> 'the identity should be updated successfully'
2025-02-04 15:43:16 - parse - DEBUG - format 'the NTEU deletes the identity' -> 'the NTEU deletes the identity'
2025-02-04 15:43:16 - parse - DEBUG - format 'the identity should be removed' -> 'the identity should be removed'
2025-02-04 15:43:16 - parse - DEBUG - format 'the NTEU starts the device onboarding process' -> 'the NTEU starts the device onboarding process'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should automatically use a zero-touch onboarding protocol' -> 'the system should automatically use a zero-touch onboarding protocol'
2025-02-04 15:43:16 - parse - DEBUG - format 'the onboarding process should complete successfully' -> 'the onboarding process should complete successfully'
2025-02-04 15:43:16 - parse - DEBUG - format 'a digital identity exists' -> 'a digital identity exists'
2025-02-04 15:43:16 - parse - DEBUG - format 'the NTEU is on any action page' -> 'the NTEU is on any action page'
2025-02-04 15:43:16 - parse - DEBUG - format 'the NTEU enters invalid information' -> 'the NTEU enters invalid information'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should display a clear error message' -> 'the system should display a clear error message'
2025-02-04 15:43:16 - parse - DEBUG - format 'provide guidance for correction' -> 'provide guidance for correction'
2025-02-04 15:43:16 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-04 15:43:16 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-04 15:43:16 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-04 15:43:16 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-04 15:43:16 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-04 15:43:16 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-04 15:43:16 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-04 15:43:16 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-04 15:43:16 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-04 15:43:16 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-04 15:43:16 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-04 15:43:16 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-04 15:43:16 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-04 15:43:16 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-04 15:43:16 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-04 15:43:16 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-04 15:43:16 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-04 15:43:16 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-04 15:43:16 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-04 15:43:16 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-04 15:43:16 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-04 15:43:16 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-04 15:43:16 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-04 15:43:16 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-04 15:43:16 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-04 15:43:16 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-04 15:43:16 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-04 15:43:16 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-04 15:43:16 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-04 15:43:16 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-04 15:43:16 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-04 15:43:16 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-04 15:43:16 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-04 15:43:16 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-04 15:43:16 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-04 15:43:16 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-04 15:43:16 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-04 15:43:16 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-04 15:43:16 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-04 15:43:16 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-04 15:43:16 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-04 15:43:16 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-04 15:43:16 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-04 15:43:16 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-04 15:43:16 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-04 15:43:16 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-04 15:43:16 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-04 15:43:16 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-04 15:43:16 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-04 15:43:16 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-04 15:43:16 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-04 15:43:16 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-04 15:43:16 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-04 15:43:16 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-04 15:43:16 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-04 15:43:16 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-04 15:43:16 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-04 15:43:16 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-04 15:43:16 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-04 15:43:16 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-04 15:43:16 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-04 15:43:16 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-04 15:43:16 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-04 15:43:16 - parse - DEBUG - format 'the attempt should be logged' -> 'the attempt should be logged'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-04 15:46:37 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the TPC_Web application is running' -> 'the TPC_Web application is running'
2025-02-04 15:46:37 - parse - DEBUG - format 'the user is an NTEU with username {username} and password {password}' -> 'the user is an NTEU with username (?P<username>.+?) and password (?P<password>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the user attempts to log in' -> 'the user attempts to log in'
2025-02-04 15:46:37 - parse - DEBUG - format 'login should be {login_outcome}' -> 'login should be (?P<login_outcome>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the NTEU is logged in' -> 'the NTEU is logged in'
2025-02-04 15:46:37 - parse - DEBUG - format 'the NTEU navigates to the identity creation page' -> 'the NTEU navigates to the identity creation page'
2025-02-04 15:46:37 - parse - DEBUG - format 'the NTEU enters valid identity details' -> 'the NTEU enters valid identity details'
2025-02-04 15:46:37 - parse - DEBUG - format 'submits the form' -> 'submits the form'
2025-02-04 15:46:37 - parse - DEBUG - format 'the identity should be successfully created' -> 'the identity should be successfully created'
2025-02-04 15:46:37 - parse - DEBUG - format 'the NTEU navigates to the identity list' -> 'the NTEU navigates to the identity list'
2025-02-04 15:46:37 - parse - DEBUG - format 'selects an identity' -> 'selects an identity'
2025-02-04 15:46:37 - parse - DEBUG - format 'the identity details should be displayed' -> 'the identity details should be displayed'
2025-02-04 15:46:37 - parse - DEBUG - format 'the NTEU edits the identity details' -> 'the NTEU edits the identity details'
2025-02-04 15:46:37 - parse - DEBUG - format 'the identity should be updated successfully' -> 'the identity should be updated successfully'
2025-02-04 15:46:37 - parse - DEBUG - format 'the NTEU deletes the identity' -> 'the NTEU deletes the identity'
2025-02-04 15:46:37 - parse - DEBUG - format 'the identity should be removed' -> 'the identity should be removed'
2025-02-04 15:46:37 - parse - DEBUG - format 'the NTEU starts the device onboarding process' -> 'the NTEU starts the device onboarding process'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should automatically use a zero-touch onboarding protocol' -> 'the system should automatically use a zero-touch onboarding protocol'
2025-02-04 15:46:37 - parse - DEBUG - format 'the onboarding process should complete successfully' -> 'the onboarding process should complete successfully'
2025-02-04 15:46:37 - parse - DEBUG - format 'a digital identity exists' -> 'a digital identity exists'
2025-02-04 15:46:37 - parse - DEBUG - format 'the NTEU is on any action page' -> 'the NTEU is on any action page'
2025-02-04 15:46:37 - parse - DEBUG - format 'the NTEU enters invalid information' -> 'the NTEU enters invalid information'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should display a clear error message' -> 'the system should display a clear error message'
2025-02-04 15:46:37 - parse - DEBUG - format 'provide guidance for correction' -> 'provide guidance for correction'
2025-02-04 15:46:37 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-04 15:46:37 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-04 15:46:37 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-04 15:46:37 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-04 15:46:37 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-04 15:46:37 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-04 15:46:37 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-04 15:46:37 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-04 15:46:37 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-04 15:46:37 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-04 15:46:37 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-04 15:46:37 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-04 15:46:37 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-04 15:46:37 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-04 15:46:37 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-04 15:46:37 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-04 15:46:37 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-04 15:46:37 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-04 15:46:37 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-04 15:46:37 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-04 15:46:37 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-04 15:46:37 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-04 15:46:37 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-04 15:46:37 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-04 15:46:37 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-04 15:46:37 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-04 15:46:37 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-04 15:46:37 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-04 15:46:37 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-04 15:46:37 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-04 15:46:37 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-04 15:46:37 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-04 15:46:37 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-04 15:46:37 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-04 15:46:37 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-04 15:46:37 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-04 15:46:37 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-04 15:46:37 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-04 15:46:37 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-04 15:46:37 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-04 15:46:37 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-04 15:46:37 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-04 15:46:37 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-04 15:46:37 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-04 15:46:37 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-04 15:46:37 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-04 15:46:37 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-04 15:46:37 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-04 15:46:37 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-04 15:46:37 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-04 15:46:37 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-04 15:46:37 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-04 15:46:37 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-04 15:46:37 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-04 15:46:37 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-04 15:46:37 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-04 15:46:37 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-04 15:46:37 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-04 15:46:37 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-04 15:46:37 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-04 15:46:37 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-04 15:46:37 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-04 15:46:37 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-04 15:46:37 - parse - DEBUG - format 'the attempt should be logged' -> 'the attempt should be logged'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-04 15:47:03 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the TPC_Web application is running' -> 'the TPC_Web application is running'
2025-02-04 15:47:03 - parse - DEBUG - format 'the user is an NTEU with username {username} and password {password}' -> 'the user is an NTEU with username (?P<username>.+?) and password (?P<password>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the user attempts to log in' -> 'the user attempts to log in'
2025-02-04 15:47:03 - parse - DEBUG - format 'login should be {login_outcome}' -> 'login should be (?P<login_outcome>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the NTEU is logged in' -> 'the NTEU is logged in'
2025-02-04 15:47:03 - parse - DEBUG - format 'the NTEU navigates to the identity creation page' -> 'the NTEU navigates to the identity creation page'
2025-02-04 15:47:03 - parse - DEBUG - format 'the NTEU enters valid identity details' -> 'the NTEU enters valid identity details'
2025-02-04 15:47:03 - parse - DEBUG - format 'submits the form' -> 'submits the form'
2025-02-04 15:47:03 - parse - DEBUG - format 'the identity should be successfully created' -> 'the identity should be successfully created'
2025-02-04 15:47:03 - parse - DEBUG - format 'the NTEU navigates to the identity list' -> 'the NTEU navigates to the identity list'
2025-02-04 15:47:03 - parse - DEBUG - format 'selects an identity' -> 'selects an identity'
2025-02-04 15:47:03 - parse - DEBUG - format 'the identity details should be displayed' -> 'the identity details should be displayed'
2025-02-04 15:47:03 - parse - DEBUG - format 'the NTEU edits the identity details' -> 'the NTEU edits the identity details'
2025-02-04 15:47:03 - parse - DEBUG - format 'the identity should be updated successfully' -> 'the identity should be updated successfully'
2025-02-04 15:47:03 - parse - DEBUG - format 'the NTEU deletes the identity' -> 'the NTEU deletes the identity'
2025-02-04 15:47:03 - parse - DEBUG - format 'the identity should be removed' -> 'the identity should be removed'
2025-02-04 15:47:03 - parse - DEBUG - format 'the NTEU starts the device onboarding process' -> 'the NTEU starts the device onboarding process'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should automatically use a zero-touch onboarding protocol' -> 'the system should automatically use a zero-touch onboarding protocol'
2025-02-04 15:47:03 - parse - DEBUG - format 'the onboarding process should complete successfully' -> 'the onboarding process should complete successfully'
2025-02-04 15:47:03 - parse - DEBUG - format 'a digital identity exists' -> 'a digital identity exists'
2025-02-04 15:47:03 - parse - DEBUG - format 'the NTEU is on any action page' -> 'the NTEU is on any action page'
2025-02-04 15:47:03 - parse - DEBUG - format 'the NTEU enters invalid information' -> 'the NTEU enters invalid information'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should display a clear error message' -> 'the system should display a clear error message'
2025-02-04 15:47:03 - parse - DEBUG - format 'provide guidance for correction' -> 'provide guidance for correction'
2025-02-04 15:47:03 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-04 15:47:03 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-04 15:47:03 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-04 15:47:03 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-04 15:47:03 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-04 15:47:03 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-04 15:47:03 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-04 15:47:03 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-04 15:47:03 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-04 15:47:03 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-04 15:47:03 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-04 15:47:03 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-04 15:47:03 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-04 15:47:03 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-04 15:47:03 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-04 15:47:03 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-04 15:47:03 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-04 15:47:03 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-04 15:47:03 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-04 15:47:03 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-04 15:47:03 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-04 15:47:03 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-04 15:47:03 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-04 15:47:03 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-04 15:47:03 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-04 15:47:03 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-04 15:47:03 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-04 15:47:03 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-04 15:47:03 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-04 15:47:03 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-04 15:47:03 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-04 15:47:03 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-04 15:47:03 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-04 15:47:03 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-04 15:47:03 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-04 15:47:03 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-04 15:47:03 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-04 15:47:03 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-04 15:47:03 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-04 15:47:03 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-04 15:47:03 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-04 15:47:03 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-04 15:47:03 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-04 15:47:03 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-04 15:47:03 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-04 15:47:03 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-04 15:47:03 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-04 15:47:03 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-04 15:47:03 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-04 15:47:03 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-04 15:47:03 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-04 15:47:03 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-04 15:47:03 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-04 15:47:03 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-04 15:47:03 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-04 15:47:03 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-04 15:47:03 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-04 15:47:03 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-04 15:47:03 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-04 15:47:03 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-04 15:47:03 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-04 15:47:03 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-04 15:47:03 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-04 15:47:03 - parse - DEBUG - format 'the attempt should be logged' -> 'the attempt should be logged'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-04 15:48:12 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the TPC_Web application is running' -> 'the TPC_Web application is running'
2025-02-04 15:48:12 - parse - DEBUG - format 'the user is an NTEU with username {username} and password {password}' -> 'the user is an NTEU with username (?P<username>.+?) and password (?P<password>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the user attempts to log in' -> 'the user attempts to log in'
2025-02-04 15:48:12 - parse - DEBUG - format 'login should be {login_outcome}' -> 'login should be (?P<login_outcome>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the NTEU is logged in' -> 'the NTEU is logged in'
2025-02-04 15:48:12 - parse - DEBUG - format 'the NTEU navigates to the identity creation page' -> 'the NTEU navigates to the identity creation page'
2025-02-04 15:48:12 - parse - DEBUG - format 'the NTEU enters valid identity details' -> 'the NTEU enters valid identity details'
2025-02-04 15:48:12 - parse - DEBUG - format 'submits the form' -> 'submits the form'
2025-02-04 15:48:12 - parse - DEBUG - format 'the identity should be successfully created' -> 'the identity should be successfully created'
2025-02-04 15:48:12 - parse - DEBUG - format 'the NTEU navigates to the identity list' -> 'the NTEU navigates to the identity list'
2025-02-04 15:48:12 - parse - DEBUG - format 'selects an identity' -> 'selects an identity'
2025-02-04 15:48:12 - parse - DEBUG - format 'the identity details should be displayed' -> 'the identity details should be displayed'
2025-02-04 15:48:12 - parse - DEBUG - format 'the NTEU edits the identity details' -> 'the NTEU edits the identity details'
2025-02-04 15:48:12 - parse - DEBUG - format 'the identity should be updated successfully' -> 'the identity should be updated successfully'
2025-02-04 15:48:12 - parse - DEBUG - format 'the NTEU deletes the identity' -> 'the NTEU deletes the identity'
2025-02-04 15:48:12 - parse - DEBUG - format 'the identity should be removed' -> 'the identity should be removed'
2025-02-04 15:48:12 - parse - DEBUG - format 'the NTEU starts the device onboarding process' -> 'the NTEU starts the device onboarding process'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should automatically use a zero-touch onboarding protocol' -> 'the system should automatically use a zero-touch onboarding protocol'
2025-02-04 15:48:12 - parse - DEBUG - format 'the onboarding process should complete successfully' -> 'the onboarding process should complete successfully'
2025-02-04 15:48:12 - parse - DEBUG - format 'a digital identity exists' -> 'a digital identity exists'
2025-02-04 15:48:12 - parse - DEBUG - format 'the NTEU is on any action page' -> 'the NTEU is on any action page'
2025-02-04 15:48:12 - parse - DEBUG - format 'the NTEU enters invalid information' -> 'the NTEU enters invalid information'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should display a clear error message' -> 'the system should display a clear error message'
2025-02-04 15:48:12 - parse - DEBUG - format 'provide guidance for correction' -> 'provide guidance for correction'
2025-02-04 15:48:12 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-04 15:48:12 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-04 15:48:12 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-04 15:48:12 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-04 15:48:12 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-04 15:48:12 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-04 15:48:12 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-04 15:48:12 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-04 15:48:12 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-04 15:48:12 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-04 15:48:12 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-04 15:48:12 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-04 15:48:12 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-04 15:48:12 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-04 15:48:12 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-04 15:48:12 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-04 15:48:12 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-04 15:48:12 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-04 15:48:12 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-04 15:48:12 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-04 15:48:12 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-04 15:48:12 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-04 15:48:12 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-04 15:48:12 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-04 15:48:12 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-04 15:48:12 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-04 15:48:12 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-04 15:48:12 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-04 15:48:12 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-04 15:48:12 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-04 15:48:12 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-04 15:48:12 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-04 15:48:12 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-04 15:48:12 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-04 15:48:12 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-04 15:48:12 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-04 15:48:12 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-04 15:48:12 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-04 15:48:12 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-04 15:48:12 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-04 15:48:12 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-04 15:48:12 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-04 15:48:12 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-04 15:48:12 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-04 15:48:12 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-04 15:48:12 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-04 15:48:12 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-04 15:48:12 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-04 15:48:12 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-04 15:48:12 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-04 15:48:12 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-04 15:48:12 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-04 15:48:12 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-04 15:48:12 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-04 15:48:12 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-04 15:48:12 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-04 15:48:12 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-04 15:48:12 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-04 15:48:12 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-04 15:48:12 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-04 15:48:12 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-04 15:48:12 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-04 15:48:12 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-04 15:48:12 - parse - DEBUG - format 'the attempt should be logged' -> 'the attempt should be logged'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-04 15:51:06 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the TPC_Web application is running' -> 'the TPC_Web application is running'
2025-02-04 15:51:06 - parse - DEBUG - format 'the user is an NTEU with username {username} and password {password}' -> 'the user is an NTEU with username (?P<username>.+?) and password (?P<password>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the user attempts to log in' -> 'the user attempts to log in'
2025-02-04 15:51:06 - parse - DEBUG - format 'login should be {login_outcome}' -> 'login should be (?P<login_outcome>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the NTEU is logged in' -> 'the NTEU is logged in'
2025-02-04 15:51:06 - parse - DEBUG - format 'the NTEU navigates to the identity creation page' -> 'the NTEU navigates to the identity creation page'
2025-02-04 15:51:06 - parse - DEBUG - format 'the NTEU enters valid identity details' -> 'the NTEU enters valid identity details'
2025-02-04 15:51:06 - parse - DEBUG - format 'submits the form' -> 'submits the form'
2025-02-04 15:51:06 - parse - DEBUG - format 'the identity should be successfully created' -> 'the identity should be successfully created'
2025-02-04 15:51:06 - parse - DEBUG - format 'the NTEU navigates to the identity list' -> 'the NTEU navigates to the identity list'
2025-02-04 15:51:06 - parse - DEBUG - format 'selects an identity' -> 'selects an identity'
2025-02-04 15:51:06 - parse - DEBUG - format 'the identity details should be displayed' -> 'the identity details should be displayed'
2025-02-04 15:51:06 - parse - DEBUG - format 'the NTEU edits the identity details' -> 'the NTEU edits the identity details'
2025-02-04 15:51:06 - parse - DEBUG - format 'the identity should be updated successfully' -> 'the identity should be updated successfully'
2025-02-04 15:51:06 - parse - DEBUG - format 'the NTEU deletes the identity' -> 'the NTEU deletes the identity'
2025-02-04 15:51:06 - parse - DEBUG - format 'the identity should be removed' -> 'the identity should be removed'
2025-02-04 15:51:06 - parse - DEBUG - format 'the NTEU starts the device onboarding process' -> 'the NTEU starts the device onboarding process'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should automatically use a zero-touch onboarding protocol' -> 'the system should automatically use a zero-touch onboarding protocol'
2025-02-04 15:51:06 - parse - DEBUG - format 'the onboarding process should complete successfully' -> 'the onboarding process should complete successfully'
2025-02-04 15:51:06 - parse - DEBUG - format 'a digital identity exists' -> 'a digital identity exists'
2025-02-04 15:51:06 - parse - DEBUG - format 'the NTEU is on any action page' -> 'the NTEU is on any action page'
2025-02-04 15:51:06 - parse - DEBUG - format 'the NTEU enters invalid information' -> 'the NTEU enters invalid information'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should display a clear error message' -> 'the system should display a clear error message'
2025-02-04 15:51:06 - parse - DEBUG - format 'provide guidance for correction' -> 'provide guidance for correction'
2025-02-04 15:51:06 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-04 15:51:06 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-04 15:51:06 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-04 15:51:06 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-04 15:51:06 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-04 15:51:06 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-04 15:51:06 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-04 15:51:06 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-04 15:51:06 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-04 15:51:06 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-04 15:51:06 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-04 15:51:06 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-04 15:51:06 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-04 15:51:06 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-04 15:51:06 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-04 15:51:06 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-04 15:51:06 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-04 15:51:06 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-04 15:51:06 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-04 15:51:06 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-04 15:51:06 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-04 15:51:06 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-04 15:51:06 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-04 15:51:06 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-04 15:51:06 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-04 15:51:06 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-04 15:51:06 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-04 15:51:06 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-04 15:51:06 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-04 15:51:06 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-04 15:51:06 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-04 15:51:06 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-04 15:51:06 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-04 15:51:06 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-04 15:51:06 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-04 15:51:06 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-04 15:51:06 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-04 15:51:06 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-04 15:51:06 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-04 15:51:06 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-04 15:51:06 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-04 15:51:06 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-04 15:51:06 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-04 15:51:06 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-04 15:51:06 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-04 15:51:06 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-04 15:51:06 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-04 15:51:06 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-04 15:51:06 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-04 15:51:06 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-04 15:51:06 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-04 15:51:06 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-04 15:51:06 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-04 15:51:06 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-04 15:51:06 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-04 15:51:06 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-04 15:51:06 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-04 15:51:06 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-04 15:51:06 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-04 15:51:06 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-04 15:51:06 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-04 15:51:06 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-04 15:51:06 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-04 15:51:06 - parse - DEBUG - format 'the attempt should be logged' -> 'the attempt should be logged'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-04 15:52:33 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the TPC_Web application is running' -> 'the TPC_Web application is running'
2025-02-04 15:52:33 - parse - DEBUG - format 'the user is an NTEU with username {username} and password {password}' -> 'the user is an NTEU with username (?P<username>.+?) and password (?P<password>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the user attempts to log in' -> 'the user attempts to log in'
2025-02-04 15:52:33 - parse - DEBUG - format 'login should be {login_outcome}' -> 'login should be (?P<login_outcome>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the NTEU is logged in' -> 'the NTEU is logged in'
2025-02-04 15:52:33 - parse - DEBUG - format 'the NTEU navigates to the identity creation page' -> 'the NTEU navigates to the identity creation page'
2025-02-04 15:52:33 - parse - DEBUG - format 'the NTEU enters valid identity details' -> 'the NTEU enters valid identity details'
2025-02-04 15:52:33 - parse - DEBUG - format 'submits the form' -> 'submits the form'
2025-02-04 15:52:33 - parse - DEBUG - format 'the identity should be successfully created' -> 'the identity should be successfully created'
2025-02-04 15:52:33 - parse - DEBUG - format 'the NTEU navigates to the identity list' -> 'the NTEU navigates to the identity list'
2025-02-04 15:52:33 - parse - DEBUG - format 'selects an identity' -> 'selects an identity'
2025-02-04 15:52:33 - parse - DEBUG - format 'the identity details should be displayed' -> 'the identity details should be displayed'
2025-02-04 15:52:33 - parse - DEBUG - format 'the NTEU edits the identity details' -> 'the NTEU edits the identity details'
2025-02-04 15:52:33 - parse - DEBUG - format 'the identity should be updated successfully' -> 'the identity should be updated successfully'
2025-02-04 15:52:33 - parse - DEBUG - format 'the NTEU deletes the identity' -> 'the NTEU deletes the identity'
2025-02-04 15:52:33 - parse - DEBUG - format 'the identity should be removed' -> 'the identity should be removed'
2025-02-04 15:52:33 - parse - DEBUG - format 'the NTEU starts the device onboarding process' -> 'the NTEU starts the device onboarding process'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should automatically use a zero-touch onboarding protocol' -> 'the system should automatically use a zero-touch onboarding protocol'
2025-02-04 15:52:33 - parse - DEBUG - format 'the onboarding process should complete successfully' -> 'the onboarding process should complete successfully'
2025-02-04 15:52:33 - parse - DEBUG - format 'a digital identity exists' -> 'a digital identity exists'
2025-02-04 15:52:33 - parse - DEBUG - format 'the NTEU is on any action page' -> 'the NTEU is on any action page'
2025-02-04 15:52:33 - parse - DEBUG - format 'the NTEU enters invalid information' -> 'the NTEU enters invalid information'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should display a clear error message' -> 'the system should display a clear error message'
2025-02-04 15:52:33 - parse - DEBUG - format 'provide guidance for correction' -> 'provide guidance for correction'
2025-02-04 15:52:33 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-04 15:52:33 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-04 15:52:33 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-04 15:52:33 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-04 15:52:33 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-04 15:52:33 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-04 15:52:33 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-04 15:52:33 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-04 15:52:33 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-04 15:52:33 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-04 15:52:33 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-04 15:52:33 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-04 15:52:33 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-04 15:52:33 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-04 15:52:33 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-04 15:52:33 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-04 15:52:33 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-04 15:52:33 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-04 15:52:33 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-04 15:52:33 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-04 15:52:33 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-04 15:52:33 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-04 15:52:33 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-04 15:52:33 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-04 15:52:33 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-04 15:52:33 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-04 15:52:33 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-04 15:52:33 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-04 15:52:33 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-04 15:52:33 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-04 15:52:33 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-04 15:52:33 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-04 15:52:33 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-04 15:52:33 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-04 15:52:33 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-04 15:52:33 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-04 15:52:33 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-04 15:52:33 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-04 15:52:33 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-04 15:52:33 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-04 15:52:33 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-04 15:52:33 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-04 15:52:33 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-04 15:52:33 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-04 15:52:33 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-04 15:52:33 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-04 15:52:33 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-04 15:52:33 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-04 15:52:33 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-04 15:52:33 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-04 15:52:33 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-04 15:52:33 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-04 15:52:33 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-04 15:52:33 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-04 15:52:33 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-04 15:52:33 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-04 15:52:33 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-04 15:52:33 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-04 15:52:33 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-04 15:52:33 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-04 15:52:33 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-04 15:52:33 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-04 15:52:33 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-04 15:52:33 - parse - DEBUG - format 'the attempt should be logged' -> 'the attempt should be logged'
2025-02-04 15:53:15 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-04 15:53:15 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-04 15:53:15 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-04 15:53:15 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-04 15:53:15 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-04 15:53:15 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-05 14:24:28 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the TPC_Web application is running' -> 'the TPC_Web application is running'
2025-02-05 14:24:28 - parse - DEBUG - format 'the user is an NTEU with username {username} and password {password}' -> 'the user is an NTEU with username (?P<username>.+?) and password (?P<password>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the user attempts to log in' -> 'the user attempts to log in'
2025-02-05 14:24:28 - parse - DEBUG - format 'login should be {login_outcome}' -> 'login should be (?P<login_outcome>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the NTEU is logged in' -> 'the NTEU is logged in'
2025-02-05 14:24:28 - parse - DEBUG - format 'the NTEU navigates to the identity creation page' -> 'the NTEU navigates to the identity creation page'
2025-02-05 14:24:28 - parse - DEBUG - format 'the NTEU enters valid identity details' -> 'the NTEU enters valid identity details'
2025-02-05 14:24:28 - parse - DEBUG - format 'submits the form' -> 'submits the form'
2025-02-05 14:24:28 - parse - DEBUG - format 'the identity should be successfully created' -> 'the identity should be successfully created'
2025-02-05 14:24:28 - parse - DEBUG - format 'the NTEU navigates to the identity list' -> 'the NTEU navigates to the identity list'
2025-02-05 14:24:28 - parse - DEBUG - format 'selects an identity' -> 'selects an identity'
2025-02-05 14:24:28 - parse - DEBUG - format 'the identity details should be displayed' -> 'the identity details should be displayed'
2025-02-05 14:24:28 - parse - DEBUG - format 'the NTEU edits the identity details' -> 'the NTEU edits the identity details'
2025-02-05 14:24:28 - parse - DEBUG - format 'the identity should be updated successfully' -> 'the identity should be updated successfully'
2025-02-05 14:24:28 - parse - DEBUG - format 'the NTEU deletes the identity' -> 'the NTEU deletes the identity'
2025-02-05 14:24:28 - parse - DEBUG - format 'the identity should be removed' -> 'the identity should be removed'
2025-02-05 14:24:28 - parse - DEBUG - format 'the NTEU starts the device onboarding process' -> 'the NTEU starts the device onboarding process'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should automatically use a zero-touch onboarding protocol' -> 'the system should automatically use a zero-touch onboarding protocol'
2025-02-05 14:24:28 - parse - DEBUG - format 'the onboarding process should complete successfully' -> 'the onboarding process should complete successfully'
2025-02-05 14:24:28 - parse - DEBUG - format 'a digital identity exists' -> 'a digital identity exists'
2025-02-05 14:24:28 - parse - DEBUG - format 'the NTEU is on any action page' -> 'the NTEU is on any action page'
2025-02-05 14:24:28 - parse - DEBUG - format 'the NTEU enters invalid information' -> 'the NTEU enters invalid information'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should display a clear error message' -> 'the system should display a clear error message'
2025-02-05 14:24:28 - parse - DEBUG - format 'provide guidance for correction' -> 'provide guidance for correction'
2025-02-05 14:24:28 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-05 14:24:28 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-05 14:24:28 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-05 14:24:28 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-05 14:24:28 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-05 14:24:28 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-05 14:24:28 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-05 14:24:28 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-05 14:24:28 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-05 14:24:28 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-05 14:24:28 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-05 14:24:28 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-05 14:24:28 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-05 14:24:28 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-05 14:24:28 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-05 14:24:28 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-05 14:24:28 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-05 14:24:28 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-05 14:24:28 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-05 14:24:28 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-05 14:24:28 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-05 14:24:28 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-05 14:24:28 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-05 14:24:28 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-05 14:24:28 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-05 14:24:28 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-05 14:24:28 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-05 14:24:28 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-05 14:24:28 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-05 14:24:28 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-05 14:24:28 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-05 14:24:28 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-05 14:24:28 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-05 14:24:28 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-05 14:24:28 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-05 14:24:28 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-05 14:24:28 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-05 14:24:28 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-05 14:24:28 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-05 14:24:28 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-05 14:24:28 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-05 14:24:28 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-05 14:24:28 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-05 14:24:28 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-05 14:24:28 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-05 14:24:28 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-05 14:24:28 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-05 14:24:28 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-05 14:24:28 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-05 14:24:28 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-05 14:24:28 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-05 14:24:28 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-05 14:24:28 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-05 14:24:28 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-05 14:24:28 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-05 14:24:28 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-05 14:24:28 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-05 14:24:28 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-05 14:24:28 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-05 14:24:28 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-05 14:24:28 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-05 14:24:28 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-05 14:24:28 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-05 14:24:28 - parse - DEBUG - format 'the attempt should be logged' -> 'the attempt should be logged'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-05 14:26:47 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the TPC_Web application is running' -> 'the TPC_Web application is running'
2025-02-05 14:26:47 - parse - DEBUG - format 'the user is an NTEU with username {username} and password {password}' -> 'the user is an NTEU with username (?P<username>.+?) and password (?P<password>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the user attempts to log in' -> 'the user attempts to log in'
2025-02-05 14:26:47 - parse - DEBUG - format 'login should be {login_outcome}' -> 'login should be (?P<login_outcome>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the NTEU is logged in' -> 'the NTEU is logged in'
2025-02-05 14:26:47 - parse - DEBUG - format 'the NTEU navigates to the identity creation page' -> 'the NTEU navigates to the identity creation page'
2025-02-05 14:26:47 - parse - DEBUG - format 'the NTEU enters valid identity details' -> 'the NTEU enters valid identity details'
2025-02-05 14:26:47 - parse - DEBUG - format 'submits the form' -> 'submits the form'
2025-02-05 14:26:47 - parse - DEBUG - format 'the identity should be successfully created' -> 'the identity should be successfully created'
2025-02-05 14:26:47 - parse - DEBUG - format 'the NTEU navigates to the identity list' -> 'the NTEU navigates to the identity list'
2025-02-05 14:26:47 - parse - DEBUG - format 'selects an identity' -> 'selects an identity'
2025-02-05 14:26:47 - parse - DEBUG - format 'the identity details should be displayed' -> 'the identity details should be displayed'
2025-02-05 14:26:47 - parse - DEBUG - format 'the NTEU edits the identity details' -> 'the NTEU edits the identity details'
2025-02-05 14:26:47 - parse - DEBUG - format 'the identity should be updated successfully' -> 'the identity should be updated successfully'
2025-02-05 14:26:47 - parse - DEBUG - format 'the NTEU deletes the identity' -> 'the NTEU deletes the identity'
2025-02-05 14:26:47 - parse - DEBUG - format 'the identity should be removed' -> 'the identity should be removed'
2025-02-05 14:26:47 - parse - DEBUG - format 'the NTEU starts the device onboarding process' -> 'the NTEU starts the device onboarding process'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should automatically use a zero-touch onboarding protocol' -> 'the system should automatically use a zero-touch onboarding protocol'
2025-02-05 14:26:47 - parse - DEBUG - format 'the onboarding process should complete successfully' -> 'the onboarding process should complete successfully'
2025-02-05 14:26:47 - parse - DEBUG - format 'a digital identity exists' -> 'a digital identity exists'
2025-02-05 14:26:47 - parse - DEBUG - format 'the NTEU is on any action page' -> 'the NTEU is on any action page'
2025-02-05 14:26:47 - parse - DEBUG - format 'the NTEU enters invalid information' -> 'the NTEU enters invalid information'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should display a clear error message' -> 'the system should display a clear error message'
2025-02-05 14:26:47 - parse - DEBUG - format 'provide guidance for correction' -> 'provide guidance for correction'
2025-02-05 14:26:47 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-05 14:26:47 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-05 14:26:47 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-05 14:26:47 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-05 14:26:47 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-05 14:26:47 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-05 14:26:47 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-05 14:26:47 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-05 14:26:47 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-05 14:26:47 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-05 14:26:47 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-05 14:26:47 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-05 14:26:47 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-05 14:26:47 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-05 14:26:47 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-05 14:26:47 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-05 14:26:47 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-05 14:26:47 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-05 14:26:47 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-05 14:26:47 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-05 14:26:47 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-05 14:26:47 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-05 14:26:47 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-05 14:26:47 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-05 14:26:47 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-05 14:26:47 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-05 14:26:47 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-05 14:26:47 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-05 14:26:47 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-05 14:26:47 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-05 14:26:47 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-05 14:26:47 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-05 14:26:47 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-05 14:26:47 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-05 14:26:47 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-05 14:26:47 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-05 14:26:47 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-05 14:26:47 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-05 14:26:47 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-05 14:26:47 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-05 14:26:47 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-05 14:26:47 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-05 14:26:47 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-05 14:26:47 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-05 14:26:47 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-05 14:26:47 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-05 14:26:47 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-05 14:26:47 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-05 14:26:47 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-05 14:26:47 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-05 14:26:47 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-05 14:26:47 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-05 14:26:47 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-05 14:26:47 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-05 14:26:47 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-05 14:26:47 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-05 14:26:47 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-05 14:26:47 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-05 14:26:47 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-05 14:26:47 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-05 14:26:47 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-05 14:26:47 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-05 14:26:47 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-05 14:26:47 - parse - DEBUG - format 'the attempt should be logged' -> 'the attempt should be logged'
2025-02-06 10:08:14 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:08:15 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:08:15 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 10:08:15 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 10:08:15 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 10:08:15 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 10:11:03 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:11:03 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:11:03 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 10:11:03 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 10:11:03 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 10:11:03 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 10:43:21 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:43:21 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:43:21 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 10:43:21 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 10:43:21 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 10:43:21 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 10:48:05 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:48:05 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:48:06 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 10:48:06 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 10:48:06 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 10:48:06 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 10:49:02 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:49:02 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:49:02 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 10:49:02 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 10:49:02 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 10:49:02 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 10:53:33 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:53:33 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:53:34 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 10:53:34 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 10:53:34 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 10:53:34 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 10:54:01 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:54:01 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:54:01 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 10:54:01 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 10:54:01 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 10:54:01 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 10:54:23 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:54:24 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:54:24 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 10:54:24 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 10:54:24 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 10:54:24 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 10:55:15 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:55:15 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:55:15 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 10:55:15 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 10:55:15 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 10:55:15 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 10:56:13 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:56:14 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:56:14 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 10:56:14 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 10:56:14 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 10:56:14 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 10:56:31 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:56:31 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 10:56:31 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 10:56:31 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 10:56:31 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 10:56:31 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 12:39:53 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:39:53 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:39:53 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 12:39:53 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 12:39:53 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 12:39:53 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 12:42:20 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:42:21 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:42:21 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 12:42:21 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 12:42:21 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 12:42:21 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 12:42:39 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:42:39 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:42:40 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 12:42:40 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 12:42:40 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 12:42:40 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 12:43:59 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:43:59 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:44:00 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 12:44:00 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 12:44:00 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 12:44:00 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 12:48:54 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:48:54 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:48:54 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 12:48:54 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 12:48:54 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 12:48:54 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 12:49:22 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:49:22 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:49:22 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 12:49:22 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 12:49:22 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 12:49:22 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 12:50:11 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:50:11 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:50:11 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 12:50:11 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 12:50:11 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 12:50:11 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 12:50:31 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:50:32 - devices.models - INFO - Correct OTP entered for browser credential download for device test_device(credential id=1)
2025-02-06 12:50:32 - devices.models - WARNING - Incorrect OTP attempt 1 for browser credential download for device test_device (credential id=1)
2025-02-06 12:50:32 - devices.models - WARNING - Incorrect OTP attempt 2 for browser credential download for device test_device (credential id=1)
2025-02-06 12:50:32 - devices.models - WARNING - Incorrect OTP attempt 3 for browser credential download for device test_device (credential id=1)
2025-02-06 12:50:32 - devices.models - WARNING - Too many incorrect OTP attempts. Download invalidated.
2025-02-06 14:20:20 - django.utils.autoreload - INFO - Watching for file changes with StatReloader
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin user is logged into TPC_Web' -> 'the admin user is logged into TPC_Web'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should display a confirmation message' -> 'the system should display a confirmation message'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should display an error message stating {error_message}' -> 'the system should display an error message stating (?P<error_message>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'an API client is authenticated' -> 'an API client is authenticated'
2025-02-10 14:31:02 - parse - DEBUG - format 'the API response should have a status code of {status_code}' -> 'the API response should have a status code of (?P<status_code>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the response payload should include an error message stating {error_message}' -> 'the response payload should include an error message stating (?P<error_message>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the TPC_Web application is running' -> 'the TPC_Web application is running'
2025-02-10 14:31:02 - parse - DEBUG - format 'the user is an NTEU with username {username} and password {password}' -> 'the user is an NTEU with username (?P<username>.+?) and password (?P<password>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the user attempts to log in' -> 'the user attempts to log in'
2025-02-10 14:31:02 - parse - DEBUG - format 'login should be {login_outcome}' -> 'login should be (?P<login_outcome>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the NTEU is logged in' -> 'the NTEU is logged in'
2025-02-10 14:31:02 - parse - DEBUG - format 'the NTEU navigates to the identity creation page' -> 'the NTEU navigates to the identity creation page'
2025-02-10 14:31:02 - parse - DEBUG - format 'the NTEU enters valid identity details' -> 'the NTEU enters valid identity details'
2025-02-10 14:31:02 - parse - DEBUG - format 'submits the form' -> 'submits the form'
2025-02-10 14:31:02 - parse - DEBUG - format 'the identity should be successfully created' -> 'the identity should be successfully created'
2025-02-10 14:31:02 - parse - DEBUG - format 'the NTEU navigates to the identity list' -> 'the NTEU navigates to the identity list'
2025-02-10 14:31:02 - parse - DEBUG - format 'selects an identity' -> 'selects an identity'
2025-02-10 14:31:02 - parse - DEBUG - format 'the identity details should be displayed' -> 'the identity details should be displayed'
2025-02-10 14:31:02 - parse - DEBUG - format 'the NTEU edits the identity details' -> 'the NTEU edits the identity details'
2025-02-10 14:31:02 - parse - DEBUG - format 'the identity should be updated successfully' -> 'the identity should be updated successfully'
2025-02-10 14:31:02 - parse - DEBUG - format 'the NTEU deletes the identity' -> 'the NTEU deletes the identity'
2025-02-10 14:31:02 - parse - DEBUG - format 'the identity should be removed' -> 'the identity should be removed'
2025-02-10 14:31:02 - parse - DEBUG - format 'the NTEU starts the device onboarding process' -> 'the NTEU starts the device onboarding process'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should automatically use a zero-touch onboarding protocol' -> 'the system should automatically use a zero-touch onboarding protocol'
2025-02-10 14:31:02 - parse - DEBUG - format 'the onboarding process should complete successfully' -> 'the onboarding process should complete successfully'
2025-02-10 14:31:02 - parse - DEBUG - format 'a digital identity exists' -> 'a digital identity exists'
2025-02-10 14:31:02 - parse - DEBUG - format 'the NTEU is on any action page' -> 'the NTEU is on any action page'
2025-02-10 14:31:02 - parse - DEBUG - format 'the NTEU enters invalid information' -> 'the NTEU enters invalid information'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should display a clear error message' -> 'the system should display a clear error message'
2025-02-10 14:31:02 - parse - DEBUG - format 'provide guidance for correction' -> 'provide guidance for correction'
2025-02-10 14:31:02 - parse - DEBUG - format 'the identity {name} with {identifier} exists' -> 'the identity (?P<name>.+?) with (?P<identifier>.+?) exists'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin navigates to the identity details page for {name}' -> 'the admin navigates to the identity details page for (?P<name>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should display the correct details for {name} and {identifier}' -> 'the system should display the correct details for (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin navigates to the "Create Identity" page' -> 'the admin navigates to the "Create Identity" page'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin fills in the identity details with {name} and {identifier}' -> 'the admin fills in the identity details with (?P<name>.+?) and (?P<identifier>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin submits the form' -> 'the admin submits the form'
2025-02-10 14:31:02 - parse - DEBUG - format 'the new identity {name} with {identifier} should appear in the identity list' -> 'the new identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin updates the name to {name} and identifier to {identifier}' -> 'the admin updates the name to (?P<name>.+?) and identifier to (?P<identifier>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin saves the changes' -> 'the admin saves the changes'
2025-02-10 14:31:02 - parse - DEBUG - format 'the updated identity {name} with {identifier} should appear in the identity list' -> 'the updated identity (?P<name>.+?) with (?P<identifier>.+?) should appear in the identity list'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin deletes the identity with the name {name}' -> 'the admin deletes the identity with the name (?P<name>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the identity {name} should no longer appear in the identity list' -> 'the identity (?P<name>.+?) should no longer appear in the identity list'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin attempts to view the details of a non-existent identity {non_existent_ID}' -> 'the admin attempts to view the details of a non-existent identity (?P<non_existent_ID>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the certificate {certificate_id} exists and is close to expiration' -> 'the certificate (?P<certificate_id>.+?) exists and is close to expiration'
2025-02-10 14:31:02 - parse - DEBUG - format 'the certificate {certificate_id} exists and is active' -> 'the certificate (?P<certificate_id>.+?) exists and is active'
2025-02-10 14:31:02 - parse - DEBUG - format 'the certificate {certificate_id} exists and is revoked' -> 'the certificate (?P<certificate_id>.+?) exists and is revoked'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin navigates to the certificate management page for {certificate_id}' -> 'the admin navigates to the certificate management page for (?P<certificate_id>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin initiates the certificate renewal process' -> 'the admin initiates the certificate renewal process'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin initiates the certificate revocation process' -> 'the admin initiates the certificate revocation process'
2025-02-10 14:31:02 - parse - DEBUG - format 'the certificate {certificate_id} should have an updated expiration date' -> 'the certificate (?P<certificate_id>.+?) should have an updated expiration date'
2025-02-10 14:31:02 - parse - DEBUG - format 'the certificate {certificate_id} should have a status of "revoked"' -> 'the certificate (?P<certificate_id>.+?) should have a status of "revoked"'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin attempts to {renew_revoke} a non-existent certificate {non_existent}' -> 'the admin attempts to (?P<renew_revoke>.+?) a non-existent certificate (?P<non_existent>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin attempts to {renew_revoke} the certificate {cert}' -> 'the admin attempts to (?P<renew_revoke>.+?) the certificate (?P<cert>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the API client sends a POST request to "/api/identities" with the following payload:' -> 'the API client sends a POST request to "/api/identities" with the following payload:'
2025-02-10 14:31:02 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/<identifier>"' -> 'the API client sends a GET request to "/api/identities/<identifier>"'
2025-02-10 14:31:02 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:' -> 'the API client sends a PUT request to "/api/identities/<identifier>" with the following payload:'
2025-02-10 14:31:02 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/<identifier>"' -> 'the API client sends a DELETE request to "/api/identities/<identifier>"'
2025-02-10 14:31:02 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities" without authentication' -> 'the API client sends a GET request to "/api/identities" without authentication'
2025-02-10 14:31:02 - parse - DEBUG - format 'the response payload should include the created identity with:' -> 'the response payload should include the created identity with:'
2025-02-10 14:31:02 - parse - DEBUG - format 'the response payload should include the identity with:' -> 'the response payload should include the identity with:'
2025-02-10 14:31:02 - parse - DEBUG - format 'the identity {identity} exists' -> 'the identity (?P<identity>.+?) exists'
2025-02-10 14:31:02 - parse - DEBUG - format 'the API client sends a GET request to "/api/identities/{identity}' -> 'the API client sends a GET request to "/api/identities/(?P<identity>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the API client sends a PUT request to "/api/identities/{identity} with the following payload:' -> 'the API client sends a PUT request to "/api/identities/(?P<identity>.+?) with the following payload:'
2025-02-10 14:31:02 - parse - DEBUG - format 'the response payload should include the updated identity with:' -> 'the response payload should include the updated identity with:'
2025-02-10 14:31:02 - parse - DEBUG - format 'the API client sends a DELETE request to "/api/identities/{identity}' -> 'the API client sends a DELETE request to "/api/identities/(?P<identity>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the identity {identity} should no longer exist' -> 'the identity (?P<identity>.+?) should no longer exist'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin initiates a system backup' -> 'the admin initiates a system backup'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system confirms the backup process completes successfully' -> 'the system confirms the backup process completes successfully'
2025-02-10 14:31:02 - parse - DEBUG - format 'the backup file {backup_file} is retrievable and valid' -> 'the backup file (?P<backup_file>.+?) is retrievable and valid'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin uploads a backup file {backup_file}' -> 'the admin uploads a backup file (?P<backup_file>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system restores the data successfully' -> 'the system restores the data successfully'
2025-02-10 14:31:02 - parse - DEBUG - format 'the restored data is consistent with the backup file contents' -> 'the restored data is consistent with the backup file contents'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin triggers a system update' -> 'the admin triggers a system update'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system downloads and applies the update' -> 'the system downloads and applies the update'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system verifies the integrity and functionality post-update' -> 'the system verifies the integrity and functionality post-update'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin performs an action {action}' -> 'the admin performs an action (?P<action>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system logs the action {action} with relevant details' -> 'the system logs the action (?P<action>.+?) with relevant details'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin retrieves logs for the time range {time_range}' -> 'the admin retrieves logs for the time range (?P<time_range>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system displays logs within the {time_range}' -> 'the system displays logs within the (?P<time_range>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'logs can be filtered by {filter_criteria}' -> 'logs can be filtered by (?P<filter_criteria>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin modifies logging configuration to {log_level}' -> 'the admin modifies logging configuration to (?P<log_level>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system applies the new logging configuration' -> 'the system applies the new logging configuration'
2025-02-10 14:31:02 - parse - DEBUG - format 'logs reflect the new verbosity level {log_level}' -> 'logs reflect the new verbosity level (?P<log_level>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system restarts' -> 'the system restarts'
2025-02-10 14:31:02 - parse - DEBUG - format 'previous logs are still accessible' -> 'previous logs are still accessible'
2025-02-10 14:31:02 - parse - DEBUG - format 'unauthorized users cannot delete or modify logs' -> 'unauthorized users cannot delete or modify logs'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin configures the system for auto-generation of an Issuing CA' -> 'the admin configures the system for auto-generation of an Issuing CA'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system automatically generates the CA' -> 'the system automatically generates the CA'
2025-02-10 14:31:02 - parse - DEBUG - format 'the generated CA appears in the list of available CAs' -> 'the generated CA appears in the list of available CAs'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin sets the following CA configuration:' -> 'the admin sets the following CA configuration:'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system generates a CA with:' -> 'the system generates a CA with:'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin attempts to generate an Issuing CA with incomplete configuration' -> 'the admin attempts to generate an Issuing CA with incomplete configuration'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system prevents the CA from being generated' -> 'the system prevents the CA from being generated'
2025-02-10 14:31:02 - parse - DEBUG - format 'an appropriate error message is logged' -> 'an appropriate error message is logged'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin inspects the generated CA details' -> 'the admin inspects the generated CA details'
2025-02-10 14:31:02 - parse - DEBUG - format 'the CA should contain:' -> 'the CA should contain:'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin attempts to issue a certificate using the generated CA' -> 'the admin attempts to issue a certificate using the generated CA'
2025-02-10 14:31:02 - parse - DEBUG - format 'the certificate issuance should succeed' -> 'the certificate issuance should succeed'
2025-02-10 14:31:02 - parse - DEBUG - format 'the {endpoint} endpoint is available' -> 'the (?P<endpoint>.+?) endpoint is available'
2025-02-10 14:31:02 - parse - DEBUG - format 'a new device with identifier {device_id}' -> 'a new device with identifier (?P<device_id>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for a new certificate' -> 'the device sends a (?P<onboarding_protocol>.+?) request for a new certificate'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should issue a new certificate for {device_id}' -> 'the system should issue a new certificate for (?P<device_id>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the device should store the issued certificate' -> 'the device should store the issued certificate'
2025-02-10 14:31:02 - parse - DEBUG - format 'an onboarded device with identifier {device_id} and an active certificate' -> 'an onboarded device with identifier (?P<device_id>.+?) and an active certificate'
2025-02-10 14:31:02 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request for certificate renewal' -> 'the device sends a (?P<onboarding_protocol>.+?) request for certificate renewal'
2025-02-10 14:31:02 - parse - DEBUG - format 'the device should replace its old certificate with the new one' -> 'the device should replace its old certificate with the new one'
2025-02-10 14:31:02 - parse - DEBUG - format 'a device with invalid credentials' -> 'a device with invalid credentials'
2025-02-10 14:31:02 - parse - DEBUG - format 'the device sends a {onboarding_protocol} request' -> 'the device sends a (?P<onboarding_protocol>.+?) request'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should reject the request with an "Unauthorized" error' -> 'the system should reject the request with an "Unauthorized" error'
2025-02-10 14:31:02 - parse - DEBUG - format 'a registered device with identifier {device_id} and a valid certificate' -> 'a registered device with identifier (?P<device_id>.+?) and a valid certificate'
2025-02-10 14:31:02 - parse - DEBUG - format 'an admin revokes the certificate for {device_id}' -> 'an admin revokes the certificate for (?P<device_id>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should update the revocation list' -> 'the system should update the revocation list'
2025-02-10 14:31:02 - parse - DEBUG - format '{device_id} should no longer authenticate using its certificate' -> '(?P<device_id>.+?) should no longer authenticate using its certificate'
2025-02-10 14:31:02 - parse - DEBUG - format '{num_devices} devices are requesting certificates simultaneously via {onboarding_protocol}' -> '(?P<num_devices>.+?) devices are requesting certificates simultaneously via (?P<onboarding_protocol>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the {onboarding_protocol} endpoint processes the requests' -> 'the (?P<onboarding_protocol>.+?) endpoint processes the requests'
2025-02-10 14:31:02 - parse - DEBUG - format 'all certificates should be issued within {max_response_time} milliseconds' -> 'all certificates should be issued within (?P<max_response_time>.+?) milliseconds'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system supports the following languages:' -> 'the system supports the following languages:'
2025-02-10 14:31:02 - parse - DEBUG - format 'a new user accesses the system with browser language {language}' -> 'a new user accesses the system with browser language (?P<language>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should display the UI in {language}' -> 'the system should display the UI in (?P<language>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'a logged-in user' -> 'a logged-in user'
2025-02-10 14:31:02 - parse - DEBUG - format 'the user selects {language} from the language settings' -> 'the user selects (?P<language>.+?) from the language settings'
2025-02-10 14:31:02 - parse - DEBUG - format 'a user has selected {language} as their preferred language' -> 'a user has selected (?P<language>.+?) as their preferred language'
2025-02-10 14:31:02 - parse - DEBUG - format 'the user logs out and logs back in' -> 'the user logs out and logs back in'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system enforces certificate validation for all devices' -> 'the system enforces certificate validation for all devices'
2025-02-10 14:31:02 - parse - DEBUG - format 'a device has a {validity} certificate' -> 'a device has a (?P<validity>.+?) certificate'
2025-02-10 14:31:02 - parse - DEBUG - format 'a device does not present a certificate' -> 'a device does not present a certificate'
2025-02-10 14:31:02 - parse - DEBUG - format 'the device attempts to establish communication' -> 'the device attempts to establish communication'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should {allow_deny} the communication' -> 'the system should (?P<allow_deny>.+?) the communication'
2025-02-10 14:31:02 - parse - DEBUG - format 'log the authentication failure with reason {reason}' -> 'log the authentication failure with reason (?P<reason>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system enforces encrypted communication with algorithm {algorithm}' -> 'the system enforces encrypted communication with algorithm (?P<algorithm>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'a machine attempts to communicate using {algorithm}' -> 'a machine attempts to communicate using (?P<algorithm>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'a machine attempts to communicate without encryption' -> 'a machine attempts to communicate without encryption'
2025-02-10 14:31:02 - parse - DEBUG - format 'two machines establish a secure session using {key_exchange}' -> 'two machines establish a secure session using (?P<key_exchange>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'an encrypted message is tampered with' -> 'an encrypted message is tampered with'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system verifies the encryption' -> 'the system verifies the encryption'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system verifies the key exchange' -> 'the system verifies the key exchange'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system detects tampering' -> 'the system detects tampering'
2025-02-10 14:31:02 - parse - DEBUG - format 'the communication should be {continuing_action}' -> 'the communication should be (?P<continuing_action>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'log the failure with reason {reason}' -> 'log the failure with reason (?P<reason>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the TrustPoint component {component} is selected' -> 'the TrustPoint component (?P<component>.+?) is selected'
2025-02-10 14:31:02 - parse - DEBUG - format 'the TrustPoint component {component} has security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) has security level (?P<security_level>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the admin sets the security level to {security_level}' -> 'the admin sets the security level to (?P<security_level>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system is restarted' -> 'the system is restarted'
2025-02-10 14:31:02 - parse - DEBUG - format 'an unauthorized user attempts access' -> 'an unauthorized user attempts access'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should apply the security level {security_level}' -> 'the system should apply the security level (?P<security_level>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should reject the input with error {error_message}' -> 'the system should reject the input with error (?P<error_message>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the TrustPoint component {component} should still have security level {security_level}' -> 'the TrustPoint component (?P<component>.+?) should still have security level (?P<security_level>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'access should be denied' -> 'access should be denied'
2025-02-10 14:31:02 - parse - DEBUG - format 'the system should log the security level change with details' -> 'the system should log the security level change with details'
2025-02-10 14:31:02 - parse - DEBUG - format 'the user has role {role}' -> 'the user has role (?P<role>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'a certificate template named {template_name} exists' -> 'a certificate template named (?P<template_name>.+?) exists'
2025-02-10 14:31:02 - parse - DEBUG - format 'the user attempts to access certificate templates' -> 'the user attempts to access certificate templates'
2025-02-10 14:31:02 - parse - DEBUG - format 'the user attempts to modify the certificate template' -> 'the user attempts to modify the certificate template'
2025-02-10 14:31:02 - parse - DEBUG - format 'an unauthorized user attempts to access it' -> 'an unauthorized user attempts to access it'
2025-02-10 14:31:02 - parse - DEBUG - format 'a non-admin user attempts to delete it' -> 'a non-admin user attempts to delete it'
2025-02-10 14:31:02 - parse - DEBUG - format 'an admin exports the template' -> 'an admin exports the template'
2025-02-10 14:31:02 - parse - DEBUG - format 'a non-admin user attempts to export the template' -> 'a non-admin user attempts to export the template'
2025-02-10 14:31:02 - parse - DEBUG - format 'access should be {access_outcome}' -> 'access should be (?P<access_outcome>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'modification should be {modification_outcome}' -> 'modification should be (?P<modification_outcome>.+?)'
2025-02-10 14:31:02 - parse - DEBUG - format 'the deletion should be rejected' -> 'the deletion should be rejected'
2025-02-10 14:31:02 - parse - DEBUG - format 'an error message {error_message} should be shown' -> 'an error message (?P<error_message>.+?) should be shown'
2025-02-10 14:31:02 - parse - DEBUG - format 'the exported template should be encrypted' -> 'the exported template should be encrypted'
2025-02-10 14:31:02 - parse - DEBUG - format 'export should be denied' -> 'export should be denied'
2025-02-10 14:31:02 - parse - DEBUG - format 'the attempt should be logged' -> 'the attempt should be logged'
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:23 - root - INFO - (log) Hello World!
2025-02-10 16:02:24 - root - INFO - (log) Hello World!
2025-02-10 16:02:24 - root - INFO - (log) Hello World!
2025-02-10 16:02:24 - root - INFO - (log) Hello World!
2025-02-10 16:02:24 - root - INFO - (log) Hello World!
2025-02-10 16:02:24 - root - INFO - (log) Hello World!
2025-02-10 16:02:24 - root - INFO - (log) Hello World!
2025-02-10 16:02:24 - root - INFO - (log) Hello World!
2025-02-10 16:02:24 - root - INFO - (log) Hello World!
2025-02-10 16:02:24 - root - INFO - (log) Hello World!
2025-02-10 16:02:24 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:02:25 - root - INFO - (log) Hello World!
2025-02-10 16:03:23 - root - INFO - (log) Hello World!
2025-02-10 16:03:23 - root - INFO - (log) Hello World!
2025-02-10 16:03:23 - root - INFO - (log) Hello World!
2025-02-10 16:03:23 - root - INFO - (log) Hello World!
2025-02-10 16:03:23 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:24 - root - INFO - (log) Hello World!
2025-02-10 16:03:25 - root - INFO - (log) Hello World!
2025-02-10 16:03:25 - root - INFO - (log) Hello World!
2025-02-10 16:03:25 - root - INFO - (log) Hello World!
2025-02-10 16:03:25 - root - INFO - (log) Hello World!
2025-02-10 16:03:25 - root - INFO - (log) Hello World!
2025-02-10 16:03:25 - root - INFO - (log) Hello World!
2025-02-10 16:03:25 - root - INFO - (log) Hello World!
2025-02-10 16:03:25 - root - INFO - (log) Hello World!
2025-02-10 16:03:26 - root - INFO - (log) Hello World!
2025-02-10 16:03:26 - root - INFO - (log) Hello World!
2025-02-10 16:03:26 - root - INFO - (log) Hello World!
2025-02-10 16:03:26 - root - INFO - (log) Hello World!
2025-02-10 16:03:26 - root - INFO - (log) Hello World!
2025-02-10 16:03:26 - root - INFO - (log) Hello World!
2025-02-10 16:03:26 - root - INFO - (log) Hello World!
2025-02-10 16:03:26 - root - INFO - (log) Hello World!
2025-02-10 16:17:20 - root - INFO - (log) Hello World!
2025-02-10 16:17:20 - root - INFO - (log) Hello World!
2025-02-10 16:17:20 - root - INFO - (log) Hello World!
2025-02-10 16:17:20 - root - INFO - (log) Hello World!
2025-02-10 16:17:20 - root - INFO - (log) Hello World!
2025-02-10 16:17:20 - root - INFO - (log) Hello World!
2025-02-10 16:17:20 - root - INFO - (log) Hello World!
2025-02-10 16:17:20 - root - INFO - (log) Hello World!
2025-02-10 16:17:20 - root - INFO - (log) Hello World!
2025-02-10 16:17:20 - root - INFO - (log) Hello World!
2025-02-10 16:17:20 - root - INFO - (log) Hello World!
2025-02-10 16:17:20 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:21 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:22 - root - INFO - (log) Hello World!
2025-02-10 16:17:23 - root - INFO - (log) Hello World!
2025-02-10 16:17:23 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:01 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:02 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:03 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:44 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:45 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:18:46 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:15 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:16 - root - INFO - (log) Hello World!
2025-02-10 16:24:17 - root - INFO - (log) Hello World!
2025-02-10 16:24:17 - root - INFO - (log) Hello World!
2025-02-10 16:24:17 - root - INFO - (log) Hello World!
2025-02-10 16:24:17 - root - INFO - (log) Hello World!
2025-02-10 16:24:17 - root - INFO - (log) Hello World!
2025-02-10 16:24:17 - root - INFO - (log) Hello World!
2025-02-10 16:24:17 - root - INFO - (log) Hello World!
2025-02-10 16:24:17 - root - INFO - (log) Hello World!
2025-02-10 16:24:17 - root - INFO - (log) Hello World!
2025-02-10 16:24:17 - root - INFO - (log) Hello World!
2025-02-10 16:24:17 - root - INFO - (log) Hello World!
2025-02-10 16:24:18 - root - INFO - (log) Hello World!
2025-02-10 16:24:18 - root - INFO - (log) Hello World!
2025-02-10 16:24:18 - root - INFO - (log) Hello World!
2025-02-10 16:24:18 - root - INFO - (log) Hello World!
2025-02-10 16:24:18 - root - INFO - (log) Hello World!
2025-02-10 16:47:20 - root - INFO - (log) Hello World!
2025-02-10 16:47:20 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:21 - root - INFO - (log) Hello World!
2025-02-10 16:47:22 - root - INFO - (log) Hello World!
2025-02-10 16:47:22 - root - INFO - (log) Hello World!
2025-02-10 16:47:22 - root - INFO - (log) Hello World!
2025-02-10 16:47:22 - root - INFO - (log) Hello World!
2025-02-10 16:47:22 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:47:23 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:49 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:50 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-10 16:51:51 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:04 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:05 - root - INFO - (log) Hello World!
2025-02-11 07:08:06 - root - INFO - (log) Hello World!
2025-02-11 07:08:06 - root - INFO - (log) Hello World!
2025-02-11 07:08:06 - root - INFO - (log) Hello World!
2025-02-11 07:08:06 - root - INFO - (log) Hello World!
2025-02-11 07:08:06 - root - INFO - (log) Hello World!
2025-02-11 07:08:06 - root - INFO - (log) Hello World!
2025-02-11 07:08:06 - root - INFO - (log) Hello World!
2025-02-11 07:08:06 - root - INFO - (log) Hello World!
2025-02-11 07:08:07 - root - INFO - (log) Hello World!
2025-02-11 07:08:07 - root - INFO - (log) Hello World!
2025-02-11 07:08:07 - root - INFO - (log) Hello World!
2025-02-11 07:08:07 - root - INFO - (log) Hello World!
2025-02-11 07:08:07 - root - INFO - (log) Hello World!
2025-02-11 07:08:07 - root - INFO - (log) Hello World!
2025-02-11 07:08:07 - root - INFO - (log) Hello World!
2025-02-11 07:08:07 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:26 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:27 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:11:29 - root - INFO - (log) Hello World!
2025-02-11 07:18:45 - root - INFO - (log) Hello World!
2025-02-11 07:18:45 - root - INFO - (log) Hello World!
2025-02-11 07:18:45 - root - INFO - (log) Hello World!
2025-02-11 07:18:45 - root - INFO - (log) Hello World!
2025-02-11 07:18:45 - root - INFO - (log) Hello World!
2025-02-11 07:18:45 - root - INFO - (log) Hello World!
2025-02-11 07:18:45 - root - INFO - (log) Hello World!
2025-02-11 07:18:45 - root - INFO - (log) Hello World!
2025-02-11 07:18:45 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:46 - root - INFO - (log) Hello World!
2025-02-11 07:18:47 - root - INFO - (log) Hello World!
2025-02-11 07:18:47 - root - INFO - (log) Hello World!
2025-02-11 07:18:47 - root - INFO - (log) Hello World!
2025-02-11 07:18:47 - root - INFO - (log) Hello World!
2025-02-11 07:18:47 - root - INFO - (log) Hello World!
2025-02-11 07:18:47 - root - INFO - (log) Hello World!
2025-02-11 07:18:47 - root - INFO - (log) Hello World!
2025-02-11 07:18:47 - root - INFO - (log) Hello World!
2025-02-11 07:18:48 - root - INFO - (log) Hello World!
2025-02-11 07:18:48 - root - INFO - (log) Hello World!
2025-02-11 07:18:48 - root - INFO - (log) Hello World!
2025-02-11 07:18:48 - root - INFO - (log) Hello World!
2025-02-11 07:18:48 - root - INFO - (log) Hello World!
2025-02-11 07:18:48 - root - INFO - (log) Hello World!
2025-02-11 07:18:48 - root - INFO - (log) Hello World!
2025-02-11 07:18:48 - root - INFO - (log) Hello World!
2025-02-11 07:18:48 - root - INFO - (log) Hello World!
2025-02-11 07:18:48 - root - INFO - (log) Hello World!
2025-02-11 07:18:48 - root - INFO - (log) Hello World!
2025-02-11 07:18:49 - root - INFO - (log) Hello World!
2025-02-11 07:18:49 - root - INFO - (log) Hello World!
2025-02-11 07:18:49 - root - INFO - (log) Hello World!
2025-02-11 07:18:49 - root - INFO - (log) Hello World!
2025-02-11 07:18:49 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:45 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:46 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:53:47 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:03 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:04 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 07:56:05 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:01 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:02 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:00:03 - root - INFO - (log) Hello World!
2025-02-11 08:02:42 - root - INFO - (log) Hello World!
2025-02-11 08:02:42 - root - INFO - (log) Hello World!
2025-02-11 08:02:42 - root - INFO - (log) Hello World!
2025-02-11 08:02:42 - root - INFO - (log) Hello World!
2025-02-11 08:02:42 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:43 - root - INFO - (log) Hello World!
2025-02-11 08:02:44 - root - INFO - (log) Hello World!
2025-02-11 08:02:44 - root - INFO - (log) Hello World!
2025-02-11 08:02:44 - root - INFO - (log) Hello World!
2025-02-11 08:02:44 - root - INFO - (log) Hello World!
2025-02-11 08:02:44 - root - INFO - (log) Hello World!
2025-02-11 08:02:44 - root - INFO - (log) Hello World!
2025-02-11 08:02:44 - root - INFO - (log) Hello World!
2025-02-11 08:02:44 - root - INFO - (log) Hello World!
2025-02-11 08:02:44 - root - INFO - (log) Hello World!
2025-02-11 08:02:44 - root - INFO - (log) Hello World!
2025-02-11 08:02:44 - root - INFO - (log) Hello World!
2025-02-11 08:02:45 - root - INFO - (log) Hello World!
2025-02-11 08:02:45 - root - INFO - (log) Hello World!
2025-02-11 08:02:45 - root - INFO - (log) Hello World!
2025-02-11 08:02:45 - root - INFO - (log) Hello World!
2025-02-11 08:02:45 - root - INFO - (log) Hello World!
2025-02-11 08:08:08 - root - INFO - (log) Hello World!
2025-02-11 08:08:08 - root - INFO - (log) Hello World!
2025-02-11 08:08:08 - root - INFO - (log) Hello World!
2025-02-11 08:08:08 - root - INFO - (log) Hello World!
2025-02-11 08:08:08 - root - INFO - (log) Hello World!
2025-02-11 08:08:08 - root - INFO - (log) Hello World!
2025-02-11 08:08:08 - root - INFO - (log) Hello World!
2025-02-11 08:08:08 - root - INFO - (log) Hello World!
2025-02-11 08:08:08 - root - INFO - (log) Hello World!
2025-02-11 08:08:08 - root - INFO - (log) Hello World!
2025-02-11 08:08:08 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:09 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:10 - root - INFO - (log) Hello World!
2025-02-11 08:08:11 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:38 - root - INFO - (log) Hello World!
2025-02-11 08:45:39 - root - INFO - (log) Hello World!
2025-02-11 08:45:39 - root - INFO - (log) Hello World!
2025-02-11 08:45:39 - root - INFO - (log) Hello World!
2025-02-11 08:45:39 - root - INFO - (log) Hello World!
2025-02-11 08:45:39 - root - INFO - (log) Hello World!
2025-02-11 08:45:39 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:45:40 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:20 - root - INFO - (log) Hello World!
2025-02-11 08:47:21 - root - INFO - (log) Hello World!
2025-02-11 08:47:21 - root - INFO - (log) Hello World!
2025-02-11 08:47:21 - root - INFO - (log) Hello World!
2025-02-11 08:47:21 - root - INFO - (log) Hello World!
2025-02-11 08:47:21 - root - INFO - (log) Hello World!
2025-02-11 08:47:21 - root - INFO - (log) Hello World!
2025-02-11 08:47:21 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:47:22 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:04 - root - INFO - (log) Hello World!
2025-02-11 08:57:05 - root - INFO - (log) Hello World!
2025-02-11 08:57:05 - root - INFO - (log) Hello World!
2025-02-11 08:57:05 - root - INFO - (log) Hello World!
2025-02-11 08:57:05 - root - INFO - (log) Hello World!
2025-02-11 08:57:05 - root - INFO - (log) Hello World!
2025-02-11 08:57:05 - root - INFO - (log) Hello World!
2025-02-11 08:57:05 - root - INFO - (log) Hello World!
2025-02-11 08:57:05 - root - INFO - (log) Hello World!
2025-02-11 08:57:05 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 08:57:06 - root - INFO - (log) Hello World!
2025-02-11 09:16:27 - root - INFO - (log) Hello World!
2025-02-11 09:16:27 - root - INFO - (log) Hello World!
2025-02-11 09:16:27 - root - INFO - (log) Hello World!
2025-02-11 09:16:27 - root - INFO - (log) Hello World!
2025-02-11 09:16:27 - root - INFO - (log) Hello World!
2025-02-11 09:16:27 - root - INFO - (log) Hello World!
2025-02-11 09:16:27 - root - INFO - (log) Hello World!
2025-02-11 09:16:27 - root - INFO - (log) Hello World!
2025-02-11 09:16:27 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:28 - root - INFO - (log) Hello World!
2025-02-11 09:16:29 - root - INFO - (log) Hello World!
2025-02-11 09:16:29 - root - INFO - (log) Hello World!
2025-02-11 09:16:29 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 09:16:30 - root - INFO - (log) Hello World!
2025-02-11 12:17:55 - root - WARNING - TODO: Logging test!
2025-02-11 12:19:03 - root - WARNING - TODO: Logging test!
2025-02-11 12:55:19 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:20 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:20 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:21 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:21 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:22 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:22 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:23 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:24 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:24 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:25 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:25 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:26 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:27 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:27 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:28 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:28 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:29 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:30 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:30 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:31 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:32 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:32 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:33 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:34 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:34 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:35 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:35 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:36 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:37 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:37 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:38 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:38 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:39 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:40 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:40 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:41 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:42 - root - WARNING - TODO: Logging test!
2025-02-11 12:55:43 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:44 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:45 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:45 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:46 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:46 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:47 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:48 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:48 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:49 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:50 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:50 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:51 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:52 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:52 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:53 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 12:55:53 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:32:57 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:32:58 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:32:59 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:01 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:02 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:03 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:04 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:05 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:06 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:08 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:09 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:10 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:11 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:12 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:13 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:14 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:16 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:17 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:18 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:19 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:20 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:22 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:23 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:24 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:25 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:26 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:27 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:28 - root - WARNING - TODO: Logging does not yet work!
2025-02-11 13:33:30 - root - WARNING - TODO: Logging does not yet work!
